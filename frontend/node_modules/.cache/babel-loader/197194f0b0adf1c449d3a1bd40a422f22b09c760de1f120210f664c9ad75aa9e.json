{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\RSE\\\\frontend\\\\src\\\\components\\\\Auth\\\\Login.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\"; // ✅ on utilise ton hook\r\nimport './Auth.css';\r\n\r\nfunction Login() {\r\n  const { setUser } = useAuth(); // ✅ appel du hook dans le composant\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      console.log(\"Réponse backend :\", res.data);\r\n\r\n      // ✅ Sauvegarde du token et rôle dans localStorage\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"role\", res.data.role);\r\n\r\n      // ✅ Mise à jour du contexte global\r\n      setUser({\r\n        token: res.data.token,\r\n        role: res.data.role,\r\n      });\r\n\r\n      // ✅ Redirection selon rôle\r\n      if (res.data.role === \"admin\") {\r\n        navigate(\"/admin\");\r\n      } else {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur login :\", err);\r\n      setError(\"Email ou mot de passe invalide\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Connexion</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nimport React, { useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//import { AuthContext } from \"../../context/AuthContext\"; // ton context\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\n\r\nconst { user, setUser } = useAuth();\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { setUser } = useContext(AuthContext);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      console.log(\"Réponse backend :\", res.data);\r\n\r\n      // ✅ Sauvegarde du token et user\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"role\", res.data.role);\r\n\r\n      setUser({\r\n        token: res.data.token,\r\n        role: res.data.role,\r\n      });\r\n\r\n      // ✅ Redirection selon rôle\r\n      if (res.data.role === \"admin\") {\r\n        navigate(\"/admin\");\r\n      } else {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur login :\", err);\r\n      setError(\"Email ou mot de passe invalide\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Connexion</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*/\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { loginUser } from \"../../services/api\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      var _response$data;\n      const response = await loginUser(formData);\n      // IMPORTANT : Axios => data.token\n      const token = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.token;\n      if (!token) {\n        setError(\"Réponse inattendue du serveur (pas de token).\");\n        return;\n      }\n\n      // IMPORTANT : la clé doit être \"token\" pour l'intercepteur\n      localStorage.setItem(\"token\", token);\n      navigate(\"/dashboard\");\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data;\n      // 404 => route inexistante côté backend, 401 => mauvais identifiants\n      const msg = (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 404 ? \"Route /api/auth/login introuvable côté serveur.\" : (err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Identifiants incorrects.\";\n      setError(msg);\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connexion \\xE0 GreenCampus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"auth-btn\",\n          children: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-footer\",\n        children: [\"Pas encore inscrit ?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => navigate(\"/register\"),\n          children: \"Cr\\xE9er un compte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"v98Fo72fWObdgd3VbW30VXfjWK4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\n\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\"; // ✅ utilise ton fichier api.js\r\n\r\nimport \"./Auth.css\"; // ✅ pour le style\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\"); // ✅ state pour afficher les erreurs\r\n  const navigate = useNavigate();\r\n\r\n  // 🔹 gérer les changements dans les inputs\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // 🔹 soumettre le formulaire\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // ✅ appelle la fonction loginUser depuis services/api.js\r\n      const response = await loginUser(formData);\r\n\r\n      // ✅ stocke le token dans localStorage\r\n      localStorage.setItem(\"authToken\", response.token);\r\n\r\n      // ✅ redirige vers la page d'accueil ou dashboard\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      // ✅ affiche l’erreur proprement\r\n      setError(\"Identifiants incorrects. Réessayez.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion à GreenCampus</h2>\r\n\r\n        {/* ✅ affiche l'erreur s'il y en a */\n/*  {error && <p className=\"error\">{error}</p>}\r\n  /*  <form onSubmit={handleSubmit}>\r\n    <div className=\"form-group\">\r\n      <label>Email</label>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={formData.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n    </div>\r\n      <div className=\"form-group\">\r\n      <label>Mot de passe</label>\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={formData.password}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n    </div>\r\n      <button type=\"submit\" className=\"auth-btn\">\r\n      Se connecter\r\n    </button>\r\n  </form>\r\n    <p className=\"auth-footer\">\r\n    Pas encore inscrit ?{\" \"}\r\n    <span onClick={() => navigate(\"/register\")}>Créer un compte</span>\r\n  </p>\r\n</div>\r\n</div>\r\n);\r\n};\r\nexport default Login;\r\n*/\n\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\";\r\n\r\nfunction Login() {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { loginUser } from \"../../services/api\"; // <-- on utilise l'API centralisée\r\nimport './Auth.css';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const [error, setError] = useState('');\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };*****\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('/api/auth/login', credentials);\r\n      \r\n      // Stockez le token dans localStorage\r\n      localStorage.setItem('authToken', response.data.token);\r\n      \r\n      // Redirigez vers la page d'accueil\r\n      navigate('/');\r\n    } catch (error) {\r\n      // Gestion des erreurs\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion à GreenCampus</h2>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"auth-btn\">Se connecter</button>\r\n        </form>\r\n        \r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit? <span onClick={() => navigate('/register')}>Créer un compte</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","loginUser","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","error","setError","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","_response$data","response","token","data","localStorage","setItem","err","_err$response","_err$response2","_err$response2$data","msg","status","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/wamp64/www/RSE/frontend/src/components/Auth/Login.js"],"sourcesContent":["/*import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\"; // ✅ on utilise ton hook\r\nimport './Auth.css';\r\n\r\nfunction Login() {\r\n  const { setUser } = useAuth(); // ✅ appel du hook dans le composant\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      console.log(\"Réponse backend :\", res.data);\r\n\r\n      // ✅ Sauvegarde du token et rôle dans localStorage\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"role\", res.data.role);\r\n\r\n      // ✅ Mise à jour du contexte global\r\n      setUser({\r\n        token: res.data.token,\r\n        role: res.data.role,\r\n      });\r\n\r\n      // ✅ Redirection selon rôle\r\n      if (res.data.role === \"admin\") {\r\n        navigate(\"/admin\");\r\n      } else {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur login :\", err);\r\n      setError(\"Email ou mot de passe invalide\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Connexion</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nimport React, { useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//import { AuthContext } from \"../../context/AuthContext\"; // ton context\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\n\r\nconst { user, setUser } = useAuth();\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { setUser } = useContext(AuthContext);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      console.log(\"Réponse backend :\", res.data);\r\n\r\n      // ✅ Sauvegarde du token et user\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"role\", res.data.role);\r\n\r\n      setUser({\r\n        token: res.data.token,\r\n        role: res.data.role,\r\n      });\r\n\r\n      // ✅ Redirection selon rôle\r\n      if (res.data.role === \"admin\") {\r\n        navigate(\"/admin\");\r\n      } else {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur login :\", err);\r\n      setError(\"Email ou mot de passe invalide\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Connexion</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\";\r\nimport \"./Auth.css\";\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await loginUser(formData);\r\n      // IMPORTANT : Axios => data.token\r\n      const token = response?.data?.token;\r\n\r\n      if (!token) {\r\n        setError(\"Réponse inattendue du serveur (pas de token).\");\r\n        return;\r\n      }\r\n\r\n      // IMPORTANT : la clé doit être \"token\" pour l'intercepteur\r\n     localStorage.setItem(\"token\", token);\r\n    \r\n\r\n\r\n      navigate(\"/dashboard\");\r\n    } catch (err) {\r\n      // 404 => route inexistante côté backend, 401 => mauvais identifiants\r\n      const msg =\r\n        err?.response?.status === 404\r\n          ? \"Route /api/auth/login introuvable côté serveur.\"\r\n          : err?.response?.data?.message || \"Identifiants incorrects.\";\r\n      setError(msg);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion à GreenCampus</h2>\r\n\r\n        {error && <p className=\"error\">{error}</p>}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"auth-btn\">Se connecter</button>\r\n        </form>\r\n\r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit ?{\" \"}\r\n          <span onClick={() => navigate(\"/register\")}>Créer un compte</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\"; // ✅ utilise ton fichier api.js\r\n\r\nimport \"./Auth.css\"; // ✅ pour le style\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\"); // ✅ state pour afficher les erreurs\r\n  const navigate = useNavigate();\r\n\r\n  // 🔹 gérer les changements dans les inputs\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // 🔹 soumettre le formulaire\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // ✅ appelle la fonction loginUser depuis services/api.js\r\n      const response = await loginUser(formData);\r\n\r\n      // ✅ stocke le token dans localStorage\r\n      localStorage.setItem(\"authToken\", response.token);\r\n\r\n      // ✅ redirige vers la page d'accueil ou dashboard\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      // ✅ affiche l’erreur proprement\r\n      setError(\"Identifiants incorrects. Réessayez.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion à GreenCampus</h2>\r\n\r\n        {/* ✅ affiche l'erreur s'il y en a */\r\n      /*  {error && <p className=\"error\">{error}</p>}\r\n\r\n      /*  <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"auth-btn\">\r\n            Se connecter\r\n          </button>\r\n        </form>\r\n\r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit ?{\" \"}\r\n          <span onClick={() => navigate(\"/register\")}>Créer un compte</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\";\r\n\r\nfunction Login() {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { loginUser } from \"../../services/api\"; // <-- on utilise l'API centralisée\r\nimport './Auth.css';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const [error, setError] = useState('');\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };*****\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('/api/auth/login', credentials);\r\n      \r\n      // Stockez le token dans localStorage\r\n      localStorage.setItem('authToken', response.data.token);\r\n      \r\n      // Redirigez vers la page d'accueil\r\n      navigate('/');\r\n    } catch (error) {\r\n      // Gestion des erreurs\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion à GreenCampus</h2>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"auth-btn\">Se connecter</button>\r\n        </form>\r\n        \r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit? <span onClick={() => navigate('/register')}>Créer un compte</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/"],"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AAa;YACvB8B,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENpC,OAAA;UAAQsC,IAAI,EAAC,QAAQ;UAACP,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eAEPpC,OAAA;QAAG+B,SAAS,EAAC,aAAa;QAAAC,QAAA,GAAC,sBACL,EAAC,GAAG,eACxBhC,OAAA;UAAMyC,OAAO,EAAEA,CAAA,KAAMhC,QAAQ,CAAC,WAAW,CAAE;UAAAuB,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClC,EAAA,CA9EID,KAAK;EAAA,QAGQJ,WAAW;AAAA;AAAA6C,EAAA,GAHxBzC,KAAK;AAgFX,eAAeA,KAAK;;AAGpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvFA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}