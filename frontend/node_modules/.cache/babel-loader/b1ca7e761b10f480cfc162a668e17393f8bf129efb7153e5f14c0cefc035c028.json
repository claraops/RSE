{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\RSE\\\\frontend\\\\src\\\\components\\\\Auth\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const {\n    setUser\n  } = useAuth(); // ✅ ici c’est bien récupéré du Provider\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\n        email,\n        password\n      });\n\n      // ✅ Stockage user dans le contexte\n      setUser({\n        token: res.data.token,\n        role: res.data.role\n      });\n\n      // ✅ Redirection\n      if (res.data.role === \"admin\") {\n        navigate(\"/admin\");\n      } else {\n        navigate(\"/dashboard\");\n      }\n    } catch (err) {\n      console.error(\"Erreur login :\", err);\n      setError(\"Email ou mot de passe invalide\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Mot de passe\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Se connecter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"npgmJeg3pxPbXXlvzsDCJ8OaLAQ=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Login;\nexport default Login;\n\n/*\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\"; // ✅ on utilise ton hook\r\n\r\nfunction Login() {\r\n  const { setUser } = useAuth(); // ✅ appel du hook dans le composant\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      console.log(\"Réponse backend :\", res.data);\r\n\r\n      // ✅ Sauvegarde du token et rôle dans localStorage\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"role\", res.data.role);\r\n\r\n      // ✅ Mise à jour du contexte global\r\n      setUser({\r\n        token: res.data.token,\r\n        role: res.data.role,\r\n      });\r\n\r\n      // ✅ Redirection selon rôle\r\n      if (res.data.role === \"admin\") {\r\n        navigate(\"/admin\");\r\n      } else {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur login :\", err);\r\n      setError(\"Email ou mot de passe invalide\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Connexion</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nimport React, { useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//import { AuthContext } from \"../../context/AuthContext\"; // ton context\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\n\r\nconst { user, setUser } = useAuth();\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { setUser } = useContext(AuthContext);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      console.log(\"Réponse backend :\", res.data);\r\n\r\n      // ✅ Sauvegarde du token et user\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"role\", res.data.role);\r\n\r\n      setUser({\r\n        token: res.data.token,\r\n        role: res.data.role,\r\n      });\r\n\r\n      // ✅ Redirection selon rôle\r\n      if (res.data.role === \"admin\") {\r\n        navigate(\"/admin\");\r\n      } else {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur login :\", err);\r\n      setError(\"Email ou mot de passe invalide\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Connexion</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\";\r\nimport \"./Auth.css\";\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await loginUser(formData);\r\n      // IMPORTANT : Axios => data.token\r\n      const token = response?.data?.token;\r\n\r\n      if (!token) {\r\n        setError(\"Réponse inattendue du serveur (pas de token).\");\r\n        return;\r\n      }\r\n\r\n      // IMPORTANT : la clé doit être \"token\" pour l'intercepteur\r\n     localStorage.setItem(\"token\", token);\r\n    \r\n\r\n\r\n      navigate(\"/dashboard\");\r\n    } catch (err) {\r\n      // 404 => route inexistante côté backend, 401 => mauvais identifiants\r\n      const msg =\r\n        err?.response?.status === 404\r\n          ? \"Route /api/auth/login introuvable côté serveur.\"\r\n          : err?.response?.data?.message || \"Identifiants incorrects.\";\r\n      setError(msg);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion à GreenCampus</h2>\r\n\r\n        {error && <p className=\"error\">{error}</p>}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"auth-btn\">Se connecter</button>\r\n        </form>\r\n\r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit ?{\" \"}\r\n          <span onClick={() => navigate(\"/register\")}>Créer un compte</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\"; // ✅ utilise ton fichier api.js\r\n\r\nimport \"./Auth.css\"; // ✅ pour le style\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\"); // ✅ state pour afficher les erreurs\r\n  const navigate = useNavigate();\r\n\r\n  // 🔹 gérer les changements dans les inputs\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // 🔹 soumettre le formulaire\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // ✅ appelle la fonction loginUser depuis services/api.js\r\n      const response = await loginUser(formData);\r\n\r\n      // ✅ stocke le token dans localStorage\r\n      localStorage.setItem(\"authToken\", response.token);\r\n\r\n      // ✅ redirige vers la page d'accueil ou dashboard\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      // ✅ affiche l’erreur proprement\r\n      setError(\"Identifiants incorrects. Réessayez.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion à GreenCampus</h2>\r\n\r\n        {/* ✅ affiche l'erreur s'il y en a */\n/*  {error && <p className=\"error\">{error}</p>}\r\n  /*  <form onSubmit={handleSubmit}>\r\n    <div className=\"form-group\">\r\n      <label>Email</label>\r\n      <input\r\n        type=\"email\"\r\n        name=\"email\"\r\n        value={formData.email}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n    </div>\r\n      <div className=\"form-group\">\r\n      <label>Mot de passe</label>\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={formData.password}\r\n        onChange={handleChange}\r\n        required\r\n      />\r\n    </div>\r\n      <button type=\"submit\" className=\"auth-btn\">\r\n      Se connecter\r\n    </button>\r\n  </form>\r\n    <p className=\"auth-footer\">\r\n    Pas encore inscrit ?{\" \"}\r\n    <span onClick={() => navigate(\"/register\")}>Créer un compte</span>\r\n  </p>\r\n</div>\r\n</div>\r\n);\r\n};\r\nexport default Login;\r\n*/\n\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\";\r\n\r\nfunction Login() {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { loginUser } from \"../../services/api\"; // <-- on utilise l'API centralisée\r\nimport './Auth.css';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const [error, setError] = useState('');\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };*****\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('/api/auth/login', credentials);\r\n      \r\n      // Stockez le token dans localStorage\r\n      localStorage.setItem('authToken', response.data.token);\r\n      \r\n      // Redirigez vers la page d'accueil\r\n      navigate('/');\r\n    } catch (error) {\r\n      // Gestion des erreurs\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion à GreenCampus</h2>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"auth-btn\">Se connecter</button>\r\n        </form>\r\n        \r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit? <span onClick={() => navigate('/register')}>Créer un compte</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","useAuth","jsxDEV","_jsxDEV","Login","_s","setUser","navigate","email","setEmail","password","setPassword","error","setError","handleSubmit","e","preventDefault","res","post","token","data","role","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/wamp64/www/RSE/frontend/src/components/Auth/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\nfunction Login() {\r\n  const { setUser } = useAuth();   // ✅ ici c’est bien récupéré du Provider\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      // ✅ Stockage user dans le contexte\r\n      setUser({\r\n        token: res.data.token,\r\n        role: res.data.role,\r\n      });\r\n\r\n      // ✅ Redirection\r\n      if (res.data.role === \"admin\") {\r\n        navigate(\"/admin\");\r\n      } else {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur login :\", err);\r\n      setError(\"Email ou mot de passe invalide\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Connexion</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\"; // ✅ on utilise ton hook\r\n\r\nfunction Login() {\r\n  const { setUser } = useAuth(); // ✅ appel du hook dans le composant\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      console.log(\"Réponse backend :\", res.data);\r\n\r\n      // ✅ Sauvegarde du token et rôle dans localStorage\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"role\", res.data.role);\r\n\r\n      // ✅ Mise à jour du contexte global\r\n      setUser({\r\n        token: res.data.token,\r\n        role: res.data.role,\r\n      });\r\n\r\n      // ✅ Redirection selon rôle\r\n      if (res.data.role === \"admin\") {\r\n        navigate(\"/admin\");\r\n      } else {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur login :\", err);\r\n      setError(\"Email ou mot de passe invalide\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Connexion</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nimport React, { useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//import { AuthContext } from \"../../context/AuthContext\"; // ton context\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\n\r\nconst { user, setUser } = useAuth();\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { setUser } = useContext(AuthContext);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      console.log(\"Réponse backend :\", res.data);\r\n\r\n      // ✅ Sauvegarde du token et user\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"role\", res.data.role);\r\n\r\n      setUser({\r\n        token: res.data.token,\r\n        role: res.data.role,\r\n      });\r\n\r\n      // ✅ Redirection selon rôle\r\n      if (res.data.role === \"admin\") {\r\n        navigate(\"/admin\");\r\n      } else {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur login :\", err);\r\n      setError(\"Email ou mot de passe invalide\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Connexion</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\";\r\nimport \"./Auth.css\";\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await loginUser(formData);\r\n      // IMPORTANT : Axios => data.token\r\n      const token = response?.data?.token;\r\n\r\n      if (!token) {\r\n        setError(\"Réponse inattendue du serveur (pas de token).\");\r\n        return;\r\n      }\r\n\r\n      // IMPORTANT : la clé doit être \"token\" pour l'intercepteur\r\n     localStorage.setItem(\"token\", token);\r\n    \r\n\r\n\r\n      navigate(\"/dashboard\");\r\n    } catch (err) {\r\n      // 404 => route inexistante côté backend, 401 => mauvais identifiants\r\n      const msg =\r\n        err?.response?.status === 404\r\n          ? \"Route /api/auth/login introuvable côté serveur.\"\r\n          : err?.response?.data?.message || \"Identifiants incorrects.\";\r\n      setError(msg);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion à GreenCampus</h2>\r\n\r\n        {error && <p className=\"error\">{error}</p>}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"auth-btn\">Se connecter</button>\r\n        </form>\r\n\r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit ?{\" \"}\r\n          <span onClick={() => navigate(\"/register\")}>Créer un compte</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\"; // ✅ utilise ton fichier api.js\r\n\r\nimport \"./Auth.css\"; // ✅ pour le style\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\"); // ✅ state pour afficher les erreurs\r\n  const navigate = useNavigate();\r\n\r\n  // 🔹 gérer les changements dans les inputs\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // 🔹 soumettre le formulaire\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // ✅ appelle la fonction loginUser depuis services/api.js\r\n      const response = await loginUser(formData);\r\n\r\n      // ✅ stocke le token dans localStorage\r\n      localStorage.setItem(\"authToken\", response.token);\r\n\r\n      // ✅ redirige vers la page d'accueil ou dashboard\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      // ✅ affiche l’erreur proprement\r\n      setError(\"Identifiants incorrects. Réessayez.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion à GreenCampus</h2>\r\n\r\n        {/* ✅ affiche l'erreur s'il y en a */\r\n      /*  {error && <p className=\"error\">{error}</p>}\r\n\r\n      /*  <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"auth-btn\">\r\n            Se connecter\r\n          </button>\r\n        </form>\r\n\r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit ?{\" \"}\r\n          <span onClick={() => navigate(\"/register\")}>Créer un compte</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\";\r\n\r\nfunction Login() {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { loginUser } from \"../../services/api\"; // <-- on utilise l'API centralisée\r\nimport './Auth.css';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const [error, setError] = useState('');\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };*****\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('/api/auth/login', credentials);\r\n      \r\n      // Stockez le token dans localStorage\r\n      localStorage.setItem('authToken', response.data.token);\r\n      \r\n      // Redirigez vers la page d'accueil\r\n      navigate('/');\r\n    } catch (error) {\r\n      // Gestion des erreurs\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion à GreenCampus</h2>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"auth-btn\">Se connecter</button>\r\n        </form>\r\n        \r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit? <span onClick={() => navigate('/register')}>Créer un compte</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}