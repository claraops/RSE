{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\RSE\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// backend/context/AuthContext.js ou src/context/AuthContext.js\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Création du contexte\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Hook personnalisé pour consommer le contexte\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Charger l'utilisateur depuis localStorage au démarrage\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const storedToken = localStorage.getItem('token');\n    if (storedUser && storedToken) {\n      setUser(JSON.parse(storedUser));\n      axios.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`;\n    }\n    setLoading(false);\n  }, []);\n\n  // Connexion\n  const login = async (email, password) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Erreur lors de la connexion');\n    }\n  };\n\n  // Inscription\n  const register = async (nom, prenom, email, password, role) => {\n    try {\n      const response = await axios.post('http://localhost:5000/api/auth/register', {\n        nom,\n        prenom,\n        email,\n        password,\n        role\n      });\n      if (response.data.token && response.data.user) {\n        const {\n          token,\n          user\n        } = response.data;\n        localStorage.setItem('user', JSON.stringify(user));\n        localStorage.setItem('token', token);\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n        setUser(user);\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Erreur lors de l\\'inscription');\n    }\n  };\n\n  // Déconnexion\n  const logout = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      register,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n/*import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    const response = await axios.post('http://localhost:5000/api/auth/login', { email, password });\r\n    localStorage.setItem('user', JSON.stringify(response.data.user));\r\n    localStorage.setItem('token', response.data.token);\r\n    setUser(response.data.user);\r\n    return response.data;\r\n  };\r\n\r\n\r\n  const register = async (nom, prenom, email, password) => {\r\n  const response = await axios.post('http://localhost:5000/api/auth/register', {\r\n    nom,\r\n    prenom,\r\n    email,\r\n    password\r\n  });\r\n  return response.data;\r\n};\r\n\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);*/\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","storedUser","localStorage","getItem","storedToken","JSON","parse","defaults","headers","common","login","email","password","response","post","token","data","setItem","stringify","error","_error$response","_error$response$data","Error","message","register","nom","prenom","role","_error$response2","_error$response2$data","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/wamp64/www/RSE/frontend/src/context/AuthContext.js"],"sourcesContent":["// backend/context/AuthContext.js ou src/context/AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Création du contexte\r\nconst AuthContext = createContext();\r\n\r\n// Hook personnalisé pour consommer le contexte\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Charger l'utilisateur depuis localStorage au démarrage\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    const storedToken = localStorage.getItem('token');\r\n\r\n    if (storedUser && storedToken) {\r\n      setUser(JSON.parse(storedUser));\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`;\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Connexion\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/login', { email, password });\r\n      const { token, user } = response.data;\r\n\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      localStorage.setItem('token', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setUser(user);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Erreur lors de la connexion');\r\n    }\r\n  };\r\n\r\n  // Inscription\r\n  const register = async (nom, prenom, email, password, role) => {\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/auth/register', {\r\n        nom,\r\n        prenom,\r\n        email,\r\n        password,\r\n        role\r\n      });\r\n\r\n      if (response.data.token && response.data.user) {\r\n        const { token, user } = response.data;\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        localStorage.setItem('token', token);\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n        setUser(user);\r\n      }\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      throw new Error(error.response?.data?.message || 'Erreur lors de l\\'inscription');\r\n    }\r\n  };\r\n\r\n  // Déconnexion\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, register, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    const response = await axios.post('http://localhost:5000/api/auth/login', { email, password });\r\n    localStorage.setItem('user', JSON.stringify(response.data.user));\r\n    localStorage.setItem('token', response.data.token);\r\n    setUser(response.data.user);\r\n    return response.data;\r\n  };\r\n\r\n\r\n  const register = async (nom, prenom, email, password) => {\r\n  const response = await axios.post('http://localhost:5000/api/auth/register', {\r\n    nom,\r\n    prenom,\r\n    email,\r\n    password\r\n  });\r\n  return response.data;\r\n};\r\n\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}