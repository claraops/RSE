{"ast":null,"code":"/*import axios from \"axios\";\r\n\r\nconst API = axios.create({ \r\n  baseURL: \"http://localhost:5000/api\",\r\n  timeout: 10000 // Augmentez le timeout si nécessaire\r\n});\r\n\r\n// Intercepteur pour ajouter le token\r\nAPI.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Intercepteur pour gérer les erreurs\r\nAPI.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"role\");\r\n      localStorage.removeItem(\"userData\");\r\n      window.location.href = \"/login\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const loginUser = (credentials) => API.post(\"/auth/login\", credentials);\r\nexport const registerUser = (data) => API.post(\"/auth/register\", data);\r\nexport const fetchActions = () => API.get(\"/action\");\r\nexport const createAction = (action) => API.post(\"/action\", action);\r\nexport const updateAction = (id, action) => API.put(`/action/${id}`, action);\r\nexport const deleteAction = (id) => API.delete(`/action/${id}`);\r\n*/\n\nimport axios from \"axios\";\nconst API = axios.create({\n  baseURL: \"http://localhost:5000/api\"\n});\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"token\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\nexport const loginUser = credentials => API.post(\"/auth/login\", credentials);\nexport const registerUser = data => API.post(\"/auth/register\", data);\nexport const fetchActions = () => API.get(\"/action\");\nexport const createAction = action => API.post(\"/action\", action);\nexport const updateAction = (id, action) => API.put(`/action/${id}`, action);\nexport const deleteAction = id => API.delete(`/action/${id}`);","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","loginUser","credentials","post","registerUser","data","fetchActions","get","createAction","action","updateAction","id","put","deleteAction","delete"],"sources":["C:/wamp64/www/RSE/frontend/src/services/api.js"],"sourcesContent":["/*import axios from \"axios\";\r\n\r\nconst API = axios.create({ \r\n  baseURL: \"http://localhost:5000/api\",\r\n  timeout: 10000 // Augmentez le timeout si nécessaire\r\n});\r\n\r\n// Intercepteur pour ajouter le token\r\nAPI.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Intercepteur pour gérer les erreurs\r\nAPI.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem(\"token\");\r\n      localStorage.removeItem(\"role\");\r\n      localStorage.removeItem(\"userData\");\r\n      window.location.href = \"/login\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const loginUser = (credentials) => API.post(\"/auth/login\", credentials);\r\nexport const registerUser = (data) => API.post(\"/auth/register\", data);\r\nexport const fetchActions = () => API.get(\"/action\");\r\nexport const createAction = (action) => API.post(\"/action\", action);\r\nexport const updateAction = (id, action) => API.put(`/action/${id}`, action);\r\nexport const deleteAction = (id) => API.delete(`/action/${id}`);\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport axios from \"axios\";\r\n\r\nconst API = axios.create({ baseURL: \"http://localhost:5000/api\" });\r\n\r\nAPI.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const loginUser = (credentials) => API.post(\"/auth/login\", credentials);\r\nexport const registerUser = (data) => API.post(\"/auth/register\", data);\r\nexport const fetchActions = () => API.get(\"/action\");\r\nexport const createAction = (action) => API.post(\"/action\", action);\r\nexport const updateAction = (id, action) => API.put(`/action/${id}`, action);\r\nexport const deleteAction = (id) => API.delete(`/action/${id}`);\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAaA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EAAEC,OAAO,EAAE;AAA4B,CAAC,CAAC;AAElEF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,OAAO,MAAMM,SAAS,GAAIC,WAAW,IAAKb,GAAG,CAACc,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;AAC9E,OAAO,MAAME,YAAY,GAAIC,IAAI,IAAKhB,GAAG,CAACc,IAAI,CAAC,gBAAgB,EAAEE,IAAI,CAAC;AACtE,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAMjB,GAAG,CAACkB,GAAG,CAAC,SAAS,CAAC;AACpD,OAAO,MAAMC,YAAY,GAAIC,MAAM,IAAKpB,GAAG,CAACc,IAAI,CAAC,SAAS,EAAEM,MAAM,CAAC;AACnE,OAAO,MAAMC,YAAY,GAAGA,CAACC,EAAE,EAAEF,MAAM,KAAKpB,GAAG,CAACuB,GAAG,CAAC,WAAWD,EAAE,EAAE,EAAEF,MAAM,CAAC;AAC5E,OAAO,MAAMI,YAAY,GAAIF,EAAE,IAAKtB,GAAG,CAACyB,MAAM,CAAC,WAAWH,EAAE,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}