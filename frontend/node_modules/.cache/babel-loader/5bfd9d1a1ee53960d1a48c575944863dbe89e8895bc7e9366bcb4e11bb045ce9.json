{"ast":null,"code":"/*import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ActionForm = ({ \r\n  formData, \r\n  onChange, \r\n  onSubmit, \r\n  onCancel, \r\n  isEditing\r\n}) => {\r\n  const [newRessource, setNewRessource] = useState({ description: '', type: 'matérielle', quantite: 1 });\r\n  const [newKpi, setNewKpi] = useState({ nom: '', valeur_cible: '', unite_mesure: '', periode_mesure: 'mensuel' });\r\n\r\n  const handleRessourceChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewRessource(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleKpiChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewKpi(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const addRessource = () => {\r\n    if (newRessource.description) {\r\n      onChange({\r\n        target: {\r\n          name: 'ressources',\r\n          value: [...formData.ressources, newRessource]\r\n        }\r\n      });\r\n      setNewRessource({ description: '', type: 'matérielle', quantite: 1 });\r\n    }\r\n  };\r\n\r\n  const addKpi = () => {\r\n    if (newKpi.nom) {\r\n      onChange({\r\n        target: {\r\n          name: 'kpis',\r\n          value: [...formData.kpis, newKpi]\r\n        }\r\n      });\r\n      setNewKpi({ nom: '', valeur_cible: '', unite_mesure: '', periode_mesure: 'mensuel' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-section\">\r\n      <h2 className=\"form-title\">\r\n        {isEditing ? \"Modifier l'action RSE\" : \"Ajouter une nouvelle action RSE\"}\r\n      </h2>\r\n      \r\n      <form onSubmit={onSubmit} className=\"action-form\">\r\n        {/* Champs de base *\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"titre\">Titre*</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"titre\"\r\n            name=\"titre\"\r\n            value={formData.titre}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Description*</label>\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={onChange}\r\n            required\r\n            rows=\"4\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date_debut\">Date de début</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date_debut\"\r\n              name=\"date_debut\"\r\n              value={formData.date_debut}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date_fin\">Date de fin</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date_fin\"\r\n              name=\"date_fin\"\r\n              value={formData.date_fin}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"statut\">Statut</label>\r\n          <select\r\n            id=\"statut\"\r\n            name=\"statut\"\r\n            value={formData.statut}\r\n            onChange={onChange}\r\n          >\r\n            <option value=\"planifié\">Planifié</option>\r\n            <option value=\"en_cours\">En cours</option>\r\n            <option value=\"terminé\">Terminé</option>\r\n          </select>\r\n        </div>\r\n        \r\n        {/* Champs Etablissement *\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"etablissement_nom\">Nom de l'établissement*</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"etablissement_nom\"\r\n            name=\"etablissement_nom\"\r\n            placeholder=\"Nom de l'établissement\"\r\n            value={formData.etablissement_nom}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"etablissement_localisation\">Localisation</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"etablissement_localisation\"\r\n            name=\"etablissement_localisation\"\r\n            placeholder=\"Localisation\"\r\n            value={formData.etablissement_localisation}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"etablissement_type\">Type</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"etablissement_type\"\r\n            name=\"etablissement_type\"\r\n            placeholder=\"Ex: école, université\"\r\n            value={formData.etablissement_type}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        \r\n        {/* Ressources *\r\n        <div className=\"form-group\">\r\n          <label>Ressources</label>\r\n          {formData.ressources.map((res, index) => (\r\n            <div key={index} className=\"resource-item\">\r\n              <div>{res.description} ({res.type}, quantité: {res.quantite})</div>\r\n            </div>\r\n          ))}\r\n          <div className=\"form-row\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              name=\"description\"\r\n              value={newRessource.description}\r\n              onChange={handleRessourceChange}\r\n            />\r\n            <select\r\n              name=\"type\"\r\n              value={newRessource.type}\r\n              onChange={handleRessourceChange}\r\n            >\r\n              <option value=\"matérielle\">Matérielle</option>\r\n              <option value=\"humaine\">Humaine</option>\r\n              <option value=\"financière\">Financière</option>\r\n            </select>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Quantité\"\r\n              name=\"quantite\"\r\n              value={newRessource.quantite}\r\n              onChange={handleRessourceChange}\r\n              min=\"1\"\r\n            />\r\n            <button type=\"button\" onClick={addRessource}>Ajouter</button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* KPIs *\r\n        <div className=\"form-group\">\r\n          <label>Indicateurs KPI</label>\r\n          {formData.kpis.map((kpi, index) => (\r\n            <div key={index} className=\"kpi-item\">\r\n              <div>{kpi.nom} ({kpi.valeur_cible} {kpi.unite_mesure})</div>\r\n            </div>\r\n          ))}\r\n          <div className=\"form-row\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              name=\"nom\"\r\n              value={newKpi.nom}\r\n              onChange={handleKpiChange}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Valeur cible\"\r\n              name=\"valeur_cible\"\r\n              value={newKpi.valeur_cible}\r\n              onChange={handleKpiChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Unité\"\r\n              name=\"unite_mesure\"\r\n              value={newKpi.unite_mesure}\r\n              onChange={handleKpiChange}\r\n            />\r\n            <select\r\n              name=\"periode_mesure\"\r\n              value={newKpi.periode_mesure}\r\n              onChange={handleKpiChange}\r\n            >\r\n              <option value=\"journalier\">Journalier</option>\r\n              <option value=\"hebdomadaire\">Hebdomadaire</option>\r\n              <option value=\"mensuel\">Mensuel</option>\r\n            </select>\r\n            <button type=\"button\" onClick={addKpi}>Ajouter</button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"form-buttons\">\r\n          <button type=\"submit\" className=\"submit-btn primary-btn\">\r\n            {isEditing ? \"Mettre à jour\" : \"Ajouter l'action\"}\r\n          </button>\r\n          \r\n          {isEditing && (\r\n            <button type=\"button\" className=\"cancel-btn secondary-btn\" onClick={onCancel}>\r\n              Annuler\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n\r\n      {/* Liens rapides *\r\n      <section className=\"quick-actions\">\r\n        <h2>Actions rapides</h2>\r\n        <div className=\"action-buttons\">\r\n          <Link to=\"/planning\" className=\"btn btn-secondary\">Voir le planning</Link>\r\n          <Link to=\"/newsletter\" className=\"btn btn-tertiary\">Gérer newsletter</Link>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionForm;\r\n*/\n\n/*import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst ActionForm = ({ \r\n  formData, \r\n  onChange, \r\n  onSubmit, \r\n  onCancel, \r\n  isEditing,\r\n  populations\r\n}) => {\r\n  const [newRessource, setNewRessource] = useState({ description: '', type: 'matérielle', quantite: 1 });\r\n  const [newKpi, setNewKpi] = useState({ nom: '', valeur_cible: '', unite_mesure: '', periode_mesure: 'mensuel' });\r\n\r\n  const handleRessourceChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewRessource(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleKpiChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewKpi(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const addRessource = () => {\r\n    if (newRessource.description) {\r\n      onChange({\r\n        target: {\r\n          name: 'ressources',\r\n          value: [...formData.ressources, newRessource]\r\n        }\r\n      });\r\n      setNewRessource({ description: '', type: 'matérielle', quantite: 1 });\r\n    }\r\n  };\r\n\r\n  const addKpi = () => {\r\n    if (newKpi.nom) {\r\n      onChange({\r\n        target: {\r\n          name: 'kpis',\r\n          value: [...formData.kpis, newKpi]\r\n        }\r\n      });\r\n      setNewKpi({ nom: '', valeur_cible: '', unite_mesure: '', periode_mesure: 'mensuel' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-section\">\r\n      <h2 className=\"form-title\">\r\n        {isEditing ? \"Modifier l'action RSE\" : \"Ajouter une nouvelle action RSE\"}\r\n      </h2>\r\n      \r\n      <form onSubmit={onSubmit} className=\"action-form\">\r\n        {/* Champs de base *\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"titre\">Titre*</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"titre\"\r\n            name=\"titre\"\r\n            value={formData.titre}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Description*</label>\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={onChange}\r\n            required\r\n            rows=\"4\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date_debut\">Date de début</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date_debut\"\r\n              name=\"date_debut\"\r\n              value={formData.date_debut}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date_fin\">Date de fin</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date_fin\"\r\n              name=\"date_fin\"\r\n              value={formData.date_fin}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"statut\">Statut</label>\r\n          <select\r\n            id=\"statut\"\r\n            name=\"statut\"\r\n            value={formData.statut}\r\n            onChange={onChange}\r\n          >\r\n            <option value=\"planifié\">Planifié</option>\r\n            <option value=\"en_cours\">En cours</option>\r\n            <option value=\"terminé\">Terminé</option>\r\n          </select>\r\n        </div>\r\n        \r\n        {/* Populations cibles *\r\n\r\n<div className=\"form-group\">\r\n  <label>Populations cibles</label>\r\n  <div className=\"checkbox-group\">\r\n    {populations.map(pop => (\r\n      <label key={pop.id} className=\"checkbox-item\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"populations\"\r\n          value={pop.type}\r\n          checked={formData.populations.includes(pop.type)}\r\n          onChange={(e) => {\r\n            const newValues = e.target.checked\r\n              ? [...formData.populations, pop.type]\r\n              : formData.populations.filter(v => v !== pop.type);\r\n            onChange({\r\n              target: {\r\n                name: 'populations',\r\n                value: newValues\r\n              }\r\n            });\r\n          }}\r\n        />\r\n        {pop.type}\r\n      </label>\r\n    ))}\r\n  </div>\r\n</div>\r\n\r\n\r\n     \r\n        \r\n        {/* Ressources *\r\n        <div className=\"form-group\">\r\n          <label>Ressources</label>\r\n          {formData.ressources.map((res, index) => (\r\n            <div key={index} className=\"resource-item\">\r\n              <div>{res.description} ({res.type}, quantité: {res.quantite})</div>\r\n            </div>\r\n          ))}\r\n          <div className=\"form-row\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              name=\"description\"\r\n              value={newRessource.description}\r\n              onChange={handleRessourceChange}\r\n            />\r\n            <select\r\n              name=\"type\"\r\n              value={newRessource.type}\r\n              onChange={handleRessourceChange}\r\n            >\r\n              <option value=\"matérielle\">Matérielle</option>\r\n              <option value=\"humaine\">Humaine</option>\r\n              <option value=\"financière\">Financière</option>\r\n            </select>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Quantité\"\r\n              name=\"quantite\"\r\n              value={newRessource.quantite}\r\n              onChange={handleRessourceChange}\r\n              min=\"1\"\r\n            />\r\n            <button type=\"button\" onClick={addRessource}>Ajouter</button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* KPIs *\r\n        <div className=\"form-group\">\r\n          <label>Indicateurs KPI</label>\r\n          {formData.kpis.map((kpi, index) => (\r\n            <div key={index} className=\"kpi-item\">\r\n              <div>{kpi.nom} ({kpi.valeur_cible} {kpi.unite_mesure})</div>\r\n            </div>\r\n          ))}\r\n          <div className=\"form-row\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              name=\"nom\"\r\n              value={newKpi.nom}\r\n              onChange={handleKpiChange}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Valeur cible\"\r\n              name=\"valeur_cible\"\r\n              value={newKpi.valeur_cible}\r\n              onChange={handleKpiChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Unité\"\r\n              name=\"unite_mesure\"\r\n              value={newKpi.unite_mesure}\r\n              onChange={handleKpiChange}\r\n            />\r\n            <select\r\n              name=\"periode_mesure\"\r\n              value={newKpi.periode_mesure}\r\n              onChange={handleKpiChange}\r\n            >\r\n              <option value=\"journalier\">Journalier</option>\r\n              <option value=\"hebdomadaire\">Hebdomadaire</option>\r\n              <option value=\"mensuel\">Mensuel</option>\r\n            </select>\r\n            <button type=\"button\" onClick={addKpi}>Ajouter</button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"form-buttons\">\r\n          <button type=\"submit\" className=\"submit-btn primary-btn\">\r\n            {isEditing ? \"Mettre à jour\" : \"Ajouter l'action\"}\r\n          </button>\r\n          \r\n          {isEditing && (\r\n            <button type=\"button\" className=\"cancel-btn secondary-btn\" onClick={onCancel}>\r\n              Annuler\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n\r\n       <section className=\"quick-actions\">\r\n          <h2>Actions rapides</h2>\r\n          <div className=\"action-buttons\">\r\n            <Link to=\"/planning\" className=\"btn btn-secondary\">Voir le planning</Link>\r\n            <Link to=\"/newsletter\" className=\"btn btn-tertiary\">Gérer newsletter</Link>\r\n          </div>\r\n        </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionForm;*/","map":{"version":3,"names":[],"sources":["C:/wamp64/www/RSE/frontend/src/components/ActionForm.js"],"sourcesContent":["/*import React, { useState } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ActionForm = ({ \r\n  formData, \r\n  onChange, \r\n  onSubmit, \r\n  onCancel, \r\n  isEditing\r\n}) => {\r\n  const [newRessource, setNewRessource] = useState({ description: '', type: 'matérielle', quantite: 1 });\r\n  const [newKpi, setNewKpi] = useState({ nom: '', valeur_cible: '', unite_mesure: '', periode_mesure: 'mensuel' });\r\n\r\n  const handleRessourceChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewRessource(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleKpiChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewKpi(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const addRessource = () => {\r\n    if (newRessource.description) {\r\n      onChange({\r\n        target: {\r\n          name: 'ressources',\r\n          value: [...formData.ressources, newRessource]\r\n        }\r\n      });\r\n      setNewRessource({ description: '', type: 'matérielle', quantite: 1 });\r\n    }\r\n  };\r\n\r\n  const addKpi = () => {\r\n    if (newKpi.nom) {\r\n      onChange({\r\n        target: {\r\n          name: 'kpis',\r\n          value: [...formData.kpis, newKpi]\r\n        }\r\n      });\r\n      setNewKpi({ nom: '', valeur_cible: '', unite_mesure: '', periode_mesure: 'mensuel' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-section\">\r\n      <h2 className=\"form-title\">\r\n        {isEditing ? \"Modifier l'action RSE\" : \"Ajouter une nouvelle action RSE\"}\r\n      </h2>\r\n      \r\n      <form onSubmit={onSubmit} className=\"action-form\">\r\n        {/* Champs de base *\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"titre\">Titre*</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"titre\"\r\n            name=\"titre\"\r\n            value={formData.titre}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Description*</label>\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={onChange}\r\n            required\r\n            rows=\"4\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date_debut\">Date de début</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date_debut\"\r\n              name=\"date_debut\"\r\n              value={formData.date_debut}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date_fin\">Date de fin</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date_fin\"\r\n              name=\"date_fin\"\r\n              value={formData.date_fin}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"statut\">Statut</label>\r\n          <select\r\n            id=\"statut\"\r\n            name=\"statut\"\r\n            value={formData.statut}\r\n            onChange={onChange}\r\n          >\r\n            <option value=\"planifié\">Planifié</option>\r\n            <option value=\"en_cours\">En cours</option>\r\n            <option value=\"terminé\">Terminé</option>\r\n          </select>\r\n        </div>\r\n        \r\n        {/* Champs Etablissement *\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"etablissement_nom\">Nom de l'établissement*</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"etablissement_nom\"\r\n            name=\"etablissement_nom\"\r\n            placeholder=\"Nom de l'établissement\"\r\n            value={formData.etablissement_nom}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"etablissement_localisation\">Localisation</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"etablissement_localisation\"\r\n            name=\"etablissement_localisation\"\r\n            placeholder=\"Localisation\"\r\n            value={formData.etablissement_localisation}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"etablissement_type\">Type</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"etablissement_type\"\r\n            name=\"etablissement_type\"\r\n            placeholder=\"Ex: école, université\"\r\n            value={formData.etablissement_type}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        \r\n        {/* Ressources *\r\n        <div className=\"form-group\">\r\n          <label>Ressources</label>\r\n          {formData.ressources.map((res, index) => (\r\n            <div key={index} className=\"resource-item\">\r\n              <div>{res.description} ({res.type}, quantité: {res.quantite})</div>\r\n            </div>\r\n          ))}\r\n          <div className=\"form-row\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              name=\"description\"\r\n              value={newRessource.description}\r\n              onChange={handleRessourceChange}\r\n            />\r\n            <select\r\n              name=\"type\"\r\n              value={newRessource.type}\r\n              onChange={handleRessourceChange}\r\n            >\r\n              <option value=\"matérielle\">Matérielle</option>\r\n              <option value=\"humaine\">Humaine</option>\r\n              <option value=\"financière\">Financière</option>\r\n            </select>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Quantité\"\r\n              name=\"quantite\"\r\n              value={newRessource.quantite}\r\n              onChange={handleRessourceChange}\r\n              min=\"1\"\r\n            />\r\n            <button type=\"button\" onClick={addRessource}>Ajouter</button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* KPIs *\r\n        <div className=\"form-group\">\r\n          <label>Indicateurs KPI</label>\r\n          {formData.kpis.map((kpi, index) => (\r\n            <div key={index} className=\"kpi-item\">\r\n              <div>{kpi.nom} ({kpi.valeur_cible} {kpi.unite_mesure})</div>\r\n            </div>\r\n          ))}\r\n          <div className=\"form-row\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              name=\"nom\"\r\n              value={newKpi.nom}\r\n              onChange={handleKpiChange}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Valeur cible\"\r\n              name=\"valeur_cible\"\r\n              value={newKpi.valeur_cible}\r\n              onChange={handleKpiChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Unité\"\r\n              name=\"unite_mesure\"\r\n              value={newKpi.unite_mesure}\r\n              onChange={handleKpiChange}\r\n            />\r\n            <select\r\n              name=\"periode_mesure\"\r\n              value={newKpi.periode_mesure}\r\n              onChange={handleKpiChange}\r\n            >\r\n              <option value=\"journalier\">Journalier</option>\r\n              <option value=\"hebdomadaire\">Hebdomadaire</option>\r\n              <option value=\"mensuel\">Mensuel</option>\r\n            </select>\r\n            <button type=\"button\" onClick={addKpi}>Ajouter</button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"form-buttons\">\r\n          <button type=\"submit\" className=\"submit-btn primary-btn\">\r\n            {isEditing ? \"Mettre à jour\" : \"Ajouter l'action\"}\r\n          </button>\r\n          \r\n          {isEditing && (\r\n            <button type=\"button\" className=\"cancel-btn secondary-btn\" onClick={onCancel}>\r\n              Annuler\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n\r\n      {/* Liens rapides *\r\n      <section className=\"quick-actions\">\r\n        <h2>Actions rapides</h2>\r\n        <div className=\"action-buttons\">\r\n          <Link to=\"/planning\" className=\"btn btn-secondary\">Voir le planning</Link>\r\n          <Link to=\"/newsletter\" className=\"btn btn-tertiary\">Gérer newsletter</Link>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionForm;\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst ActionForm = ({ \r\n  formData, \r\n  onChange, \r\n  onSubmit, \r\n  onCancel, \r\n  isEditing,\r\n  populations\r\n}) => {\r\n  const [newRessource, setNewRessource] = useState({ description: '', type: 'matérielle', quantite: 1 });\r\n  const [newKpi, setNewKpi] = useState({ nom: '', valeur_cible: '', unite_mesure: '', periode_mesure: 'mensuel' });\r\n\r\n  const handleRessourceChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewRessource(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleKpiChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewKpi(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const addRessource = () => {\r\n    if (newRessource.description) {\r\n      onChange({\r\n        target: {\r\n          name: 'ressources',\r\n          value: [...formData.ressources, newRessource]\r\n        }\r\n      });\r\n      setNewRessource({ description: '', type: 'matérielle', quantite: 1 });\r\n    }\r\n  };\r\n\r\n  const addKpi = () => {\r\n    if (newKpi.nom) {\r\n      onChange({\r\n        target: {\r\n          name: 'kpis',\r\n          value: [...formData.kpis, newKpi]\r\n        }\r\n      });\r\n      setNewKpi({ nom: '', valeur_cible: '', unite_mesure: '', periode_mesure: 'mensuel' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-section\">\r\n      <h2 className=\"form-title\">\r\n        {isEditing ? \"Modifier l'action RSE\" : \"Ajouter une nouvelle action RSE\"}\r\n      </h2>\r\n      \r\n      <form onSubmit={onSubmit} className=\"action-form\">\r\n        {/* Champs de base *\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"titre\">Titre*</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"titre\"\r\n            name=\"titre\"\r\n            value={formData.titre}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Description*</label>\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={onChange}\r\n            required\r\n            rows=\"4\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date_debut\">Date de début</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date_debut\"\r\n              name=\"date_debut\"\r\n              value={formData.date_debut}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date_fin\">Date de fin</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date_fin\"\r\n              name=\"date_fin\"\r\n              value={formData.date_fin}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"statut\">Statut</label>\r\n          <select\r\n            id=\"statut\"\r\n            name=\"statut\"\r\n            value={formData.statut}\r\n            onChange={onChange}\r\n          >\r\n            <option value=\"planifié\">Planifié</option>\r\n            <option value=\"en_cours\">En cours</option>\r\n            <option value=\"terminé\">Terminé</option>\r\n          </select>\r\n        </div>\r\n        \r\n        {/* Populations cibles *\r\n\r\n<div className=\"form-group\">\r\n  <label>Populations cibles</label>\r\n  <div className=\"checkbox-group\">\r\n    {populations.map(pop => (\r\n      <label key={pop.id} className=\"checkbox-item\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"populations\"\r\n          value={pop.type}\r\n          checked={formData.populations.includes(pop.type)}\r\n          onChange={(e) => {\r\n            const newValues = e.target.checked\r\n              ? [...formData.populations, pop.type]\r\n              : formData.populations.filter(v => v !== pop.type);\r\n            onChange({\r\n              target: {\r\n                name: 'populations',\r\n                value: newValues\r\n              }\r\n            });\r\n          }}\r\n        />\r\n        {pop.type}\r\n      </label>\r\n    ))}\r\n  </div>\r\n</div>\r\n\r\n\r\n     \r\n        \r\n        {/* Ressources *\r\n        <div className=\"form-group\">\r\n          <label>Ressources</label>\r\n          {formData.ressources.map((res, index) => (\r\n            <div key={index} className=\"resource-item\">\r\n              <div>{res.description} ({res.type}, quantité: {res.quantite})</div>\r\n            </div>\r\n          ))}\r\n          <div className=\"form-row\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              name=\"description\"\r\n              value={newRessource.description}\r\n              onChange={handleRessourceChange}\r\n            />\r\n            <select\r\n              name=\"type\"\r\n              value={newRessource.type}\r\n              onChange={handleRessourceChange}\r\n            >\r\n              <option value=\"matérielle\">Matérielle</option>\r\n              <option value=\"humaine\">Humaine</option>\r\n              <option value=\"financière\">Financière</option>\r\n            </select>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Quantité\"\r\n              name=\"quantite\"\r\n              value={newRessource.quantite}\r\n              onChange={handleRessourceChange}\r\n              min=\"1\"\r\n            />\r\n            <button type=\"button\" onClick={addRessource}>Ajouter</button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* KPIs *\r\n        <div className=\"form-group\">\r\n          <label>Indicateurs KPI</label>\r\n          {formData.kpis.map((kpi, index) => (\r\n            <div key={index} className=\"kpi-item\">\r\n              <div>{kpi.nom} ({kpi.valeur_cible} {kpi.unite_mesure})</div>\r\n            </div>\r\n          ))}\r\n          <div className=\"form-row\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              name=\"nom\"\r\n              value={newKpi.nom}\r\n              onChange={handleKpiChange}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Valeur cible\"\r\n              name=\"valeur_cible\"\r\n              value={newKpi.valeur_cible}\r\n              onChange={handleKpiChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Unité\"\r\n              name=\"unite_mesure\"\r\n              value={newKpi.unite_mesure}\r\n              onChange={handleKpiChange}\r\n            />\r\n            <select\r\n              name=\"periode_mesure\"\r\n              value={newKpi.periode_mesure}\r\n              onChange={handleKpiChange}\r\n            >\r\n              <option value=\"journalier\">Journalier</option>\r\n              <option value=\"hebdomadaire\">Hebdomadaire</option>\r\n              <option value=\"mensuel\">Mensuel</option>\r\n            </select>\r\n            <button type=\"button\" onClick={addKpi}>Ajouter</button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"form-buttons\">\r\n          <button type=\"submit\" className=\"submit-btn primary-btn\">\r\n            {isEditing ? \"Mettre à jour\" : \"Ajouter l'action\"}\r\n          </button>\r\n          \r\n          {isEditing && (\r\n            <button type=\"button\" className=\"cancel-btn secondary-btn\" onClick={onCancel}>\r\n              Annuler\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n\r\n       <section className=\"quick-actions\">\r\n          <h2>Actions rapides</h2>\r\n          <div className=\"action-buttons\">\r\n            <Link to=\"/planning\" className=\"btn btn-secondary\">Voir le planning</Link>\r\n            <Link to=\"/newsletter\" className=\"btn btn-tertiary\">Gérer newsletter</Link>\r\n          </div>\r\n        </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionForm;*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappingsiignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}