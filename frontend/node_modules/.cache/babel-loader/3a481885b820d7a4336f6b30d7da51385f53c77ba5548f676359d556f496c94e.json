{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\RSE\\\\frontend\\\\src\\\\components\\\\Planning.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Planning = () => {\n  _s();\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth());\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\n  const [actions, setActions] = useState([]);\n  useEffect(() => {\n    // Simulation de données - à remplacer par un appel API\n    const mockActions = [{\n      id: 1,\n      title: 'Journée de nettoyage',\n      date: '2024-09-15',\n      status: 'planned'\n    }, {\n      id: 2,\n      title: 'Atelier recyclage',\n      date: '2024-09-22',\n      status: 'planned'\n    }, {\n      id: 3,\n      title: 'Collecte de vêtements',\n      date: '2024-10-05',\n      status: 'planned'\n    }, {\n      id: 4,\n      title: 'Conférence sur le développement durable',\n      date: '2024-10-12',\n      status: 'planned'\n    }];\n    setActions(mockActions);\n  }, []);\n  const months = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'];\n  const years = [2024, 2025];\n  const filteredActions = actions.filter(action => {\n    const actionDate = new Date(action.date);\n    return actionDate.getMonth() === selectedMonth && actionDate.getFullYear() === selectedYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"planning\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Planning des Actions RSE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planning-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedMonth,\n        onChange: e => setSelectedMonth(parseInt(e.target.value)),\n        children: months.map((month, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: month\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedYear,\n        onChange: e => setSelectedYear(parseInt(e.target.value)),\n        children: years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: year,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: filteredActions.length > 0 ? filteredActions.map(action => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-event\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-date\",\n          children: [new Date(action.date).getDate(), \" \", months[selectedMonth]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: action.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `event-status ${action.status}`,\n            children: action.status === 'planned' ? 'Planifiée' : action.status === 'in-progress' ? 'En cours' : 'Terminée'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/action/${action.id}`,\n            className: \"event-link\",\n            children: \"Voir d\\xE9tails\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, action.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucune action planifi\\xE9e pour cette p\\xE9riode.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"planning-actions\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-action\",\n        className: \"btn btn-primary\",\n        children: \"Ajouter une action au planning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Planning, \"W7m4ltwtRT/oz6w7us2FdItqKuE=\");\n_c = Planning;\nexport default Planning;\nvar _c;\n$RefreshReg$(_c, \"Planning\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Planning","_s","selectedMonth","setSelectedMonth","Date","getMonth","selectedYear","setSelectedYear","getFullYear","actions","setActions","mockActions","id","title","date","status","months","years","filteredActions","filter","action","actionDate","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","parseInt","target","map","month","index","year","length","getDate","to","_c","$RefreshReg$"],"sources":["C:/wamp64/www/RSE/frontend/src/components/Planning.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Planning = () => {\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth());\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [actions, setActions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Simulation de données - à remplacer par un appel API\r\n    const mockActions = [\r\n      { id: 1, title: 'Journée de nettoyage', date: '2024-09-15', status: 'planned' },\r\n      { id: 2, title: 'Atelier recyclage', date: '2024-09-22', status: 'planned' },\r\n      { id: 3, title: 'Collecte de vêtements', date: '2024-10-05', status: 'planned' },\r\n      { id: 4, title: 'Conférence sur le développement durable', date: '2024-10-12', status: 'planned' }\r\n    ];\r\n    setActions(mockActions);\r\n  }, []);\r\n\r\n  const months = [\r\n    'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',\r\n    'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'\r\n  ];\r\n\r\n  const years = [2024, 2025];\r\n\r\n  const filteredActions = actions.filter(action => {\r\n    const actionDate = new Date(action.date);\r\n    return actionDate.getMonth() === selectedMonth && \r\n           actionDate.getFullYear() === selectedYear;\r\n  });\r\n\r\n  return (\r\n    <div className=\"planning\">\r\n      <h1>Planning des Actions RSE</h1>\r\n      \r\n      <div className=\"planning-controls\">\r\n        <select \r\n          value={selectedMonth} \r\n          onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n        >\r\n          {months.map((month, index) => (\r\n            <option key={index} value={index}>{month}</option>\r\n          ))}\r\n        </select>\r\n        \r\n        <select \r\n          value={selectedYear} \r\n          onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n        >\r\n          {years.map(year => (\r\n            <option key={year} value={year}>{year}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"calendar\">\r\n        {filteredActions.length > 0 ? (\r\n          filteredActions.map(action => (\r\n            <div key={action.id} className=\"calendar-event\">\r\n              <div className=\"event-date\">\r\n                {new Date(action.date).getDate()} {months[selectedMonth]}\r\n              </div>\r\n              <div className=\"event-details\">\r\n                <h3>{action.title}</h3>\r\n                <span className={`event-status ${action.status}`}>\r\n                  {action.status === 'planned' ? 'Planifiée' : \r\n                   action.status === 'in-progress' ? 'En cours' : 'Terminée'}\r\n                </span>\r\n                <Link to={`/action/${action.id}`} className=\"event-link\">Voir détails</Link>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>Aucune action planifiée pour cette période.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"planning-actions\">\r\n        <Link to=\"/create-action\" className=\"btn btn-primary\">\r\n          Ajouter une action au planning\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planning;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}