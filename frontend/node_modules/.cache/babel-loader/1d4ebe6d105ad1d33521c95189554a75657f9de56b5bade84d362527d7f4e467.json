{"ast":null,"code":"// AuthContext.js\n// Inscription\nconst register = async (nom, prenom, email, password, role) => {\n  try {\n    const response = await axios.post('http://localhost:5000/api/auth/register', {\n      nom,\n      prenom,\n      email,\n      password,\n      role // Ajout du rôle dans la requête\n    });\n    if (response.data.token && response.data.user) {\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      setUser(user);\n    }\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Erreur lors de l\\'inscription');\n  }\n};\n\n/*import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    const response = await axios.post('http://localhost:5000/api/auth/login', { email, password });\r\n    localStorage.setItem('user', JSON.stringify(response.data.user));\r\n    localStorage.setItem('token', response.data.token);\r\n    setUser(response.data.user);\r\n    return response.data;\r\n  };\r\n\r\n\r\n  const register = async (nom, prenom, email, password) => {\r\n  const response = await axios.post('http://localhost:5000/api/auth/register', {\r\n    nom,\r\n    prenom,\r\n    email,\r\n    password\r\n  });\r\n  return response.data;\r\n};\r\n\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);*/","map":{"version":3,"names":["register","nom","prenom","email","password","role","response","axios","post","data","token","user","localStorage","setItem","JSON","stringify","defaults","headers","common","setUser","error","_error$response","_error$response$data","Error","message"],"sources":["C:/wamp64/www/RSE/frontend/src/context/AuthContext.js"],"sourcesContent":["// AuthContext.js\r\n// Inscription\r\nconst register = async (nom, prenom, email, password, role) => {\r\n  try {\r\n    const response = await axios.post('http://localhost:5000/api/auth/register', {\r\n      nom,\r\n      prenom,\r\n      email,\r\n      password,\r\n      role // Ajout du rôle dans la requête\r\n    });\r\n\r\n    if (response.data.token && response.data.user) {\r\n      const { token, user } = response.data;\r\n\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      localStorage.setItem('token', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      setUser(user);\r\n    }\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(error.response?.data?.message || 'Erreur lors de l\\'inscription');\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    const response = await axios.post('http://localhost:5000/api/auth/login', { email, password });\r\n    localStorage.setItem('user', JSON.stringify(response.data.user));\r\n    localStorage.setItem('token', response.data.token);\r\n    setUser(response.data.user);\r\n    return response.data;\r\n  };\r\n\r\n\r\n  const register = async (nom, prenom, email, password) => {\r\n  const response = await axios.post('http://localhost:5000/api/auth/register', {\r\n    nom,\r\n    prenom,\r\n    email,\r\n    password\r\n  });\r\n  return response.data;\r\n};\r\n\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);*/"],"mappings":"AAAA;AACA;AACA,MAAMA,QAAQ,GAAG,MAAAA,CAAOC,GAAG,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,KAAK;EAC7D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,yCAAyC,EAAE;MAC3EP,GAAG;MACHC,MAAM;MACNC,KAAK;MACLC,QAAQ;MACRC,IAAI,CAAC;IACP,CAAC,CAAC;IAEF,IAAIC,QAAQ,CAACG,IAAI,CAACC,KAAK,IAAIJ,QAAQ,CAACG,IAAI,CAACE,IAAI,EAAE;MAC7C,MAAM;QAAED,KAAK;QAAEC;MAAK,CAAC,GAAGL,QAAQ,CAACG,IAAI;MAErCG,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;MAClDC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;MACpCH,KAAK,CAACS,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUR,KAAK,EAAE;MAClES,OAAO,CAACR,IAAI,CAAC;IACf;IAEA,OAAOL,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOW,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MAAM,IAAIC,KAAK,CAAC,EAAAF,eAAA,GAAAD,KAAK,CAACd,QAAQ,cAAAe,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBZ,IAAI,cAAAa,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAI,+BAA+B,CAAC;EACnF;AACF,CAAC;;AA6BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}