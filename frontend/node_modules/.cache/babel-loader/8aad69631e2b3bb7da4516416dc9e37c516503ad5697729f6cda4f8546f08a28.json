{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\RSE\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchActions, createAction, updateAction, deleteAction } from './services/api';\nimport ActionCard from './components/ActionCard';\nimport ActionForm from './components/ActionForm';\nimport SearchBar from './components/SearchBar';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { AuthProvider, useAuth } from './context/AuthContext';\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RSEPlatform() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [actions, setActions] = useState([]);\n  const [filteredActions, setFilteredActions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [formData, setFormData] = useState({\n    titre: \"\",\n    description: \"\",\n    date_debut: \"\",\n    date_fin: \"\",\n    statut: \"planifié\",\n    createur_id: 1,\n    populations: [],\n    ressources: [],\n    kpis: []\n  });\n  const [populations, setPopulations] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  // Charger les données\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetchActions();\n        const actionsData = response.data || []; // ✅ on prend bien response.data\n        setActions(actionsData);\n        setFilteredActions(actionsData);\n        setPopulations([{\n          id: 1,\n          type: \"étudiants\"\n        }, {\n          id: 2,\n          type: \"enseignants\"\n        }, {\n          id: 3,\n          type: \"admin\"\n        }, {\n          id: 4,\n          type: \"partenaires\"\n        }, {\n          id: 5,\n          type: \"tout\"\n        }]);\n      } catch (err) {\n        setError(\"Erreur de chargement des données\");\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n\n  // Filtrer en fonction de la recherche\n  useEffect(() => {\n    const filtered = actions.filter(action => action.titre.toLowerCase().includes(searchTerm.toLowerCase()) || action.description.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredActions(filtered);\n  }, [searchTerm, actions]);\n\n  // Gérer les changements du formulaire\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Soumettre (création ou mise à jour)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editingId) {\n        await updateAction(editingId, formData);\n        setActions(actions.map(a => a.id === editingId ? {\n          ...a,\n          ...formData\n        } : a));\n      } else {\n        const response = await createAction(formData);\n        const newAction = response.data || response; // selon ton API\n        setActions([...actions, newAction]);\n      }\n      resetForm();\n    } catch (err) {\n      setError(editingId ? \"Erreur de mise à jour\" : \"Erreur de création\");\n      console.error(err);\n    }\n  };\n  const handleEdit = action => {\n    setFormData({\n      titre: action.titre,\n      description: action.description,\n      date_debut: action.date_debut,\n      date_fin: action.date_fin,\n      statut: action.statut,\n      createur_id: action.createur_id,\n      populations: action.populations || [],\n      ressources: action.ressources || [],\n      kpis: action.kpis || []\n    });\n    setEditingId(action.id);\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n  const handleDelete = async id => {\n    if (!window.confirm(\"Supprimer cette action ?\")) return;\n    try {\n      await deleteAction(id);\n      setActions(actions.filter(a => a.id !== id));\n    } catch (err) {\n      setError(\"Erreur de suppression\");\n      console.error(err);\n      setTimeout(() => setError(\"\"), 3000);\n    }\n  };\n  const resetForm = () => {\n    setFormData({\n      titre: \"\",\n      description: \"\",\n      date_debut: \"\",\n      date_fin: \"\",\n      statut: \"planifié\",\n      createur_id: 1,\n      populations: [],\n      ressources: [],\n      kpis: []\n    });\n    setEditingId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/ECE.png\",\n            alt: \"ECE Paris\",\n            className: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"header-title\",\n          children: \"Plateforme RSE - ECE Paris\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-avatar-container\",\n          children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-name\",\n              children: user.prenom || user.email.split(\"@\")[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"U\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(ActionForm, {\n        formData: formData,\n        onChange: handleChange,\n        onSubmit: handleSubmit,\n        onCancel: resetForm,\n        isEditing: !!editingId,\n        populations: populations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"actions-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Actions RSE (\", filteredActions.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"refresh-btn\",\n              onClick: () => window.location.reload(),\n              children: \"\\uD83D\\uDD04 Actualiser\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-search-container\",\n          children: /*#__PURE__*/_jsxDEV(SearchBar, {\n            value: searchTerm,\n            onChange: setSearchTerm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-banner\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Chargement en cours...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this) : !Array.isArray(filteredActions) || filteredActions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: \"Aucune action trouv\\xE9e. Essayez une autre recherche.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions-grid\",\n          children: filteredActions.map(action => /*#__PURE__*/_jsxDEV(ActionCard, {\n            action: action,\n            onEdit: handleEdit,\n            onDelete: handleDelete\n          }, action.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA9 \", new Date().getFullYear(), \" ECE Paris - Projet RSE\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(RSEPlatform, \"ErsWqnZRNIp1qbpgNw2se8Q2U8Q=\", false, function () {\n  return [useAuth];\n});\n_c = RSEPlatform;\nexport default RSEPlatform;\n\n/*import React, { useState, useEffect } from 'react';\r\nimport { \r\n  fetchActions, \r\n  createAction, \r\n  updateAction, \r\n  deleteAction \r\n} from './services/api';\r\nimport ActionCard from './components/ActionCard';\r\nimport ActionForm from './components/ActionForm';\r\nimport SearchBar from './components/SearchBar';\r\nimport './App.css';\r\n//import RSEPlatform from './components/RSEPlatform';\r\n\r\n\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { AuthProvider, useAuth } from './context/AuthContext';\r\nimport Login from './components/Auth/Login';\r\nimport Register from './components/Auth/Register';\r\n//import RSEPlatform from './components/RSEPlatform'; // Votre composant principal existant\r\n\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { user, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Chargement...</div>;\r\n  }\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route \r\n            path=\"/\" \r\n            element={\r\n              <ProtectedRoute>\r\n                <RSEPlatform />\r\n              </ProtectedRoute>\r\n            } \r\n          />\r\n        </Routes>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction RSEPlatform() {\r\n  const { user } = useAuth(); \r\n  const [actions, setActions] = useState([]);\r\n  const [filteredActions, setFilteredActions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    titre: '',\r\n    description: '',\r\n    date_debut: '',\r\n    date_fin: '',\r\n    statut: 'planifié',\r\n    createur_id: 1,\r\n    populations: [],\r\n    ressources: [],\r\n    kpis: []\r\n  });\r\n  const [populations, setPopulations] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        const actionsData = await fetchActions();\r\n        setActions(actionsData);\r\n        setFilteredActions(actionsData);\r\n        \r\n        setPopulations([\r\n          { id: 1, type: 'étudiants' },\r\n          { id: 2, type: 'enseignants' },\r\n          { id: 3, type: 'admin' },\r\n          { id: 4, type: 'partenaires' },\r\n          { id: 5, type: 'tout' }\r\n        ]);\r\n        \r\n      } catch (err) {\r\n        setError('Erreur de chargement des données');\r\n        console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filtered = actions.filter(action => \r\n      action.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      action.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredActions(filtered);\r\n  }, [searchTerm, actions]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      if (editingId) {\r\n        await updateAction(editingId, formData);\r\n        setActions(actions.map(a => a.id === editingId ? { ...a, ...formData } : a));\r\n      } else {\r\n        const newAction = await createAction(formData);\r\n        setActions([...actions, newAction]);\r\n      }\r\n      \r\n      resetForm();\r\n    } catch (err) {\r\n      setError(editingId ? 'Erreur de mise à jour' : 'Erreur de création');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (action) => {\r\n    setFormData({\r\n      titre: action.titre,\r\n      description: action.description,\r\n      date_debut: action.date_debut,\r\n      date_fin: action.date_fin,\r\n      statut: action.statut,\r\n      createur_id: action.createur_id,\r\n      populations: action.populations || [],\r\n      ressources: action.ressources || [],\r\n      kpis: action.kpis || []\r\n    });\r\n    setEditingId(action.id);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Supprimer cette action?')) return;\r\n    \r\n    try {\r\n      await deleteAction(id);\r\n      setActions(actions.filter(a => a.id !== id));\r\n    } catch (err) {\r\n      setError('Erreur de suppression');\r\n      console.error(err);\r\n      \r\n      // Effacer l'erreur après 3 secondes\r\n      setTimeout(() => setError(''), 3000);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      titre: '',\r\n      description: '',\r\n      date_debut: '',\r\n      date_fin: '',\r\n      statut: 'planifié',\r\n      createur_id: 1,\r\n      populations: [],\r\n      ressources: [],\r\n      kpis: []\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">   \r\n\r\n      <header className=\"header\">\r\n  <div className=\"header-content\">\r\n    <div className=\"logo-container\">\r\n      <img \r\n        src=\"/ECE.png\" \r\n        alt=\"ECE Paris\" \r\n        className=\"logo\"\r\n      />\r\n    </div>\r\n    <h1 className=\"header-title\">Plateforme RSE - ECE Paris</h1>\r\n\r\n    <div className=\"user-avatar-container\">\r\n            {user ? (\r\n              <div className=\"user-info\">\r\n                <span className=\"user-name\">\r\n                  {user.prenom || user.email.split('@')[0]}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"user-avatar\">\r\n                <span>U</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n  \r\n</header>\r\n\r\n\r\n      <main className=\"main-container\">\r\n        <ActionForm \r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          onCancel={resetForm}\r\n          isEditing={!!editingId}\r\n          populations={populations}\r\n        />\r\n        \r\n        <section className=\"actions-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Actions RSE ({filteredActions.length})</h2>\r\n            <div className=\"section-actions\">\r\n              <button \r\n                className=\"refresh-btn\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                🔄 Actualiser\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n           <div className=\"action-search-container\">\r\n    <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n  </div>\r\n  \r\n\r\n          \r\n          {error && <div className=\"error-banner\">{error}</div>}\r\n          \r\n          {isLoading ? (\r\n            <div className=\"loading\">Chargement en cours...</div>\r\n          ) : filteredActions.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              Aucune action trouvée. Essayez une autre recherche.\r\n            </div>\r\n          ) : (\r\n            <div className=\"actions-grid\">\r\n              {filteredActions.map(action => (\r\n                <ActionCard\r\n                  key={action.id}\r\n                  action={action}\r\n                  onEdit={handleEdit}\r\n                  onDelete={handleDelete}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} ECE Paris - Projet RSE</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;*/\nvar _c;\n$RefreshReg$(_c, \"RSEPlatform\");","map":{"version":3,"names":["React","useState","useEffect","fetchActions","createAction","updateAction","deleteAction","ActionCard","ActionForm","SearchBar","BrowserRouter","Router","Routes","Route","Navigate","AuthProvider","useAuth","Login","Register","jsxDEV","_jsxDEV","RSEPlatform","_s","user","actions","setActions","filteredActions","setFilteredActions","searchTerm","setSearchTerm","formData","setFormData","titre","description","date_debut","date_fin","statut","createur_id","populations","ressources","kpis","setPopulations","editingId","setEditingId","isLoading","setIsLoading","error","setError","loadData","response","actionsData","data","id","type","err","console","filtered","filter","action","toLowerCase","includes","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","map","a","newAction","resetForm","handleEdit","window","scrollTo","top","behavior","handleDelete","confirm","setTimeout","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","prenom","email","split","onChange","onSubmit","onCancel","isEditing","length","onClick","location","reload","Array","isArray","onEdit","onDelete","Date","getFullYear","_c","$RefreshReg$"],"sources":["C:/wamp64/www/RSE/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchActions, createAction, updateAction, deleteAction } from './services/api';\r\nimport ActionCard from './components/ActionCard';\r\nimport ActionForm from './components/ActionForm';\r\nimport SearchBar from './components/SearchBar';\r\nimport './App.css';\r\n\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { AuthProvider, useAuth } from './context/AuthContext';\r\nimport Login from './components/Auth/Login';\r\nimport Register from './components/Auth/Register';\r\n\r\nfunction RSEPlatform() {\r\n  const { user } = useAuth();\r\n  const [actions, setActions] = useState([]);\r\n  const [filteredActions, setFilteredActions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    titre: \"\",\r\n    description: \"\",\r\n    date_debut: \"\",\r\n    date_fin: \"\",\r\n    statut: \"planifié\",\r\n    createur_id: 1,\r\n    populations: [],\r\n    ressources: [],\r\n    kpis: [],\r\n  });\r\n  const [populations, setPopulations] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Charger les données\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        const response = await fetchActions();\r\n        const actionsData = response.data || []; // ✅ on prend bien response.data\r\n        setActions(actionsData);\r\n        setFilteredActions(actionsData);\r\n\r\n        setPopulations([\r\n          { id: 1, type: \"étudiants\" },\r\n          { id: 2, type: \"enseignants\" },\r\n          { id: 3, type: \"admin\" },\r\n          { id: 4, type: \"partenaires\" },\r\n          { id: 5, type: \"tout\" },\r\n        ]);\r\n      } catch (err) {\r\n        setError(\"Erreur de chargement des données\");\r\n        console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  // Filtrer en fonction de la recherche\r\n  useEffect(() => {\r\n    const filtered = actions.filter(\r\n      (action) =>\r\n        action.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        action.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredActions(filtered);\r\n  }, [searchTerm, actions]);\r\n\r\n  // Gérer les changements du formulaire\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Soumettre (création ou mise à jour)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editingId) {\r\n        await updateAction(editingId, formData);\r\n        setActions(\r\n          actions.map((a) =>\r\n            a.id === editingId ? { ...a, ...formData } : a\r\n          )\r\n        );\r\n      } else {\r\n        const response = await createAction(formData);\r\n        const newAction = response.data || response; // selon ton API\r\n        setActions([...actions, newAction]);\r\n      }\r\n      resetForm();\r\n    } catch (err) {\r\n      setError(editingId ? \"Erreur de mise à jour\" : \"Erreur de création\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (action) => {\r\n    setFormData({\r\n      titre: action.titre,\r\n      description: action.description,\r\n      date_debut: action.date_debut,\r\n      date_fin: action.date_fin,\r\n      statut: action.statut,\r\n      createur_id: action.createur_id,\r\n      populations: action.populations || [],\r\n      ressources: action.ressources || [],\r\n      kpis: action.kpis || [],\r\n    });\r\n    setEditingId(action.id);\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Supprimer cette action ?\")) return;\r\n    try {\r\n      await deleteAction(id);\r\n      setActions(actions.filter((a) => a.id !== id));\r\n    } catch (err) {\r\n      setError(\"Erreur de suppression\");\r\n      console.error(err);\r\n      setTimeout(() => setError(\"\"), 3000);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      titre: \"\",\r\n      description: \"\",\r\n      date_debut: \"\",\r\n      date_fin: \"\",\r\n      statut: \"planifié\",\r\n      createur_id: 1,\r\n      populations: [],\r\n      ressources: [],\r\n      kpis: [],\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* HEADER */}\r\n      <header className=\"header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"logo-container\">\r\n            <img src=\"/ECE.png\" alt=\"ECE Paris\" className=\"logo\" />\r\n          </div>\r\n          <h1 className=\"header-title\">Plateforme RSE - ECE Paris</h1>\r\n\r\n          <div className=\"user-avatar-container\">\r\n            {user ? (\r\n              <div className=\"user-info\">\r\n                <span className=\"user-name\">\r\n                  {user.prenom || user.email.split(\"@\")[0]}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"user-avatar\">\r\n                <span>U</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* MAIN */}\r\n      <main className=\"main-container\">\r\n        <ActionForm\r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          onCancel={resetForm}\r\n          isEditing={!!editingId}\r\n          populations={populations}\r\n        />\r\n\r\n        <section className=\"actions-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Actions RSE ({filteredActions.length})</h2>\r\n            <div className=\"section-actions\">\r\n              <button\r\n                className=\"refresh-btn\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                🔄 Actualiser\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"action-search-container\">\r\n            <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n          </div>\r\n\r\n          {error && <div className=\"error-banner\">{error}</div>}\r\n\r\n          {isLoading ? (\r\n            <div className=\"loading\">Chargement en cours...</div>\r\n          ) : !Array.isArray(filteredActions) ||\r\n            filteredActions.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              Aucune action trouvée. Essayez une autre recherche.\r\n            </div>\r\n          ) : (\r\n            <div className=\"actions-grid\">\r\n              {filteredActions.map((action) => (\r\n                <ActionCard\r\n                  key={action.id}\r\n                  action={action}\r\n                  onEdit={handleEdit}\r\n                  onDelete={handleDelete}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n\r\n      {/* FOOTER */}\r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} ECE Paris - Projet RSE</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RSEPlatform;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport { \r\n  fetchActions, \r\n  createAction, \r\n  updateAction, \r\n  deleteAction \r\n} from './services/api';\r\nimport ActionCard from './components/ActionCard';\r\nimport ActionForm from './components/ActionForm';\r\nimport SearchBar from './components/SearchBar';\r\nimport './App.css';\r\n//import RSEPlatform from './components/RSEPlatform';\r\n\r\n\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { AuthProvider, useAuth } from './context/AuthContext';\r\nimport Login from './components/Auth/Login';\r\nimport Register from './components/Auth/Register';\r\n//import RSEPlatform from './components/RSEPlatform'; // Votre composant principal existant\r\n\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { user, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Chargement...</div>;\r\n  }\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route \r\n            path=\"/\" \r\n            element={\r\n              <ProtectedRoute>\r\n                <RSEPlatform />\r\n              </ProtectedRoute>\r\n            } \r\n          />\r\n        </Routes>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction RSEPlatform() {\r\n  const { user } = useAuth(); \r\n  const [actions, setActions] = useState([]);\r\n  const [filteredActions, setFilteredActions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    titre: '',\r\n    description: '',\r\n    date_debut: '',\r\n    date_fin: '',\r\n    statut: 'planifié',\r\n    createur_id: 1,\r\n    populations: [],\r\n    ressources: [],\r\n    kpis: []\r\n  });\r\n  const [populations, setPopulations] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        const actionsData = await fetchActions();\r\n        setActions(actionsData);\r\n        setFilteredActions(actionsData);\r\n        \r\n        setPopulations([\r\n          { id: 1, type: 'étudiants' },\r\n          { id: 2, type: 'enseignants' },\r\n          { id: 3, type: 'admin' },\r\n          { id: 4, type: 'partenaires' },\r\n          { id: 5, type: 'tout' }\r\n        ]);\r\n        \r\n      } catch (err) {\r\n        setError('Erreur de chargement des données');\r\n        console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filtered = actions.filter(action => \r\n      action.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      action.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredActions(filtered);\r\n  }, [searchTerm, actions]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      if (editingId) {\r\n        await updateAction(editingId, formData);\r\n        setActions(actions.map(a => a.id === editingId ? { ...a, ...formData } : a));\r\n      } else {\r\n        const newAction = await createAction(formData);\r\n        setActions([...actions, newAction]);\r\n      }\r\n      \r\n      resetForm();\r\n    } catch (err) {\r\n      setError(editingId ? 'Erreur de mise à jour' : 'Erreur de création');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (action) => {\r\n    setFormData({\r\n      titre: action.titre,\r\n      description: action.description,\r\n      date_debut: action.date_debut,\r\n      date_fin: action.date_fin,\r\n      statut: action.statut,\r\n      createur_id: action.createur_id,\r\n      populations: action.populations || [],\r\n      ressources: action.ressources || [],\r\n      kpis: action.kpis || []\r\n    });\r\n    setEditingId(action.id);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Supprimer cette action?')) return;\r\n    \r\n    try {\r\n      await deleteAction(id);\r\n      setActions(actions.filter(a => a.id !== id));\r\n    } catch (err) {\r\n      setError('Erreur de suppression');\r\n      console.error(err);\r\n      \r\n      // Effacer l'erreur après 3 secondes\r\n      setTimeout(() => setError(''), 3000);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      titre: '',\r\n      description: '',\r\n      date_debut: '',\r\n      date_fin: '',\r\n      statut: 'planifié',\r\n      createur_id: 1,\r\n      populations: [],\r\n      ressources: [],\r\n      kpis: []\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">   \r\n\r\n      <header className=\"header\">\r\n  <div className=\"header-content\">\r\n    <div className=\"logo-container\">\r\n      <img \r\n        src=\"/ECE.png\" \r\n        alt=\"ECE Paris\" \r\n        className=\"logo\"\r\n      />\r\n    </div>\r\n    <h1 className=\"header-title\">Plateforme RSE - ECE Paris</h1>\r\n\r\n    <div className=\"user-avatar-container\">\r\n            {user ? (\r\n              <div className=\"user-info\">\r\n                <span className=\"user-name\">\r\n                  {user.prenom || user.email.split('@')[0]}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"user-avatar\">\r\n                <span>U</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n  \r\n</header>\r\n\r\n\r\n      <main className=\"main-container\">\r\n        <ActionForm \r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          onCancel={resetForm}\r\n          isEditing={!!editingId}\r\n          populations={populations}\r\n        />\r\n        \r\n        <section className=\"actions-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Actions RSE ({filteredActions.length})</h2>\r\n            <div className=\"section-actions\">\r\n              <button \r\n                className=\"refresh-btn\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                🔄 Actualiser\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n           <div className=\"action-search-container\">\r\n    <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n  </div>\r\n  \r\n\r\n          \r\n          {error && <div className=\"error-banner\">{error}</div>}\r\n          \r\n          {isLoading ? (\r\n            <div className=\"loading\">Chargement en cours...</div>\r\n          ) : filteredActions.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              Aucune action trouvée. Essayez une autre recherche.\r\n            </div>\r\n          ) : (\r\n            <div className=\"actions-grid\">\r\n              {filteredActions.map(action => (\r\n                <ActionCard\r\n                  key={action.id}\r\n                  action={action}\r\n                  onEdit={handleEdit}\r\n                  onDelete={handleDelete}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} ECE Paris - Projet RSE</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}