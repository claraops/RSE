{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\RSE\\\\frontend\\\\src\\\\components\\\\Auth\\\\Login.js\",\n  _s = $RefreshSig$();\n/*import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\"; // âœ… on utilise ton hook\r\nimport './Auth.css';\r\n\r\nfunction Login() {\r\n  const { setUser } = useAuth(); // âœ… appel du hook dans le composant\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      console.log(\"RÃ©ponse backend :\", res.data);\r\n\r\n      // âœ… Sauvegarde du token et rÃ´le dans localStorage\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"role\", res.data.role);\r\n\r\n      // âœ… Mise Ã  jour du contexte global\r\n      setUser({\r\n        token: res.data.token,\r\n        role: res.data.role,\r\n      });\r\n\r\n      // âœ… Redirection selon rÃ´le\r\n      if (res.data.role === \"admin\") {\r\n        navigate(\"/RSEPlatform\");\r\n      } else {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur login :\", err);\r\n      setError(\"Email ou mot de passe invalide\");\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n    <div>\r\n      <h2>Connexion</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nimport React, { useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//import { AuthContext } from \"../../context/AuthContext\"; // ton context\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\n\r\nconst { user, setUser } = useAuth();\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { setUser } = useContext(AuthContext);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      console.log(\"RÃ©ponse backend :\", res.data);\r\n\r\n      // âœ… Sauvegarde du token et user\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"role\", res.data.role);\r\n\r\n      setUser({\r\n        token: res.data.token,\r\n        role: res.data.role,\r\n      });\r\n\r\n      // âœ… Redirection selon rÃ´le\r\n      if (res.data.role === \"admin\") {\r\n        navigate(\"/admin\");\r\n      } else {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur login :\", err);\r\n      setError(\"Email ou mot de passe invalide\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Connexion</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n*/\n\n/*\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\";\r\nimport \"./Auth.css\";\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await loginUser(formData);\r\n      // IMPORTANT : Axios => data.token\r\n      const token = response?.data?.token;\r\n\r\n      if (!token) {\r\n        setError(\"RÃ©ponse inattendue du serveur (pas de token).\");\r\n        return;\r\n      }\r\n\r\n      // IMPORTANT : la clÃ© doit Ãªtre \"token\" pour l'intercepteur\r\n     localStorage.setItem(\"token\", token);\r\n    \r\n\r\n\r\n      navigate(\"/dashboard\");\r\n    } catch (err) {\r\n      // 404 => route inexistante cÃ´tÃ© backend, 401 => mauvais identifiants\r\n      const msg =\r\n        err?.response?.status === 404\r\n          ? \"Route /api/auth/login introuvable cÃ´tÃ© serveur.\"\r\n          : err?.response?.data?.message || \"Identifiants incorrects.\";\r\n      setError(msg);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion Ã  GreenCampus</h2>\r\n\r\n        {error && <p className=\"error\">{error}</p>}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"auth-btn\">Se connecter</button>\r\n        </form>\r\n\r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit ?{\" \"}\r\n          <span onClick={() => navigate(\"/register\")}>CrÃ©er un compte</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n*/\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { loginUser } from \"../../services/api\"; // âœ… utilise ton fichier api.js\n\nimport \"./Auth.css\"; // âœ… pour le style\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState(\"\"); // âœ… state pour afficher les erreurs\n  const navigate = useNavigate();\n\n  // ðŸ”¹ gÃ©rer les changements dans les inputs\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // ðŸ”¹ soumettre le formulaire\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // âœ… appelle la fonction loginUser depuis services/api.js\n      const response = await loginUser(formData);\n\n      // âœ… stocke le token dans localStorage\n      localStorage.setItem(\"authToken\", response.token);\n\n      // âœ… redirige vers la page d'accueil ou dashboard\n      navigate(\"/\");\n    } catch (err) {\n      // âœ… affiche lâ€™erreur proprement\n      setError(\"Identifiants incorrects. RÃ©essayez.\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Connexion \\xE0 GreenCampus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Mot de passe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: formData.password,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"auth-btn\",\n          children: \"Se connecter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-footer\",\n        children: [\"Pas encore inscrit ?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => navigate(\"/register\"),\n          children: \"Cr\\xE9er un compte\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 292,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"v98Fo72fWObdgd3VbW30VXfjWK4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\n\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\";\r\n\r\nfunction Login() {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { loginUser } from \"../../services/api\"; // <-- on utilise l'API centralisÃ©e\r\nimport './Auth.css';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const [error, setError] = useState('');\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };*****\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('/api/auth/login', credentials);\r\n      \r\n      // Stockez le token dans localStorage\r\n      localStorage.setItem('authToken', response.data.token);\r\n      \r\n      // Redirigez vers la page d'accueil\r\n      navigate('/');\r\n    } catch (error) {\r\n      // Gestion des erreurs\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion Ã  GreenCampus</h2>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"auth-btn\">Se connecter</button>\r\n        </form>\r\n        \r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit? <span onClick={() => navigate('/register')}>CrÃ©er un compte</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","loginUser","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","email","password","error","setError","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","response","localStorage","setItem","token","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/wamp64/www/RSE/frontend/src/components/Auth/Login.js"],"sourcesContent":["/*import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\"; // âœ… on utilise ton hook\r\nimport './Auth.css';\r\n\r\nfunction Login() {\r\n  const { setUser } = useAuth(); // âœ… appel du hook dans le composant\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      console.log(\"RÃ©ponse backend :\", res.data);\r\n\r\n      // âœ… Sauvegarde du token et rÃ´le dans localStorage\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"role\", res.data.role);\r\n\r\n      // âœ… Mise Ã  jour du contexte global\r\n      setUser({\r\n        token: res.data.token,\r\n        role: res.data.role,\r\n      });\r\n\r\n      // âœ… Redirection selon rÃ´le\r\n      if (res.data.role === \"admin\") {\r\n        navigate(\"/RSEPlatform\");\r\n      } else {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur login :\", err);\r\n      setError(\"Email ou mot de passe invalide\");\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n    <div>\r\n      <h2>Connexion</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nimport React, { useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//import { AuthContext } from \"../../context/AuthContext\"; // ton context\r\nimport { useAuth } from \"../../context/AuthContext\";\r\n\r\n\r\nconst { user, setUser } = useAuth();\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const { setUser } = useContext(AuthContext);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"http://localhost:5000/api/auth/login\", {\r\n        email,\r\n        password,\r\n      });\r\n\r\n      console.log(\"RÃ©ponse backend :\", res.data);\r\n\r\n      // âœ… Sauvegarde du token et user\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"role\", res.data.role);\r\n\r\n      setUser({\r\n        token: res.data.token,\r\n        role: res.data.role,\r\n      });\r\n\r\n      // âœ… Redirection selon rÃ´le\r\n      if (res.data.role === \"admin\") {\r\n        navigate(\"/admin\");\r\n      } else {\r\n        navigate(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erreur login :\", err);\r\n      setError(\"Email ou mot de passe invalide\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Connexion</h2>\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Mot de passe\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Se connecter</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\";\r\nimport \"./Auth.css\";\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await loginUser(formData);\r\n      // IMPORTANT : Axios => data.token\r\n      const token = response?.data?.token;\r\n\r\n      if (!token) {\r\n        setError(\"RÃ©ponse inattendue du serveur (pas de token).\");\r\n        return;\r\n      }\r\n\r\n      // IMPORTANT : la clÃ© doit Ãªtre \"token\" pour l'intercepteur\r\n     localStorage.setItem(\"token\", token);\r\n    \r\n\r\n\r\n      navigate(\"/dashboard\");\r\n    } catch (err) {\r\n      // 404 => route inexistante cÃ´tÃ© backend, 401 => mauvais identifiants\r\n      const msg =\r\n        err?.response?.status === 404\r\n          ? \"Route /api/auth/login introuvable cÃ´tÃ© serveur.\"\r\n          : err?.response?.data?.message || \"Identifiants incorrects.\";\r\n      setError(msg);\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion Ã  GreenCampus</h2>\r\n\r\n        {error && <p className=\"error\">{error}</p>}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"auth-btn\">Se connecter</button>\r\n        </form>\r\n\r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit ?{\" \"}\r\n          <span onClick={() => navigate(\"/register\")}>CrÃ©er un compte</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n*/import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\"; // âœ… utilise ton fichier api.js\r\n\r\nimport \"./Auth.css\"; // âœ… pour le style\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\"); // âœ… state pour afficher les erreurs\r\n  const navigate = useNavigate();\r\n\r\n  // ðŸ”¹ gÃ©rer les changements dans les inputs\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // ðŸ”¹ soumettre le formulaire\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // âœ… appelle la fonction loginUser depuis services/api.js\r\n      const response = await loginUser(formData);\r\n\r\n      // âœ… stocke le token dans localStorage\r\n      localStorage.setItem(\"authToken\", response.token);\r\n\r\n      // âœ… redirige vers la page d'accueil ou dashboard\r\n      navigate(\"/\");\r\n    } catch (err) {\r\n      // âœ… affiche lâ€™erreur proprement\r\n      setError(\"Identifiants incorrects. RÃ©essayez.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion Ã  GreenCampus</h2>\r\n\r\n        {/* âœ… affiche l'erreur s'il y en a */}\r\n        {error && <p className=\"error\">{error}</p>}\r\n\r\n       <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"auth-btn\">\r\n            Se connecter\r\n          </button>\r\n        </form>\r\n\r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit ?{\" \"}\r\n          <span onClick={() => navigate(\"/register\")}>CrÃ©er un compte</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginUser } from \"../../services/api\";\r\n\r\nfunction Login() {\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport { loginUser } from \"../../services/api\"; // <-- on utilise l'API centralisÃ©e\r\nimport './Auth.css';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({ email: '', password: '' });\r\n  const [error, setError] = useState('');\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };*****\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('/api/auth/login', credentials);\r\n      \r\n      // Stockez le token dans localStorage\r\n      localStorage.setItem('authToken', response.data.token);\r\n      \r\n      // Redirigez vers la page d'accueil\r\n      navigate('/');\r\n    } catch (error) {\r\n      // Gestion des erreurs\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion Ã  GreenCampus</h2>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" className=\"auth-btn\">Se connecter</button>\r\n        </form>\r\n        \r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit? <span onClick={() => navigate('/register')}>CrÃ©er un compte</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;*/"],"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W,CAAE;UAAAe,QAAA,EAAC;QAAe;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAxEID,KAAK;EAAA,QAGQJ,WAAW;AAAA;AAAAqC,EAAA,GAHxBjC,KAAK;AA0EX,eAAeA,KAAK;;AASpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvFA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}