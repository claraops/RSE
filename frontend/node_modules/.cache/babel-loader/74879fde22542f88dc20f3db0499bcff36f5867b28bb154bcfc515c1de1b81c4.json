{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\RSE\\\\frontend\\\\src\\\\RSEPlatform.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchActions, createAction, updateAction, deleteAction } from './services/api';\nimport ActionCard from './components/ActionCard';\nimport ActionForm from './components/ActionForm';\nimport SearchBar from './components/SearchBar';\nimport './App.css';\nimport { useAuth } from './context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RSEPlatform() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [actions, setActions] = useState([]);\n  const [filteredActions, setFilteredActions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [formData, setFormData] = useState({\n    titre: \"\",\n    description: \"\",\n    date_debut: \"\",\n    date_fin: \"\",\n    statut: \"planifié\",\n    createur_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n    populations: [],\n    ressources: [],\n    kpis: []\n  });\n  const [populations] = useState([{\n    id: 1,\n    type: \"étudiants\"\n  }, {\n    id: 2,\n    type: \"enseignants\"\n  }, {\n    id: 3,\n    type: \"admin\"\n  }, {\n    id: 4,\n    type: \"partenaires\"\n  }, {\n    id: 5,\n    type: \"tout\"\n  }]);\n  const [editingId, setEditingId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    loadData();\n  }, []);\n  const loadData = async () => {\n    try {\n      setIsLoading(true);\n      const response = await fetchActions();\n      setActions(response.data);\n      setFilteredActions(response.data);\n    } catch (err) {\n      setError(\"Erreur de chargement des données\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    const filtered = actions.filter(action => action.titre.toLowerCase().includes(searchTerm.toLowerCase()) || action.description.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredActions(filtered);\n  }, [searchTerm, actions]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editingId) {\n        await updateAction(editingId, formData);\n        setActions(actions.map(a => a.id === editingId ? {\n          ...a,\n          ...formData\n        } : a));\n      } else {\n        const response = await createAction(formData);\n        setActions([...actions, response.data]);\n      }\n      resetForm();\n      loadData(); // Recharger les données\n    } catch (err) {\n      setError(editingId ? \"Erreur de mise à jour\" : \"Erreur de création\");\n    }\n  };\n  const handleEdit = action => {\n    setFormData({\n      titre: action.titre,\n      description: action.description,\n      date_debut: action.date_debut,\n      date_fin: action.date_fin,\n      statut: action.statut,\n      createur_id: action.createur_id,\n      populations: action.populations || [],\n      ressources: action.ressources || [],\n      kpis: action.kpis || []\n    });\n    setEditingId(action.id);\n  };\n  const handleDelete = async id => {\n    if (!window.confirm(\"Supprimer cette action ?\")) return;\n    try {\n      await deleteAction(id);\n      setActions(actions.filter(a => a.id !== id));\n    } catch (err) {\n      setError(\"Erreur de suppression\");\n    }\n  };\n  const resetForm = () => {\n    setFormData({\n      titre: \"\",\n      description: \"\",\n      date_debut: \"\",\n      date_fin: \"\",\n      statut: \"planifié\",\n      createur_id: (user === null || user === void 0 ? void 0 : user.id) || 1,\n      populations: [],\n      ressources: [],\n      kpis: []\n    });\n    setEditingId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-container\",\n      children: [(user === null || user === void 0 ? void 0 : user.role) === \"admin\" && /*#__PURE__*/_jsxDEV(ActionForm, {\n        formData: formData,\n        onChange: handleChange,\n        onSubmit: handleSubmit,\n        onCancel: resetForm,\n        isEditing: !!editingId,\n        populations: populations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"actions-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Actions RSE (\", filteredActions.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"refresh-btn\",\n              onClick: loadData,\n              children: \"\\uD83D\\uDD04 Actualiser\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-search-container\",\n          children: /*#__PURE__*/_jsxDEV(SearchBar, {\n            value: searchTerm,\n            onChange: setSearchTerm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-banner\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Chargement en cours...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this) : filteredActions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: \"Aucune action trouv\\xE9e\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions-grid\",\n          children: filteredActions.map(action => /*#__PURE__*/_jsxDEV(ActionCard, {\n            action: action,\n            onEdit: handleEdit,\n            onDelete: handleDelete,\n            canEdit: (user === null || user === void 0 ? void 0 : user.role) === \"admin\"\n          }, action.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA9 \", new Date().getFullYear(), \" ECE Paris - Projet RSE\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(RSEPlatform, \"Q60CCR55+3dokMWc7Jhn0dNifV0=\", false, function () {\n  return [useAuth];\n});\n_c = RSEPlatform;\nexport default RSEPlatform;\n\n/*import React, { useState, useEffect } from 'react';\r\nimport { fetchActions, createAction, updateAction, deleteAction } from './services/api';\r\nimport ActionCard from './components/ActionCard';\r\nimport ActionForm from './components/ActionForm';\r\nimport SearchBar from './components/SearchBar';\r\nimport './App.css';\r\n\r\nimport { AuthProvider, useAuth } from './context/AuthContext';\r\n\r\n\r\n\r\nfunction RSEPlatform() {\r\n  //const { user } = useAuth();\r\n  const { user, login, logout } = useAuth(); // ✅ ne sera plus undefined\r\n/*  return (\r\n    <div>\r\n      {user ? <p>Bienvenue {user.email}</p> : <p>Veuillez vous connecter</p>}\r\n    </div>\r\n  );*\r\n  const [actions, setActions] = useState([]);\r\n  const [filteredActions, setFilteredActions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    titre: \"\",\r\n    description: \"\",\r\n    date_debut: \"\",\r\n    date_fin: \"\",\r\n    statut: \"planifié\",\r\n    createur_id: 1,\r\n    populations: [],\r\n    ressources: [],\r\n    kpis: [],\r\n  });\r\n  const [populations, setPopulations] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Charger les données\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        const response = await fetchActions();\r\n        const actionsData = response.data || []; // ✅ on prend bien response.data\r\n        setActions(actionsData);\r\n        setFilteredActions(actionsData);\r\n\r\n        setPopulations([\r\n          { id: 1, type: \"étudiants\" },\r\n          { id: 2, type: \"enseignants\" },\r\n          { id: 3, type: \"admin\" },\r\n          { id: 4, type: \"partenaires\" },\r\n          { id: 5, type: \"tout\" },\r\n        ]);\r\n      } catch (err) {\r\n        setError(\"Erreur de chargement des données\");\r\n        console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  // Filtrer en fonction de la recherche\r\n  useEffect(() => {\r\n    const filtered = actions.filter(\r\n      (action) =>\r\n        action.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        action.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredActions(filtered);\r\n  }, [searchTerm, actions]);\r\n\r\n  // Gérer les changements du formulaire\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Soumettre (création ou mise à jour)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editingId) {\r\n        await updateAction(editingId, formData);\r\n        setActions(\r\n          actions.map((a) =>\r\n            a.id === editingId ? { ...a, ...formData } : a\r\n          )\r\n        );\r\n      } else {\r\n        const response = await createAction(formData);\r\n        const newAction = response.data || response; // selon ton API\r\n        setActions([...actions, newAction]);\r\n      }\r\n      resetForm();\r\n    } catch (err) {\r\n      setError(editingId ? \"Erreur de mise à jour\" : \"Erreur de création\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (action) => {\r\n    setFormData({\r\n      titre: action.titre,\r\n      description: action.description,\r\n      date_debut: action.date_debut,\r\n      date_fin: action.date_fin,\r\n      statut: action.statut,\r\n      createur_id: action.createur_id,\r\n      populations: action.populations || [],\r\n      ressources: action.ressources || [],\r\n      kpis: action.kpis || [],\r\n    });\r\n    setEditingId(action.id);\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Supprimer cette action ?\")) return;\r\n    try {\r\n      await deleteAction(id);\r\n      setActions(actions.filter((a) => a.id !== id));\r\n    } catch (err) {\r\n      setError(\"Erreur de suppression\");\r\n      console.error(err);\r\n      setTimeout(() => setError(\"\"), 3000);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      titre: \"\",\r\n      description: \"\",\r\n      date_debut: \"\",\r\n      date_fin: \"\",\r\n      statut: \"planifié\",\r\n      createur_id: 1,\r\n      populations: [],\r\n      ressources: [],\r\n      kpis: [],\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* HEADER \r\n      <header className=\"header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"logo-container\">\r\n            <img src=\"/ECE.png\" alt=\"ECE Paris\" className=\"logo\" />\r\n          </div>\r\n          <h1 className=\"header-title\">Plateforme RSE - ECE Paris</h1>\r\n\r\n          <div className=\"user-avatar-container\">\r\n            {user ? (\r\n              <div className=\"user-info\">\r\n                <span className=\"user-name\">\r\n                  {user.prenom || user.email.split(\"@\")[0]}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"user-avatar\">\r\n                <span>U</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* MAIN *\r\n      <main className=\"main-container\">\r\n        <ActionForm\r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          onCancel={resetForm}\r\n          isEditing={!!editingId}\r\n          populations={populations}\r\n        />\r\n\r\n        <section className=\"actions-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Actions RSE ({filteredActions.length})</h2>\r\n            <div className=\"section-actions\">\r\n              <button\r\n                className=\"refresh-btn\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                🔄 Actualiser\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"action-search-container\">\r\n            <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n          </div>\r\n\r\n          {error && <div className=\"error-banner\">{error}</div>}\r\n\r\n          {isLoading ? (\r\n            <div className=\"loading\">Chargement en cours...</div>\r\n          ) : !Array.isArray(filteredActions) ||\r\n            filteredActions.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              Aucune action trouvée. Essayez une autre recherche.\r\n            </div>\r\n          ) : (\r\n            <div className=\"actions-grid\">\r\n              {filteredActions.map((action) => (\r\n                <ActionCard\r\n                  key={action.id}\r\n                  action={action}\r\n                  onEdit={handleEdit}\r\n                  onDelete={handleDelete}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n\r\n      {/* FOOTER *\r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} ECE Paris - Projet RSE</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default RSEPlatform;\r\nexport default RSEPlatform;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"RSEPlatform\");","map":{"version":3,"names":["React","useState","useEffect","fetchActions","createAction","updateAction","deleteAction","ActionCard","ActionForm","SearchBar","useAuth","jsxDEV","_jsxDEV","RSEPlatform","_s","user","actions","setActions","filteredActions","setFilteredActions","searchTerm","setSearchTerm","formData","setFormData","titre","description","date_debut","date_fin","statut","createur_id","id","populations","ressources","kpis","type","editingId","setEditingId","isLoading","setIsLoading","error","setError","loadData","response","data","err","filtered","filter","action","toLowerCase","includes","handleChange","e","target","name","value","handleSubmit","preventDefault","map","a","resetForm","handleEdit","handleDelete","window","confirm","className","children","role","onChange","onSubmit","onCancel","isEditing","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","onEdit","onDelete","canEdit","Date","getFullYear","_c","$RefreshReg$"],"sources":["C:/wamp64/www/RSE/frontend/src/RSEPlatform.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchActions, createAction, updateAction, deleteAction } from './services/api';\r\nimport ActionCard from './components/ActionCard';\r\nimport ActionForm from './components/ActionForm';\r\nimport SearchBar from './components/SearchBar';\r\nimport './App.css';\r\nimport { useAuth } from './context/AuthContext';\r\n\r\nfunction RSEPlatform() {\r\n  const { user } = useAuth();\r\n  const [actions, setActions] = useState([]);\r\n  const [filteredActions, setFilteredActions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    titre: \"\",\r\n    description: \"\",\r\n    date_debut: \"\",\r\n    date_fin: \"\",\r\n    statut: \"planifié\",\r\n    createur_id: user?.id || 1,\r\n    populations: [],\r\n    ressources: [],\r\n    kpis: [],\r\n  });\r\n  const [populations] = useState([\r\n    { id: 1, type: \"étudiants\" },\r\n    { id: 2, type: \"enseignants\" },\r\n    { id: 3, type: \"admin\" },\r\n    { id: 4, type: \"partenaires\" },\r\n    { id: 5, type: \"tout\" },\r\n  ]);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await fetchActions();\r\n      setActions(response.data);\r\n      setFilteredActions(response.data);\r\n    } catch (err) {\r\n      setError(\"Erreur de chargement des données\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const filtered = actions.filter(action =>\r\n      action.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      action.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredActions(filtered);\r\n  }, [searchTerm, actions]);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editingId) {\r\n        await updateAction(editingId, formData);\r\n        setActions(actions.map(a => a.id === editingId ? { ...a, ...formData } : a));\r\n      } else {\r\n        const response = await createAction(formData);\r\n        setActions([...actions, response.data]);\r\n      }\r\n      resetForm();\r\n      loadData(); // Recharger les données\r\n    } catch (err) {\r\n      setError(editingId ? \"Erreur de mise à jour\" : \"Erreur de création\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (action) => {\r\n    setFormData({\r\n      titre: action.titre,\r\n      description: action.description,\r\n      date_debut: action.date_debut,\r\n      date_fin: action.date_fin,\r\n      statut: action.statut,\r\n      createur_id: action.createur_id,\r\n      populations: action.populations || [],\r\n      ressources: action.ressources || [],\r\n      kpis: action.kpis || [],\r\n    });\r\n    setEditingId(action.id);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Supprimer cette action ?\")) return;\r\n    try {\r\n      await deleteAction(id);\r\n      setActions(actions.filter(a => a.id !== id));\r\n    } catch (err) {\r\n      setError(\"Erreur de suppression\");\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      titre: \"\",\r\n      description: \"\",\r\n      date_debut: \"\",\r\n      date_fin: \"\",\r\n      statut: \"planifié\",\r\n      createur_id: user?.id || 1,\r\n      populations: [],\r\n      ressources: [],\r\n      kpis: [],\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/*<header className=\"header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"logo-container\">\r\n            <img src=\"/ECE.png\" alt=\"ECE Paris\" className=\"logo\" />\r\n          </div>\r\n          <h1 className=\"header-title\">Plateforme RSE - ECE Paris</h1>\r\n          <div className=\"user-avatar-container\">\r\n            {user ? (\r\n              <div className=\"user-info\">\r\n                <span className=\"user-name\">\r\n                  {user.prenom || user.email.split(\"@\")[0]}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"user-avatar\">\r\n                <span>U</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>*/}\r\n\r\n      <main className=\"main-container\">\r\n        {user?.role === \"admin\" && (\r\n          <ActionForm\r\n            formData={formData}\r\n            onChange={handleChange}\r\n            onSubmit={handleSubmit}\r\n            onCancel={resetForm}\r\n            isEditing={!!editingId}\r\n            populations={populations}\r\n          />\r\n        )}\r\n\r\n        <section className=\"actions-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Actions RSE ({filteredActions.length})</h2>\r\n            <div className=\"section-actions\">\r\n              <button className=\"refresh-btn\" onClick={loadData}>\r\n                🔄 Actualiser\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"action-search-container\">\r\n            <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n          </div>\r\n\r\n          {error && <div className=\"error-banner\">{error}</div>}\r\n\r\n          {isLoading ? (\r\n            <div className=\"loading\">Chargement en cours...</div>\r\n          ) : filteredActions.length === 0 ? (\r\n            <div className=\"empty-state\">Aucune action trouvée</div>\r\n          ) : (\r\n            <div className=\"actions-grid\">\r\n              {filteredActions.map((action) => (\r\n                <ActionCard\r\n                  key={action.id}\r\n                  action={action}\r\n                  onEdit={handleEdit}\r\n                  onDelete={handleDelete}\r\n                  canEdit={user?.role === \"admin\"}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n\r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} ECE Paris - Projet RSE</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RSEPlatform;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport { fetchActions, createAction, updateAction, deleteAction } from './services/api';\r\nimport ActionCard from './components/ActionCard';\r\nimport ActionForm from './components/ActionForm';\r\nimport SearchBar from './components/SearchBar';\r\nimport './App.css';\r\n\r\nimport { AuthProvider, useAuth } from './context/AuthContext';\r\n\r\n\r\n\r\nfunction RSEPlatform() {\r\n  //const { user } = useAuth();\r\n  const { user, login, logout } = useAuth(); // ✅ ne sera plus undefined\r\n/*  return (\r\n    <div>\r\n      {user ? <p>Bienvenue {user.email}</p> : <p>Veuillez vous connecter</p>}\r\n    </div>\r\n  );*\r\n  const [actions, setActions] = useState([]);\r\n  const [filteredActions, setFilteredActions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    titre: \"\",\r\n    description: \"\",\r\n    date_debut: \"\",\r\n    date_fin: \"\",\r\n    statut: \"planifié\",\r\n    createur_id: 1,\r\n    populations: [],\r\n    ressources: [],\r\n    kpis: [],\r\n  });\r\n  const [populations, setPopulations] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Charger les données\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        const response = await fetchActions();\r\n        const actionsData = response.data || []; // ✅ on prend bien response.data\r\n        setActions(actionsData);\r\n        setFilteredActions(actionsData);\r\n\r\n        setPopulations([\r\n          { id: 1, type: \"étudiants\" },\r\n          { id: 2, type: \"enseignants\" },\r\n          { id: 3, type: \"admin\" },\r\n          { id: 4, type: \"partenaires\" },\r\n          { id: 5, type: \"tout\" },\r\n        ]);\r\n      } catch (err) {\r\n        setError(\"Erreur de chargement des données\");\r\n        console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  // Filtrer en fonction de la recherche\r\n  useEffect(() => {\r\n    const filtered = actions.filter(\r\n      (action) =>\r\n        action.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        action.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredActions(filtered);\r\n  }, [searchTerm, actions]);\r\n\r\n  // Gérer les changements du formulaire\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Soumettre (création ou mise à jour)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editingId) {\r\n        await updateAction(editingId, formData);\r\n        setActions(\r\n          actions.map((a) =>\r\n            a.id === editingId ? { ...a, ...formData } : a\r\n          )\r\n        );\r\n      } else {\r\n        const response = await createAction(formData);\r\n        const newAction = response.data || response; // selon ton API\r\n        setActions([...actions, newAction]);\r\n      }\r\n      resetForm();\r\n    } catch (err) {\r\n      setError(editingId ? \"Erreur de mise à jour\" : \"Erreur de création\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (action) => {\r\n    setFormData({\r\n      titre: action.titre,\r\n      description: action.description,\r\n      date_debut: action.date_debut,\r\n      date_fin: action.date_fin,\r\n      statut: action.statut,\r\n      createur_id: action.createur_id,\r\n      populations: action.populations || [],\r\n      ressources: action.ressources || [],\r\n      kpis: action.kpis || [],\r\n    });\r\n    setEditingId(action.id);\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Supprimer cette action ?\")) return;\r\n    try {\r\n      await deleteAction(id);\r\n      setActions(actions.filter((a) => a.id !== id));\r\n    } catch (err) {\r\n      setError(\"Erreur de suppression\");\r\n      console.error(err);\r\n      setTimeout(() => setError(\"\"), 3000);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      titre: \"\",\r\n      description: \"\",\r\n      date_debut: \"\",\r\n      date_fin: \"\",\r\n      statut: \"planifié\",\r\n      createur_id: 1,\r\n      populations: [],\r\n      ressources: [],\r\n      kpis: [],\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* HEADER \r\n      <header className=\"header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"logo-container\">\r\n            <img src=\"/ECE.png\" alt=\"ECE Paris\" className=\"logo\" />\r\n          </div>\r\n          <h1 className=\"header-title\">Plateforme RSE - ECE Paris</h1>\r\n\r\n          <div className=\"user-avatar-container\">\r\n            {user ? (\r\n              <div className=\"user-info\">\r\n                <span className=\"user-name\">\r\n                  {user.prenom || user.email.split(\"@\")[0]}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"user-avatar\">\r\n                <span>U</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* MAIN *\r\n      <main className=\"main-container\">\r\n        <ActionForm\r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          onCancel={resetForm}\r\n          isEditing={!!editingId}\r\n          populations={populations}\r\n        />\r\n\r\n        <section className=\"actions-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Actions RSE ({filteredActions.length})</h2>\r\n            <div className=\"section-actions\">\r\n              <button\r\n                className=\"refresh-btn\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                🔄 Actualiser\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"action-search-container\">\r\n            <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n          </div>\r\n\r\n          {error && <div className=\"error-banner\">{error}</div>}\r\n\r\n          {isLoading ? (\r\n            <div className=\"loading\">Chargement en cours...</div>\r\n          ) : !Array.isArray(filteredActions) ||\r\n            filteredActions.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              Aucune action trouvée. Essayez une autre recherche.\r\n            </div>\r\n          ) : (\r\n            <div className=\"actions-grid\">\r\n              {filteredActions.map((action) => (\r\n                <ActionCard\r\n                  key={action.id}\r\n                  action={action}\r\n                  onEdit={handleEdit}\r\n                  onDelete={handleDelete}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n\r\n      {/* FOOTER *\r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} ECE Paris - Projet RSE</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default RSEPlatform;\r\nexport default RSEPlatform;\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,YAAY,EAAEC,YAAY,EAAEC,YAAY,QAAQ,gBAAgB;AACvF,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,WAAW;AAClB,SAASC,OAAO,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAK,CAAC,GAAGL,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC;IACvCuB,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,UAAU,EAAE,EAAE;IACdC,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE,UAAU;IAClBC,WAAW,EAAE,CAAAd,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEe,EAAE,KAAI,CAAC;IAC1BC,WAAW,EAAE,EAAE;IACfC,UAAU,EAAE,EAAE;IACdC,IAAI,EAAE;EACR,CAAC,CAAC;EACF,MAAM,CAACF,WAAW,CAAC,GAAG9B,QAAQ,CAAC,CAC7B;IAAE6B,EAAE,EAAE,CAAC;IAAEI,IAAI,EAAE;EAAY,CAAC,EAC5B;IAAEJ,EAAE,EAAE,CAAC;IAAEI,IAAI,EAAE;EAAc,CAAC,EAC9B;IAAEJ,EAAE,EAAE,CAAC;IAAEI,IAAI,EAAE;EAAQ,CAAC,EACxB;IAAEJ,EAAE,EAAE,CAAC;IAAEI,IAAI,EAAE;EAAc,CAAC,EAC9B;IAAEJ,EAAE,EAAE,CAAC;IAAEI,IAAI,EAAE;EAAO,CAAC,CACxB,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACoC,SAAS,EAAEC,YAAY,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACsC,KAAK,EAAEC,QAAQ,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACduC,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACFH,YAAY,CAAC,IAAI,CAAC;MAClB,MAAMI,QAAQ,GAAG,MAAMvC,YAAY,CAAC,CAAC;MACrCc,UAAU,CAACyB,QAAQ,CAACC,IAAI,CAAC;MACzBxB,kBAAkB,CAACuB,QAAQ,CAACC,IAAI,CAAC;IACnC,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZJ,QAAQ,CAAC,kCAAkC,CAAC;IAC9C,CAAC,SAAS;MACRF,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACd,MAAM2C,QAAQ,GAAG7B,OAAO,CAAC8B,MAAM,CAACC,MAAM,IACpCA,MAAM,CAACvB,KAAK,CAACwB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC7B,UAAU,CAAC4B,WAAW,CAAC,CAAC,CAAC,IAC7DD,MAAM,CAACtB,WAAW,CAACuB,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC7B,UAAU,CAAC4B,WAAW,CAAC,CAAC,CACpE,CAAC;IACD7B,kBAAkB,CAAC0B,QAAQ,CAAC;EAC9B,CAAC,EAAE,CAACzB,UAAU,EAAEJ,OAAO,CAAC,CAAC;EAEzB,MAAMkC,YAAY,GAAIC,CAAC,IAAK;IAC1B5B,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAAC6B,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,IAAIrB,SAAS,EAAE;QACb,MAAM9B,YAAY,CAAC8B,SAAS,EAAEb,QAAQ,CAAC;QACvCL,UAAU,CAACD,OAAO,CAACyC,GAAG,CAACC,CAAC,IAAIA,CAAC,CAAC5B,EAAE,KAAKK,SAAS,GAAG;UAAE,GAAGuB,CAAC;UAAE,GAAGpC;QAAS,CAAC,GAAGoC,CAAC,CAAC,CAAC;MAC9E,CAAC,MAAM;QACL,MAAMhB,QAAQ,GAAG,MAAMtC,YAAY,CAACkB,QAAQ,CAAC;QAC7CL,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE0B,QAAQ,CAACC,IAAI,CAAC,CAAC;MACzC;MACAgB,SAAS,CAAC,CAAC;MACXlB,QAAQ,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZJ,QAAQ,CAACL,SAAS,GAAG,uBAAuB,GAAG,oBAAoB,CAAC;IACtE;EACF,CAAC;EAED,MAAMyB,UAAU,GAAIb,MAAM,IAAK;IAC7BxB,WAAW,CAAC;MACVC,KAAK,EAAEuB,MAAM,CAACvB,KAAK;MACnBC,WAAW,EAAEsB,MAAM,CAACtB,WAAW;MAC/BC,UAAU,EAAEqB,MAAM,CAACrB,UAAU;MAC7BC,QAAQ,EAAEoB,MAAM,CAACpB,QAAQ;MACzBC,MAAM,EAAEmB,MAAM,CAACnB,MAAM;MACrBC,WAAW,EAAEkB,MAAM,CAAClB,WAAW;MAC/BE,WAAW,EAAEgB,MAAM,CAAChB,WAAW,IAAI,EAAE;MACrCC,UAAU,EAAEe,MAAM,CAACf,UAAU,IAAI,EAAE;MACnCC,IAAI,EAAEc,MAAM,CAACd,IAAI,IAAI;IACvB,CAAC,CAAC;IACFG,YAAY,CAACW,MAAM,CAACjB,EAAE,CAAC;EACzB,CAAC;EAED,MAAM+B,YAAY,GAAG,MAAO/B,EAAE,IAAK;IACjC,IAAI,CAACgC,MAAM,CAACC,OAAO,CAAC,0BAA0B,CAAC,EAAE;IACjD,IAAI;MACF,MAAMzD,YAAY,CAACwB,EAAE,CAAC;MACtBb,UAAU,CAACD,OAAO,CAAC8B,MAAM,CAACY,CAAC,IAAIA,CAAC,CAAC5B,EAAE,KAAKA,EAAE,CAAC,CAAC;IAC9C,CAAC,CAAC,OAAOc,GAAG,EAAE;MACZJ,QAAQ,CAAC,uBAAuB,CAAC;IACnC;EACF,CAAC;EAED,MAAMmB,SAAS,GAAGA,CAAA,KAAM;IACtBpC,WAAW,CAAC;MACVC,KAAK,EAAE,EAAE;MACTC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,UAAU;MAClBC,WAAW,EAAE,CAAAd,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEe,EAAE,KAAI,CAAC;MAC1BC,WAAW,EAAE,EAAE;MACfC,UAAU,EAAE,EAAE;MACdC,IAAI,EAAE;IACR,CAAC,CAAC;IACFG,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACExB,OAAA;IAAKoD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAuBlBrD,OAAA;MAAMoD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,GAC7B,CAAAlD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmD,IAAI,MAAK,OAAO,iBACrBtD,OAAA,CAACJ,UAAU;QACTc,QAAQ,EAAEA,QAAS;QACnB6C,QAAQ,EAAEjB,YAAa;QACvBkB,QAAQ,EAAEb,YAAa;QACvBc,QAAQ,EAAEV,SAAU;QACpBW,SAAS,EAAE,CAAC,CAACnC,SAAU;QACvBJ,WAAW,EAAEA;MAAY;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CACF,eAED9D,OAAA;QAASoD,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAClCrD,OAAA;UAAKoD,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BrD,OAAA;YAAAqD,QAAA,GAAI,eAAa,EAAC/C,eAAe,CAACyD,MAAM,EAAC,GAAC;UAAA;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC/C9D,OAAA;YAAKoD,SAAS,EAAC,iBAAiB;YAAAC,QAAA,eAC9BrD,OAAA;cAAQoD,SAAS,EAAC,aAAa;cAACY,OAAO,EAAEnC,QAAS;cAAAwB,QAAA,EAAC;YAEnD;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN9D,OAAA;UAAKoD,SAAS,EAAC,yBAAyB;UAAAC,QAAA,eACtCrD,OAAA,CAACH,SAAS;YAAC6C,KAAK,EAAElC,UAAW;YAAC+C,QAAQ,EAAE9C;UAAc;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC,EAELnC,KAAK,iBAAI3B,OAAA;UAAKoD,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAE1B;QAAK;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EAEpDrC,SAAS,gBACRzB,OAAA;UAAKoD,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAC;QAAsB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,GACnDxD,eAAe,CAACyD,MAAM,KAAK,CAAC,gBAC9B/D,OAAA;UAAKoD,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAqB;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,gBAExD9D,OAAA;UAAKoD,SAAS,EAAC,cAAc;UAAAC,QAAA,EAC1B/C,eAAe,CAACuC,GAAG,CAAEV,MAAM,iBAC1BnC,OAAA,CAACL,UAAU;YAETwC,MAAM,EAAEA,MAAO;YACf8B,MAAM,EAAEjB,UAAW;YACnBkB,QAAQ,EAAEjB,YAAa;YACvBkB,OAAO,EAAE,CAAAhE,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmD,IAAI,MAAK;UAAQ,GAJ3BnB,MAAM,CAACjB,EAAE;YAAAyC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKf,CACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEP9D,OAAA;MAAQoD,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACxBrD,OAAA;QAAAqD,QAAA,GAAG,OAAE,EAAC,IAAIe,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,EAAC,yBAAuB;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC5D,EAAA,CA9LQD,WAAW;EAAA,QACDH,OAAO;AAAA;AAAAwE,EAAA,GADjBrE,WAAW;AAgMpB,eAAeqE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}