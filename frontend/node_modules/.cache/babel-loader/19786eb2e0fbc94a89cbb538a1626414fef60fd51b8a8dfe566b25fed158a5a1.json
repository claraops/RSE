{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\RSE\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchActions, createAction, updateAction, deleteAction } from './services/api';\nimport ActionCard from './components/ActionCard';\nimport ActionForm from './components/ActionForm';\nimport SearchBar from './components/SearchBar';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { AuthProvider, useAuth } from './context/AuthContext';\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport RSEPlatform from './RSEPlatform';\nimport Dashboard from './components/Dashboard';\nimport ActionDetail from './components/ActionDetail';\nimport Planning from './components/Planning';\nimport Newsletter from './components/Newsletter';\nimport Statistics from './components/Statistics';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PrivateRoute({\n  children\n}) {\n  _s();\n  const {\n    user\n  } = useAuth();\n  return user ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 28\n  }, this);\n}\n_s(PrivateRoute, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/RSEPlatform\",\n          element: /*#__PURE__*/_jsxDEV(PrivateRoute, {\n            children: /*#__PURE__*/_jsxDEV(RSEPlatform, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/dashboard\",\n          element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/statistics\",\n          element: /*#__PURE__*/_jsxDEV(Statistics, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/newsletter\",\n          element: /*#__PURE__*/_jsxDEV(Newsletter, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/planning\",\n          element: /*#__PURE__*/_jsxDEV(Planning, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 6\n  }, this);\n}\n\n/*function RSEPlatform() {\r\n  //const { user } = useAuth();\r\n  const { user, login, logout } = useAuth(); // ✅ ne sera plus undefined\r\n  return (\r\n    <div>\r\n      {user ? <p>Bienvenue {user.email}</p> : <p>Veuillez vous connecter</p>}\r\n    </div>\r\n  );\r\n  const [actions, setActions] = useState([]);\r\n  const [filteredActions, setFilteredActions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    titre: \"\",\r\n    description: \"\",\r\n    date_debut: \"\",\r\n    date_fin: \"\",\r\n    statut: \"planifié\",\r\n    createur_id: 1,\r\n    populations: [],\r\n    ressources: [],\r\n    kpis: [],\r\n  });\r\n  const [populations, setPopulations] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Charger les données\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        const response = await fetchActions();\r\n        const actionsData = response.data || []; // ✅ on prend bien response.data\r\n        setActions(actionsData);\r\n        setFilteredActions(actionsData);\r\n\r\n        setPopulations([\r\n          { id: 1, type: \"étudiants\" },\r\n          { id: 2, type: \"enseignants\" },\r\n          { id: 3, type: \"admin\" },\r\n          { id: 4, type: \"partenaires\" },\r\n          { id: 5, type: \"tout\" },\r\n        ]);\r\n      } catch (err) {\r\n        setError(\"Erreur de chargement des données\");\r\n        console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  // Filtrer en fonction de la recherche\r\n  useEffect(() => {\r\n    const filtered = actions.filter(\r\n      (action) =>\r\n        action.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        action.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredActions(filtered);\r\n  }, [searchTerm, actions]);\r\n\r\n  // Gérer les changements du formulaire\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Soumettre (création ou mise à jour)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editingId) {\r\n        await updateAction(editingId, formData);\r\n        setActions(\r\n          actions.map((a) =>\r\n            a.id === editingId ? { ...a, ...formData } : a\r\n          )\r\n        );\r\n      } else {\r\n        const response = await createAction(formData);\r\n        const newAction = response.data || response; // selon ton API\r\n        setActions([...actions, newAction]);\r\n      }\r\n      resetForm();\r\n    } catch (err) {\r\n      setError(editingId ? \"Erreur de mise à jour\" : \"Erreur de création\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (action) => {\r\n    setFormData({\r\n      titre: action.titre,\r\n      description: action.description,\r\n      date_debut: action.date_debut,\r\n      date_fin: action.date_fin,\r\n      statut: action.statut,\r\n      createur_id: action.createur_id,\r\n      populations: action.populations || [],\r\n      ressources: action.ressources || [],\r\n      kpis: action.kpis || [],\r\n    });\r\n    setEditingId(action.id);\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Supprimer cette action ?\")) return;\r\n    try {\r\n      await deleteAction(id);\r\n      setActions(actions.filter((a) => a.id !== id));\r\n    } catch (err) {\r\n      setError(\"Erreur de suppression\");\r\n      console.error(err);\r\n      setTimeout(() => setError(\"\"), 3000);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      titre: \"\",\r\n      description: \"\",\r\n      date_debut: \"\",\r\n      date_fin: \"\",\r\n      statut: \"planifié\",\r\n      createur_id: 1,\r\n      populations: [],\r\n      ressources: [],\r\n      kpis: [],\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* HEADER \r\n      <header className=\"header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"logo-container\">\r\n            <img src=\"/ECE.png\" alt=\"ECE Paris\" className=\"logo\" />\r\n          </div>\r\n          <h1 className=\"header-title\">Plateforme RSE - ECE Paris</h1>\r\n\r\n          <div className=\"user-avatar-container\">\r\n            {user ? (\r\n              <div className=\"user-info\">\r\n                <span className=\"user-name\">\r\n                  {user.prenom || user.email.split(\"@\")[0]}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"user-avatar\">\r\n                <span>U</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* MAIN *\r\n      <main className=\"main-container\">\r\n        <ActionForm\r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          onCancel={resetForm}\r\n          isEditing={!!editingId}\r\n          populations={populations}\r\n        />\r\n\r\n        <section className=\"actions-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Actions RSE ({filteredActions.length})</h2>\r\n            <div className=\"section-actions\">\r\n              <button\r\n                className=\"refresh-btn\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                🔄 Actualiser\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"action-search-container\">\r\n            <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n          </div>\r\n\r\n          {error && <div className=\"error-banner\">{error}</div>}\r\n\r\n          {isLoading ? (\r\n            <div className=\"loading\">Chargement en cours...</div>\r\n          ) : !Array.isArray(filteredActions) ||\r\n            filteredActions.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              Aucune action trouvée. Essayez une autre recherche.\r\n            </div>\r\n          ) : (\r\n            <div className=\"actions-grid\">\r\n              {filteredActions.map((action) => (\r\n                <ActionCard\r\n                  key={action.id}\r\n                  action={action}\r\n                  onEdit={handleEdit}\r\n                  onDelete={handleDelete}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n\r\n      {/* FOOTER *\r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} ECE Paris - Projet RSE</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default RSEPlatform;*/\n_c2 = App;\nexport default App;\n\n/*import React, { useState, useEffect } from 'react';\r\nimport { \r\n  fetchActions, \r\n  createAction, \r\n  updateAction, \r\n  deleteAction \r\n} from './services/api';\r\nimport ActionCard from './components/ActionCard';\r\nimport ActionForm from './components/ActionForm';\r\nimport SearchBar from './components/SearchBar';\r\nimport './App.css';\r\n//import RSEPlatform from './components/RSEPlatform';\r\n\r\n\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { AuthProvider, useAuth } from './context/AuthContext';\r\nimport Login from './components/Auth/Login';\r\nimport Register from './components/Auth/Register';\r\n//import RSEPlatform from './components/RSEPlatform'; // Votre composant principal existant\r\n\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { user, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Chargement...</div>;\r\n  }\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route \r\n            path=\"/\" \r\n            element={\r\n              <ProtectedRoute>\r\n                <RSEPlatform />\r\n              </ProtectedRoute>\r\n            } \r\n          />\r\n        </Routes>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction RSEPlatform() {\r\n  const { user } = useAuth(); \r\n  const [actions, setActions] = useState([]);\r\n  const [filteredActions, setFilteredActions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    titre: '',\r\n    description: '',\r\n    date_debut: '',\r\n    date_fin: '',\r\n    statut: 'planifié',\r\n    createur_id: 1,\r\n    populations: [],\r\n    ressources: [],\r\n    kpis: []\r\n  });\r\n  const [populations, setPopulations] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        const actionsData = await fetchActions();\r\n        setActions(actionsData);\r\n        setFilteredActions(actionsData);\r\n        \r\n        setPopulations([\r\n          { id: 1, type: 'étudiants' },\r\n          { id: 2, type: 'enseignants' },\r\n          { id: 3, type: 'admin' },\r\n          { id: 4, type: 'partenaires' },\r\n          { id: 5, type: 'tout' }\r\n        ]);\r\n        \r\n      } catch (err) {\r\n        setError('Erreur de chargement des données');\r\n        console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filtered = actions.filter(action => \r\n      action.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      action.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredActions(filtered);\r\n  }, [searchTerm, actions]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      if (editingId) {\r\n        await updateAction(editingId, formData);\r\n        setActions(actions.map(a => a.id === editingId ? { ...a, ...formData } : a));\r\n      } else {\r\n        const newAction = await createAction(formData);\r\n        setActions([...actions, newAction]);\r\n      }\r\n      \r\n      resetForm();\r\n    } catch (err) {\r\n      setError(editingId ? 'Erreur de mise à jour' : 'Erreur de création');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (action) => {\r\n    setFormData({\r\n      titre: action.titre,\r\n      description: action.description,\r\n      date_debut: action.date_debut,\r\n      date_fin: action.date_fin,\r\n      statut: action.statut,\r\n      createur_id: action.createur_id,\r\n      populations: action.populations || [],\r\n      ressources: action.ressources || [],\r\n      kpis: action.kpis || []\r\n    });\r\n    setEditingId(action.id);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Supprimer cette action?')) return;\r\n    \r\n    try {\r\n      await deleteAction(id);\r\n      setActions(actions.filter(a => a.id !== id));\r\n    } catch (err) {\r\n      setError('Erreur de suppression');\r\n      console.error(err);\r\n      \r\n      // Effacer l'erreur après 3 secondes\r\n      setTimeout(() => setError(''), 3000);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      titre: '',\r\n      description: '',\r\n      date_debut: '',\r\n      date_fin: '',\r\n      statut: 'planifié',\r\n      createur_id: 1,\r\n      populations: [],\r\n      ressources: [],\r\n      kpis: []\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">   \r\n\r\n      <header className=\"header\">\r\n  <div className=\"header-content\">\r\n    <div className=\"logo-container\">\r\n      <img \r\n        src=\"/ECE.png\" \r\n        alt=\"ECE Paris\" \r\n        className=\"logo\"\r\n      />\r\n    </div>\r\n    <h1 className=\"header-title\">Plateforme RSE - ECE Paris</h1>\r\n\r\n    <div className=\"user-avatar-container\">\r\n            {user ? (\r\n              <div className=\"user-info\">\r\n                <span className=\"user-name\">\r\n                  {user.prenom || user.email.split('@')[0]}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"user-avatar\">\r\n                <span>U</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n  \r\n</header>\r\n\r\n\r\n      <main className=\"main-container\">\r\n        <ActionForm \r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          onCancel={resetForm}\r\n          isEditing={!!editingId}\r\n          populations={populations}\r\n        />\r\n        \r\n        <section className=\"actions-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Actions RSE ({filteredActions.length})</h2>\r\n            <div className=\"section-actions\">\r\n              <button \r\n                className=\"refresh-btn\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                🔄 Actualiser\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n           <div className=\"action-search-container\">\r\n    <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n  </div>\r\n  \r\n\r\n          \r\n          {error && <div className=\"error-banner\">{error}</div>}\r\n          \r\n          {isLoading ? (\r\n            <div className=\"loading\">Chargement en cours...</div>\r\n          ) : filteredActions.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              Aucune action trouvée. Essayez une autre recherche.\r\n            </div>\r\n          ) : (\r\n            <div className=\"actions-grid\">\r\n              {filteredActions.map(action => (\r\n                <ActionCard\r\n                  key={action.id}\r\n                  action={action}\r\n                  onEdit={handleEdit}\r\n                  onDelete={handleDelete}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} ECE Paris - Projet RSE</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;*/\nvar _c, _c2;\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchActions","createAction","updateAction","deleteAction","ActionCard","ActionForm","SearchBar","BrowserRouter","Router","Routes","Route","Navigate","AuthProvider","useAuth","Login","Register","RSEPlatform","Dashboard","ActionDetail","Planning","Newsletter","Statistics","jsxDEV","_jsxDEV","PrivateRoute","children","_s","user","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","path","element","_c2","$RefreshReg$"],"sources":["C:/wamp64/www/RSE/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchActions, createAction, updateAction, deleteAction } from './services/api';\r\nimport ActionCard from './components/ActionCard';\r\nimport ActionForm from './components/ActionForm';\r\nimport SearchBar from './components/SearchBar';\r\n\r\nimport './App.css';\r\n\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { AuthProvider, useAuth } from './context/AuthContext';\r\nimport Login from './components/Auth/Login';\r\nimport Register from './components/Auth/Register';\r\nimport RSEPlatform from './RSEPlatform'; \r\nimport Dashboard from './components/Dashboard';\r\nimport ActionDetail from './components/ActionDetail';\r\nimport Planning from './components/Planning';\r\nimport Newsletter from './components/Newsletter';\r\nimport Statistics from './components/Statistics';\r\n\r\nfunction PrivateRoute({ children }) {\r\n  const { user } = useAuth();\r\n  return user ? children : <Navigate to=\"/login\" />;\r\n}\r\n\r\n\r\nfunction App() {\r\n  return (\r\n     <AuthProvider>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Navigate to=\"/login\" />} />\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n\r\n          {/* ✅ Protégé */}\r\n          <Route\r\n            path=\"/RSEPlatform\"\r\n            element={\r\n              <PrivateRoute>\r\n                <RSEPlatform />\r\n              </PrivateRoute>\r\n            }\r\n          />\r\n\r\n          <Route path=\"*\" element={<Navigate to=\"/login\" />} />\r\n\r\n          <Route path=\"/dashboard\" element={<Dashboard />} />\r\n          <Route path=\"/statistics\" element={<Statistics />} />\r\n          <Route path=\"/newsletter\" element={<Newsletter />} />\r\n          <Route path=\"/planning\" element={<Planning />} />\r\n          \r\n           {/*<Route path=\"/dashboard\" component={Dashboard} />\r\n            <Route path=\"/action/:id\" component={ActionDetail} />\r\n            <Route path=\"/create-action\" component={ActionForm} />\r\n            <Route path=\"/edit-action/:id\" component={ActionForm} />\r\n            <Route path=\"/planning\" component={Planning} />\r\n            <Route path=\"/newsletter\" component={Newsletter} />\r\n            <Route path=\"/statistics\" component={Statistics} />*/}\r\n        </Routes>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\n      \r\n\r\n/*function RSEPlatform() {\r\n  //const { user } = useAuth();\r\n  const { user, login, logout } = useAuth(); // ✅ ne sera plus undefined\r\n  return (\r\n    <div>\r\n      {user ? <p>Bienvenue {user.email}</p> : <p>Veuillez vous connecter</p>}\r\n    </div>\r\n  );\r\n  const [actions, setActions] = useState([]);\r\n  const [filteredActions, setFilteredActions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [formData, setFormData] = useState({\r\n    titre: \"\",\r\n    description: \"\",\r\n    date_debut: \"\",\r\n    date_fin: \"\",\r\n    statut: \"planifié\",\r\n    createur_id: 1,\r\n    populations: [],\r\n    ressources: [],\r\n    kpis: [],\r\n  });\r\n  const [populations, setPopulations] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Charger les données\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n\r\n        const response = await fetchActions();\r\n        const actionsData = response.data || []; // ✅ on prend bien response.data\r\n        setActions(actionsData);\r\n        setFilteredActions(actionsData);\r\n\r\n        setPopulations([\r\n          { id: 1, type: \"étudiants\" },\r\n          { id: 2, type: \"enseignants\" },\r\n          { id: 3, type: \"admin\" },\r\n          { id: 4, type: \"partenaires\" },\r\n          { id: 5, type: \"tout\" },\r\n        ]);\r\n      } catch (err) {\r\n        setError(\"Erreur de chargement des données\");\r\n        console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  // Filtrer en fonction de la recherche\r\n  useEffect(() => {\r\n    const filtered = actions.filter(\r\n      (action) =>\r\n        action.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        action.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredActions(filtered);\r\n  }, [searchTerm, actions]);\r\n\r\n  // Gérer les changements du formulaire\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Soumettre (création ou mise à jour)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      if (editingId) {\r\n        await updateAction(editingId, formData);\r\n        setActions(\r\n          actions.map((a) =>\r\n            a.id === editingId ? { ...a, ...formData } : a\r\n          )\r\n        );\r\n      } else {\r\n        const response = await createAction(formData);\r\n        const newAction = response.data || response; // selon ton API\r\n        setActions([...actions, newAction]);\r\n      }\r\n      resetForm();\r\n    } catch (err) {\r\n      setError(editingId ? \"Erreur de mise à jour\" : \"Erreur de création\");\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (action) => {\r\n    setFormData({\r\n      titre: action.titre,\r\n      description: action.description,\r\n      date_debut: action.date_debut,\r\n      date_fin: action.date_fin,\r\n      statut: action.statut,\r\n      createur_id: action.createur_id,\r\n      populations: action.populations || [],\r\n      ressources: action.ressources || [],\r\n      kpis: action.kpis || [],\r\n    });\r\n    setEditingId(action.id);\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm(\"Supprimer cette action ?\")) return;\r\n    try {\r\n      await deleteAction(id);\r\n      setActions(actions.filter((a) => a.id !== id));\r\n    } catch (err) {\r\n      setError(\"Erreur de suppression\");\r\n      console.error(err);\r\n      setTimeout(() => setError(\"\"), 3000);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      titre: \"\",\r\n      description: \"\",\r\n      date_debut: \"\",\r\n      date_fin: \"\",\r\n      statut: \"planifié\",\r\n      createur_id: 1,\r\n      populations: [],\r\n      ressources: [],\r\n      kpis: [],\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {/* HEADER \r\n      <header className=\"header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"logo-container\">\r\n            <img src=\"/ECE.png\" alt=\"ECE Paris\" className=\"logo\" />\r\n          </div>\r\n          <h1 className=\"header-title\">Plateforme RSE - ECE Paris</h1>\r\n\r\n          <div className=\"user-avatar-container\">\r\n            {user ? (\r\n              <div className=\"user-info\">\r\n                <span className=\"user-name\">\r\n                  {user.prenom || user.email.split(\"@\")[0]}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"user-avatar\">\r\n                <span>U</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* MAIN *\r\n      <main className=\"main-container\">\r\n        <ActionForm\r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          onCancel={resetForm}\r\n          isEditing={!!editingId}\r\n          populations={populations}\r\n        />\r\n\r\n        <section className=\"actions-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Actions RSE ({filteredActions.length})</h2>\r\n            <div className=\"section-actions\">\r\n              <button\r\n                className=\"refresh-btn\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                🔄 Actualiser\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"action-search-container\">\r\n            <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n          </div>\r\n\r\n          {error && <div className=\"error-banner\">{error}</div>}\r\n\r\n          {isLoading ? (\r\n            <div className=\"loading\">Chargement en cours...</div>\r\n          ) : !Array.isArray(filteredActions) ||\r\n            filteredActions.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              Aucune action trouvée. Essayez une autre recherche.\r\n            </div>\r\n          ) : (\r\n            <div className=\"actions-grid\">\r\n              {filteredActions.map((action) => (\r\n                <ActionCard\r\n                  key={action.id}\r\n                  action={action}\r\n                  onEdit={handleEdit}\r\n                  onDelete={handleDelete}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n\r\n      {/* FOOTER *\r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} ECE Paris - Projet RSE</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\n//export default RSEPlatform;*/\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport { \r\n  fetchActions, \r\n  createAction, \r\n  updateAction, \r\n  deleteAction \r\n} from './services/api';\r\nimport ActionCard from './components/ActionCard';\r\nimport ActionForm from './components/ActionForm';\r\nimport SearchBar from './components/SearchBar';\r\nimport './App.css';\r\n//import RSEPlatform from './components/RSEPlatform';\r\n\r\n\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport { AuthProvider, useAuth } from './context/AuthContext';\r\nimport Login from './components/Auth/Login';\r\nimport Register from './components/Auth/Register';\r\n//import RSEPlatform from './components/RSEPlatform'; // Votre composant principal existant\r\n\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { user, loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Chargement...</div>;\r\n  }\r\n\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  return children;\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Login />} />\r\n          <Route path=\"/register\" element={<Register />} />\r\n          <Route \r\n            path=\"/\" \r\n            element={\r\n              <ProtectedRoute>\r\n                <RSEPlatform />\r\n              </ProtectedRoute>\r\n            } \r\n          />\r\n        </Routes>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction RSEPlatform() {\r\n  const { user } = useAuth(); \r\n  const [actions, setActions] = useState([]);\r\n  const [filteredActions, setFilteredActions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    titre: '',\r\n    description: '',\r\n    date_debut: '',\r\n    date_fin: '',\r\n    statut: 'planifié',\r\n    createur_id: 1,\r\n    populations: [],\r\n    ressources: [],\r\n    kpis: []\r\n  });\r\n  const [populations, setPopulations] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        const actionsData = await fetchActions();\r\n        setActions(actionsData);\r\n        setFilteredActions(actionsData);\r\n        \r\n        setPopulations([\r\n          { id: 1, type: 'étudiants' },\r\n          { id: 2, type: 'enseignants' },\r\n          { id: 3, type: 'admin' },\r\n          { id: 4, type: 'partenaires' },\r\n          { id: 5, type: 'tout' }\r\n        ]);\r\n        \r\n      } catch (err) {\r\n        setError('Erreur de chargement des données');\r\n        console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filtered = actions.filter(action => \r\n      action.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      action.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredActions(filtered);\r\n  }, [searchTerm, actions]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      if (editingId) {\r\n        await updateAction(editingId, formData);\r\n        setActions(actions.map(a => a.id === editingId ? { ...a, ...formData } : a));\r\n      } else {\r\n        const newAction = await createAction(formData);\r\n        setActions([...actions, newAction]);\r\n      }\r\n      \r\n      resetForm();\r\n    } catch (err) {\r\n      setError(editingId ? 'Erreur de mise à jour' : 'Erreur de création');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (action) => {\r\n    setFormData({\r\n      titre: action.titre,\r\n      description: action.description,\r\n      date_debut: action.date_debut,\r\n      date_fin: action.date_fin,\r\n      statut: action.statut,\r\n      createur_id: action.createur_id,\r\n      populations: action.populations || [],\r\n      ressources: action.ressources || [],\r\n      kpis: action.kpis || []\r\n    });\r\n    setEditingId(action.id);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Supprimer cette action?')) return;\r\n    \r\n    try {\r\n      await deleteAction(id);\r\n      setActions(actions.filter(a => a.id !== id));\r\n    } catch (err) {\r\n      setError('Erreur de suppression');\r\n      console.error(err);\r\n      \r\n      // Effacer l'erreur après 3 secondes\r\n      setTimeout(() => setError(''), 3000);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      titre: '',\r\n      description: '',\r\n      date_debut: '',\r\n      date_fin: '',\r\n      statut: 'planifié',\r\n      createur_id: 1,\r\n      populations: [],\r\n      ressources: [],\r\n      kpis: []\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">   \r\n\r\n      <header className=\"header\">\r\n  <div className=\"header-content\">\r\n    <div className=\"logo-container\">\r\n      <img \r\n        src=\"/ECE.png\" \r\n        alt=\"ECE Paris\" \r\n        className=\"logo\"\r\n      />\r\n    </div>\r\n    <h1 className=\"header-title\">Plateforme RSE - ECE Paris</h1>\r\n\r\n    <div className=\"user-avatar-container\">\r\n            {user ? (\r\n              <div className=\"user-info\">\r\n                <span className=\"user-name\">\r\n                  {user.prenom || user.email.split('@')[0]}\r\n                </span>\r\n              </div>\r\n            ) : (\r\n              <div className=\"user-avatar\">\r\n                <span>U</span>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n  \r\n</header>\r\n\r\n\r\n      <main className=\"main-container\">\r\n        <ActionForm \r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          onCancel={resetForm}\r\n          isEditing={!!editingId}\r\n          populations={populations}\r\n        />\r\n        \r\n        <section className=\"actions-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Actions RSE ({filteredActions.length})</h2>\r\n            <div className=\"section-actions\">\r\n              <button \r\n                className=\"refresh-btn\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                🔄 Actualiser\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n           <div className=\"action-search-container\">\r\n    <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n  </div>\r\n  \r\n\r\n          \r\n          {error && <div className=\"error-banner\">{error}</div>}\r\n          \r\n          {isLoading ? (\r\n            <div className=\"loading\">Chargement en cours...</div>\r\n          ) : filteredActions.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              Aucune action trouvée. Essayez une autre recherche.\r\n            </div>\r\n          ) : (\r\n            <div className=\"actions-grid\">\r\n              {filteredActions.map(action => (\r\n                <ActionCard\r\n                  key={action.id}\r\n                  action={action}\r\n                  onEdit={handleEdit}\r\n                  onDelete={handleDelete}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} ECE Paris - Projet RSE</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}