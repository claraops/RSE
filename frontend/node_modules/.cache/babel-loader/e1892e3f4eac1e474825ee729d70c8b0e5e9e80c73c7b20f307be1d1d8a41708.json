{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\n\n//const API_URL = 'http://localhost:5000/api/action';\n\n// Crée une instance Axios configurable\nconst api = axios.create({\n  baseURL: API_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Intercepteur pour ajouter le token JWT aux requêtes\napi.interceptors.request.use(config => {\n  // Récupère le token du localStorage\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\nexport const fetchActions = async () => {\n  const response = await api.get('/action');\n  return response.data;\n};\nexport const createAction = async action => {\n  const response = await api.post('/', action);\n  return response.data;\n};\nexport const updateAction = async (id, action) => {\n  const response = await api.put(`/${id}`, action);\n  return response.data;\n};\nexport const deleteAction = async id => {\n  const response = await api.delete(`/${id}`);\n  return response.data;\n};\nexport const loginUser = credentials => API.post(\"/auth/login\", credentials);\nexport const registerUser = data => API.post(\"/auth/register\", data);\n\n/*import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/action';\r\n\r\nexport const fetchActions = async () => {\r\n  const response = await axios.get(API_URL);\r\n  return response.data;\r\n};\r\n\r\nexport const createAction = async (action) => {\r\n  const response = await axios.post(API_URL, action);\r\n  return response.data;\r\n};\r\n\r\nexport const updateAction = async (id, action) => {\r\n  const response = await axios.put(`${API_URL}/${id}`, action);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteAction = async (id) => {\r\n  const response = await axios.delete(`${API_URL}/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Ajoutez les autres fonctions (updateAction, deleteAction) si nécessaire\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/actions';\r\n\r\nexport const fetchActions = async () => {\r\n  const response = await axios.get(API_URL);\r\n  return response.data;\r\n};\r\n\r\nexport const createAction = async (action) => {\r\n  const response = await axios.post(API_URL, action);\r\n  return response.data;\r\n};\r\n\r\nexport const updateAction = async (id, action) => {\r\n  const response = await axios.put(`${API_URL}/${id}`, action);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteAction = async (id) => {\r\n  const response = await axios.delete(`${API_URL}/${id}`);\r\n  return response.data;\r\n};*/","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","fetchActions","response","get","data","createAction","action","post","updateAction","id","put","deleteAction","delete","loginUser","credentials","API","registerUser"],"sources":["C:/wamp64/www/RSE/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\n//const API_URL = 'http://localhost:5000/api/action';\r\n\r\n// Crée une instance Axios configurable\r\nconst api = axios.create({\r\n  baseURL:  API_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Intercepteur pour ajouter le token JWT aux requêtes\r\napi.interceptors.request.use(config => {\r\n  // Récupère le token du localStorage\r\n  const token = localStorage.getItem('authToken');\r\n  \r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  \r\n  return config;\r\n}, error => {\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport const fetchActions = async () => {\r\n  const response = await api.get('/action');\r\n  return response.data;\r\n};\r\n\r\nexport const createAction = async (action) => {\r\n  const response = await api.post('/', action);\r\n  return response.data;\r\n};\r\n\r\nexport const updateAction = async (id, action) => {\r\n  const response = await api.put(`/${id}`, action);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteAction = async (id) => {\r\n  const response = await api.delete(`/${id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const loginUser = (credentials) => API.post(\"/auth/login\", credentials);\r\nexport const registerUser = (data) => API.post(\"/auth/register\", data);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/action';\r\n\r\nexport const fetchActions = async () => {\r\n  const response = await axios.get(API_URL);\r\n  return response.data;\r\n};\r\n\r\nexport const createAction = async (action) => {\r\n  const response = await axios.post(API_URL, action);\r\n  return response.data;\r\n};\r\n\r\nexport const updateAction = async (id, action) => {\r\n  const response = await axios.put(`${API_URL}/${id}`, action);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteAction = async (id) => {\r\n  const response = await axios.delete(`${API_URL}/${id}`);\r\n  return response.data;\r\n};\r\n\r\n// Ajoutez les autres fonctions (updateAction, deleteAction) si nécessaire\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api/actions';\r\n\r\nexport const fetchActions = async () => {\r\n  const response = await axios.get(API_URL);\r\n  return response.data;\r\n};\r\n\r\nexport const createAction = async (action) => {\r\n  const response = await axios.post(API_URL, action);\r\n  return response.data;\r\n};\r\n\r\nexport const updateAction = async (id, action) => {\r\n  const response = await axios.put(`${API_URL}/${id}`, action);\r\n  return response.data;\r\n};\r\n\r\nexport const deleteAction = async (id) => {\r\n  const response = await axios.delete(`${API_URL}/${id}`);\r\n  return response.data;\r\n};*/"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;;AAEA;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAGH,OAAO;EACjBI,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAE/C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EAEA,OAAOD,MAAM;AACf,CAAC,EAAEK,KAAK,IAAI;EACV,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC;AAEF,OAAO,MAAMG,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMC,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,GAAG,CAAC,SAAS,CAAC;EACzC,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,MAAOC,MAAM,IAAK;EAC5C,MAAMJ,QAAQ,GAAG,MAAMjB,GAAG,CAACsB,IAAI,CAAC,GAAG,EAAED,MAAM,CAAC;EAC5C,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMI,YAAY,GAAG,MAAAA,CAAOC,EAAE,EAAEH,MAAM,KAAK;EAChD,MAAMJ,QAAQ,GAAG,MAAMjB,GAAG,CAACyB,GAAG,CAAC,IAAID,EAAE,EAAE,EAAEH,MAAM,CAAC;EAChD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMO,YAAY,GAAG,MAAOF,EAAE,IAAK;EACxC,MAAMP,QAAQ,GAAG,MAAMjB,GAAG,CAAC2B,MAAM,CAAC,IAAIH,EAAE,EAAE,CAAC;EAC3C,OAAOP,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,OAAO,MAAMS,SAAS,GAAIC,WAAW,IAAKC,GAAG,CAACR,IAAI,CAAC,aAAa,EAAEO,WAAW,CAAC;AAC9E,OAAO,MAAME,YAAY,GAAIZ,IAAI,IAAKW,GAAG,CAACR,IAAI,CAAC,gBAAgB,EAAEH,IAAI,CAAC;;AAwBtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}