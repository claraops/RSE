{"ast":null,"code":"/*import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Planning.css\";\r\n\r\n\r\nconst Planning = () => {\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth());\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [actions, setActions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Simulation de données - à remplacer par un appel API\r\n    const mockActions = [\r\n      { id: 1, title: 'Journée de nettoyage', date: '2024-09-15', status: 'planned' },\r\n      { id: 2, title: 'Atelier recyclage', date: '2024-09-22', status: 'planned' },\r\n      { id: 3, title: 'Collecte de vêtements', date: '2024-10-05', status: 'planned' },\r\n      { id: 4, title: 'Conférence sur le développement durable', date: '2024-10-12', status: 'planned' }\r\n    ];\r\n    setActions(mockActions);\r\n  }, []);\r\n\r\n  const months = [\r\n    'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',\r\n    'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'\r\n  ];\r\n\r\n  const years = [2024, 2025];\r\n\r\n  const filteredActions = actions.filter(action => {\r\n    const actionDate = new Date(action.date);\r\n    return actionDate.getMonth() === selectedMonth && \r\n           actionDate.getFullYear() === selectedYear;\r\n  });\r\n\r\n  return (\r\n    <div className=\"planning\">\r\n      <h1>Planning des Actions RSE</h1>\r\n      \r\n      <div className=\"planning-controls\">\r\n        <select \r\n          value={selectedMonth} \r\n          onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n        >\r\n          {months.map((month, index) => (\r\n            <option key={index} value={index}>{month}</option>\r\n          ))}\r\n        </select>\r\n        \r\n        <select \r\n          value={selectedYear} \r\n          onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n        >\r\n          {years.map(year => (\r\n            <option key={year} value={year}>{year}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"calendar\">\r\n        {filteredActions.length > 0 ? (\r\n          filteredActions.map(action => (\r\n            <div key={action.id} className=\"calendar-event\">\r\n              <div className=\"event-date\">\r\n                {new Date(action.date).getDate()} {months[selectedMonth]}\r\n              </div>\r\n              <div className=\"event-details\">\r\n                <h3>{action.title}</h3>\r\n                <span className={`event-status ${action.status}`}>\r\n                  {action.status === 'planned' ? 'Planifiée' : \r\n                   action.status === 'in-progress' ? 'En cours' : 'Terminée'}\r\n                </span>\r\n                <Link to={`/action/${action.id}`} className=\"event-link\">Voir détails</Link>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>Aucune action planifiée pour cette période.</p>\r\n        )}\r\n      </div>\r\n\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planning;  */","map":{"version":3,"names":[],"sources":["C:/wamp64/www/RSE/frontend/src/components/Planning.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport \"./Planning.css\";\r\n\r\n\r\nconst Planning = () => {\r\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth());\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear());\r\n  const [actions, setActions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Simulation de données - à remplacer par un appel API\r\n    const mockActions = [\r\n      { id: 1, title: 'Journée de nettoyage', date: '2024-09-15', status: 'planned' },\r\n      { id: 2, title: 'Atelier recyclage', date: '2024-09-22', status: 'planned' },\r\n      { id: 3, title: 'Collecte de vêtements', date: '2024-10-05', status: 'planned' },\r\n      { id: 4, title: 'Conférence sur le développement durable', date: '2024-10-12', status: 'planned' }\r\n    ];\r\n    setActions(mockActions);\r\n  }, []);\r\n\r\n  const months = [\r\n    'Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin',\r\n    'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'\r\n  ];\r\n\r\n  const years = [2024, 2025];\r\n\r\n  const filteredActions = actions.filter(action => {\r\n    const actionDate = new Date(action.date);\r\n    return actionDate.getMonth() === selectedMonth && \r\n           actionDate.getFullYear() === selectedYear;\r\n  });\r\n\r\n  return (\r\n    <div className=\"planning\">\r\n      <h1>Planning des Actions RSE</h1>\r\n      \r\n      <div className=\"planning-controls\">\r\n        <select \r\n          value={selectedMonth} \r\n          onChange={(e) => setSelectedMonth(parseInt(e.target.value))}\r\n        >\r\n          {months.map((month, index) => (\r\n            <option key={index} value={index}>{month}</option>\r\n          ))}\r\n        </select>\r\n        \r\n        <select \r\n          value={selectedYear} \r\n          onChange={(e) => setSelectedYear(parseInt(e.target.value))}\r\n        >\r\n          {years.map(year => (\r\n            <option key={year} value={year}>{year}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"calendar\">\r\n        {filteredActions.length > 0 ? (\r\n          filteredActions.map(action => (\r\n            <div key={action.id} className=\"calendar-event\">\r\n              <div className=\"event-date\">\r\n                {new Date(action.date).getDate()} {months[selectedMonth]}\r\n              </div>\r\n              <div className=\"event-details\">\r\n                <h3>{action.title}</h3>\r\n                <span className={`event-status ${action.status}`}>\r\n                  {action.status === 'planned' ? 'Planifiée' : \r\n                   action.status === 'in-progress' ? 'En cours' : 'Terminée'}\r\n                </span>\r\n                <Link to={`/action/${action.id}`} className=\"event-link\">Voir détails</Link>\r\n              </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>Aucune action planifiée pour cette période.</p>\r\n        )}\r\n      </div>\r\n\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Planning;  */ "],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}