{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\RSE\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchActions, createAction, updateAction, deleteAction } from './services/api';\nimport ActionCard from './components/ActionCard';\nimport ActionForm from './components/ActionForm';\nimport SearchBar from './components/SearchBar';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [actions, setActions] = useState([]);\n  const [filteredActions, setFilteredActions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [formData, setFormData] = useState({\n    titre: '',\n    description: '',\n    date_debut: '',\n    date_fin: '',\n    statut: 'planifié',\n    createur_id: 1,\n    populations: [],\n    ressources: [],\n    kpis: []\n  });\n  const [populations, setPopulations] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        setIsLoading(true);\n        const actionsData = await fetchActions();\n        setActions(actionsData);\n        setFilteredActions(actionsData);\n        setPopulations([{\n          id: 1,\n          type: 'étudiants'\n        }, {\n          id: 2,\n          type: 'enseignants'\n        }, {\n          id: 3,\n          type: 'admin'\n        }, {\n          id: 4,\n          type: 'partenaires'\n        }, {\n          id: 5,\n          type: 'tout'\n        }]);\n      } catch (err) {\n        setError('Erreur de chargement des données');\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n  useEffect(() => {\n    const filtered = actions.filter(action => action.titre.toLowerCase().includes(searchTerm.toLowerCase()) || action.description.toLowerCase().includes(searchTerm.toLowerCase()));\n    setFilteredActions(filtered);\n  }, [searchTerm, actions]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (editingId) {\n        await updateAction(editingId, formData);\n        setActions(actions.map(a => a.id === editingId ? {\n          ...a,\n          ...formData\n        } : a));\n      } else {\n        const newAction = await createAction(formData);\n        setActions([...actions, newAction]);\n      }\n      resetForm();\n    } catch (err) {\n      setError(editingId ? 'Erreur de mise à jour' : 'Erreur de création');\n      console.error(err);\n    }\n  };\n  const handleEdit = action => {\n    setFormData({\n      titre: action.titre,\n      description: action.description,\n      date_debut: action.date_debut,\n      date_fin: action.date_fin,\n      statut: action.statut,\n      createur_id: action.createur_id,\n      populations: action.populations || [],\n      ressources: action.ressources || [],\n      kpis: action.kpis || []\n    });\n    setEditingId(action.id);\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('Supprimer cette action?')) return;\n    try {\n      await deleteAction(id);\n      setActions(actions.filter(a => a.id !== id));\n    } catch (err) {\n      setError('Erreur de suppression');\n      console.error(err);\n\n      // Effacer l'erreur après 3 secondes\n      setTimeout(() => setError(''), 3000);\n    }\n  };\n  const resetForm = () => {\n    setFormData({\n      titre: '',\n      description: '',\n      date_debut: '',\n      date_fin: '',\n      statut: 'planifié',\n      createur_id: 1,\n      populations: [],\n      ressources: [],\n      kpis: []\n    });\n    setEditingId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/frontend/ECE.png\",\n            alt: \"ECE Paris\",\n            className: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"header-title\",\n          children: \"Plateforme RSE - ECE Paris\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-avatar-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"U\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(ActionForm, {\n        formData: formData,\n        onChange: handleChange,\n        onSubmit: handleSubmit,\n        onCancel: resetForm,\n        isEditing: !!editingId,\n        populations: populations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"actions-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Actions RSE (\", filteredActions.length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"refresh-btn\",\n              onClick: () => window.location.reload(),\n              children: \"\\uD83D\\uDD04 Actualiser\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-search-container\",\n          children: /*#__PURE__*/_jsxDEV(SearchBar, {\n            value: searchTerm,\n            onChange: setSearchTerm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 12\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-banner\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading\",\n          children: \"Chargement en cours...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this) : filteredActions.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: \"Aucune action trouv\\xE9e. Essayez une autre recherche.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actions-grid\",\n          children: filteredActions.map(action => /*#__PURE__*/_jsxDEV(ActionCard, {\n            action: action,\n            onEdit: handleEdit,\n            onDelete: handleDelete\n          }, action.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA9 \", new Date().getFullYear(), \" ECE Paris - Projet RSE\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9ynTtpOGK7sEKVZjFfpY0BB7x+w=\");\n_c = App;\nexport default App;\n\n/*import React, { useState, useEffect } from 'react';\r\nimport { fetchActions, createAction } from './services/api';\r\nimport ActionCard from './components/ActionCard';\r\nimport ActionForm from './components/ActionForm';\r\nimport SearchBar from './components/SearchBar';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [actions, setActions] = useState([]);\r\n  const [filteredActions, setFilteredActions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    titre: '',\r\n    description: '',\r\n    date_debut: '',\r\n    date_fin: '',\r\n    statut: 'planifié',\r\n    createur_id: 1, // ID par défaut\r\n    populations: [],\r\n    ressources: [],\r\n    kpis: []\r\n  });\r\n  const [populations, setPopulations] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Charger les actions et les populations au démarrage\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        // Charger les actions\r\n        const actionsData = await fetchActions();\r\n        setActions(actionsData);\r\n        setFilteredActions(actionsData);\r\n        \r\n        // Charger les populations (normalement depuis une API)\r\n        // Pour l'exemple, on utilise des données statiques\r\n        setPopulations([\r\n          { id: 1, type: 'étudiants' },\r\n          { id: 2, type: 'enseignants' },\r\n          { id: 3, type: 'admin' },\r\n          { id: 4, type: 'partenaires' },\r\n          { id: 5, type: 'tout' }\r\n        ]);\r\n        \r\n      } catch (err) {\r\n        setError('Erreur de chargement des données');\r\n        console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, []);\r\n\r\n  // Filtrer les actions\r\n  useEffect(() => {\r\n    const filtered = actions.filter(action => \r\n      action.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      action.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredActions(filtered);\r\n  }, [searchTerm, actions]);\r\n\r\n  // Gestion des changements de formulaire\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Soumission du formulaire\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      if (editingId) {\r\n          await updateAction(editingId, formData);\r\n          // Mettre à jour l'état local\r\n          setActions(actions.map(a => a.id === editingId ? { ...a, ...formData } : a));\r\n        } else {\r\n          const newAction = await createAction(formData);\r\n          setActions([...actions, newAction]);\r\n        }\r\n      /*if (editingId) {\r\n        // Mise à jour (à implémenter)\r\n        // await updateAction(editingId, formData);\r\n      } else {\r\n        const newAction = await createAction(formData);\r\n        setActions([...actions, newAction]);\r\n      }\r\n      \r\n      resetForm();\r\n    } catch (err) {\r\n      setError(editingId ? 'Erreur de mise à jour' : 'Erreur de création');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Édition d'une action\r\n  const handleEdit = (action) => {\r\n    setFormData({\r\n      titre: action.titre,\r\n      description: action.description,\r\n      date_debut: action.date_debut,\r\n      date_fin: action.date_fin,\r\n      statut: action.statut,\r\n      createur_id: action.createur_id,\r\n      populations: action.populations || [],\r\n      ressources: action.ressources || [],\r\n      kpis: action.kpis || []\r\n    });\r\n    setEditingId(action.id);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  // Suppression d'une action\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Supprimer cette action?')) return;\r\n    \r\n    try {\r\n      await deleteAction(id);\r\n      // Implémenter la suppression dans l'API\r\n      // await deleteAction(id);\r\n      setActions(actions.filter(a => a.id !== id));\r\n    } catch (err) {\r\n      setError('Erreur de suppression');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Réinitialiser le formulaire\r\n  const resetForm = () => {\r\n    setFormData({\r\n      titre: '',\r\n      description: '',\r\n      date_debut: '',\r\n      date_fin: '',\r\n      statut: 'planifié',\r\n      createur_id: 1,\r\n      populations: [],\r\n      ressources: [],\r\n      kpis: []\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"header\">\r\n        <header className=\"header\">\r\n  <div className=\"header-content\">\r\n    <div className=\"logo-container\">\r\n      <img \r\n        src=\"/ece-logo.png\" \r\n        alt=\"ECE Paris Logo\" \r\n        className=\"logo\"\r\n      />\r\n      <h1>Plateforme RSE - ECE Paris</h1>\r\n    </div>\r\n    \r\n\r\n    <div className=\"user-avatar\">\r\n      <span>U</span>\r\n    </div>\r\n  </div>\r\n</header>\r\n          {/* \r\n        <div className=\"header-content\">\r\n          <h1>Plateforme RSE - ECE Paris</h1>\r\n          <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n        </div>\r\n      </header> }\r\n\r\n      <main className=\"main-container\">\r\n        <ActionForm \r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          onCancel={resetForm}\r\n          isEditing={!!editingId}\r\n          populations={populations}\r\n        />\r\n\r\n\r\n         <div className=\"header-content\">\r\n          <h1>Plateforme RSE - ECE Paris</h1>\r\n          <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n        </div>\r\n\r\n        <section className=\"actions-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Actions RSE ({filteredActions.length})</h2>\r\n            <div className=\"section-actions\">\r\n              <button \r\n                className=\"refresh-btn\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                🔄 Actualiser\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          {error && <div className=\"error-banner\">{error}</div>}\r\n          \r\n          {isLoading ? (\r\n            <div className=\"loading\">Chargement en cours...</div>\r\n          ) : filteredActions.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              Aucune action trouvée. Essayez une autre recherche.\r\n            </div>\r\n          ) : (\r\n            <div className=\"actions-grid\">\r\n              {filteredActions.map(action => (\r\n                <ActionCard\r\n                  key={action.id}\r\n                  action={action}\r\n                  onEdit={handleEdit}\r\n                  onDelete={handleDelete}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} ECE Paris - Projet RSE</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport { \r\n  fetchActions, \r\n  createAction, \r\n  updateAction, \r\n  deleteAction \r\n} from './services/api';\r\nimport ActionCard from './components/ActionCard';\r\nimport ActionForm from './components/ActionForm';\r\nimport SearchBar from './components/SearchBar';\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  const [actions, setActions] = useState([]);\r\n  const [filteredActions, setFilteredActions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    details: '',\r\n    population: '',\r\n    ressources: '',\r\n    kpi: ''\r\n  });\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Charger les actions au démarrage\r\n  useEffect(() => {\r\n    const loadActions = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const data = await fetchActions();\r\n        setActions(data);\r\n        setFilteredActions(data);\r\n      } catch (err) {\r\n        setError('Erreur de chargement des actions');\r\n        console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadActions();\r\n  }, []);\r\n\r\n  // Filtrer les actions\r\n  useEffect(() => {\r\n    const filtered = actions.filter(action => \r\n      action.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      action.details.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredActions(filtered);\r\n  }, [searchTerm, actions]);\r\n\r\n  // Gestion des changements de formulaire\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Soumission du formulaire\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      if (editingId) {\r\n        await updateAction(editingId, formData);\r\n        setActions(actions.map(a => \r\n          a.id === editingId ? { ...a, ...formData } : a\r\n        ));\r\n      } else {\r\n        const newAction = await createAction(formData);\r\n        setActions([...actions, newAction]);\r\n      }\r\n      \r\n      resetForm();\r\n    } catch (err) {\r\n      setError(editingId \r\n        ? 'Erreur de mise à jour' \r\n        : 'Erreur de création');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Édition d'une action\r\n  const handleEdit = (action) => {\r\n    setFormData(action);\r\n    setEditingId(action.id);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  // Suppression d'une action\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Supprimer cette action?')) return;\r\n    \r\n    try {\r\n      await deleteAction(id);\r\n      setActions(actions.filter(a => a.id !== id));\r\n    } catch (err) {\r\n      setError('Erreur de suppression');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Annulation de l'édition\r\n  const handleCancel = () => {\r\n    resetForm();\r\n  };\r\n\r\n  // Réinitialiser le formulaire\r\n  const resetForm = () => {\r\n    setFormData({\r\n      title: '',\r\n      details: '',\r\n      population: '',\r\n      ressources: '',\r\n      kpi: ''\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"header\">\r\n        <div className=\"header-content\">\r\n          <h1>Plateforme RSE - ECE Paris</h1>\r\n          <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"main-container\">\r\n        <ActionForm \r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          onCancel={handleCancel}\r\n          isEditing={!!editingId}\r\n        />\r\n        \r\n        <section className=\"actions-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Actions RSE ({filteredActions.length})</h2>\r\n            <div className=\"section-actions\">\r\n              <button \r\n                className=\"refresh-btn\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                🔄 Actualiser\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          {error && <div className=\"error-banner\">{error}</div>}\r\n          \r\n          {isLoading ? (\r\n            <div className=\"loading\">Chargement en cours...</div>\r\n          ) : filteredActions.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              Aucune action trouvée. Essayez une autre recherche.\r\n            </div>\r\n          ) : (\r\n            <div className=\"actions-grid\">\r\n              {filteredActions.map(action => (\r\n                <ActionCard\r\n                  key={action.id}\r\n                  action={action}\r\n                  onEdit={handleEdit}\r\n                  onDelete={handleDelete}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} ECE Paris - Projet RSE</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default App;*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","fetchActions","createAction","updateAction","deleteAction","ActionCard","ActionForm","SearchBar","jsxDEV","_jsxDEV","App","_s","actions","setActions","filteredActions","setFilteredActions","searchTerm","setSearchTerm","formData","setFormData","titre","description","date_debut","date_fin","statut","createur_id","populations","ressources","kpis","setPopulations","editingId","setEditingId","isLoading","setIsLoading","error","setError","loadData","actionsData","id","type","err","console","filtered","filter","action","toLowerCase","includes","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","map","a","newAction","resetForm","handleEdit","window","scrollTo","top","behavior","handleDelete","confirm","setTimeout","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onSubmit","onCancel","isEditing","length","onClick","location","reload","onEdit","onDelete","Date","getFullYear","_c","$RefreshReg$"],"sources":["C:/wamp64/www/RSE/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  fetchActions, \r\n  createAction, \r\n  updateAction, \r\n  deleteAction \r\n} from './services/api';\r\nimport ActionCard from './components/ActionCard';\r\nimport ActionForm from './components/ActionForm';\r\nimport SearchBar from './components/SearchBar';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [actions, setActions] = useState([]);\r\n  const [filteredActions, setFilteredActions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    titre: '',\r\n    description: '',\r\n    date_debut: '',\r\n    date_fin: '',\r\n    statut: 'planifié',\r\n    createur_id: 1,\r\n    populations: [],\r\n    ressources: [],\r\n    kpis: []\r\n  });\r\n  const [populations, setPopulations] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        const actionsData = await fetchActions();\r\n        setActions(actionsData);\r\n        setFilteredActions(actionsData);\r\n        \r\n        setPopulations([\r\n          { id: 1, type: 'étudiants' },\r\n          { id: 2, type: 'enseignants' },\r\n          { id: 3, type: 'admin' },\r\n          { id: 4, type: 'partenaires' },\r\n          { id: 5, type: 'tout' }\r\n        ]);\r\n        \r\n      } catch (err) {\r\n        setError('Erreur de chargement des données');\r\n        console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filtered = actions.filter(action => \r\n      action.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      action.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredActions(filtered);\r\n  }, [searchTerm, actions]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      if (editingId) {\r\n        await updateAction(editingId, formData);\r\n        setActions(actions.map(a => a.id === editingId ? { ...a, ...formData } : a));\r\n      } else {\r\n        const newAction = await createAction(formData);\r\n        setActions([...actions, newAction]);\r\n      }\r\n      \r\n      resetForm();\r\n    } catch (err) {\r\n      setError(editingId ? 'Erreur de mise à jour' : 'Erreur de création');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (action) => {\r\n    setFormData({\r\n      titre: action.titre,\r\n      description: action.description,\r\n      date_debut: action.date_debut,\r\n      date_fin: action.date_fin,\r\n      statut: action.statut,\r\n      createur_id: action.createur_id,\r\n      populations: action.populations || [],\r\n      ressources: action.ressources || [],\r\n      kpis: action.kpis || []\r\n    });\r\n    setEditingId(action.id);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Supprimer cette action?')) return;\r\n    \r\n    try {\r\n      await deleteAction(id);\r\n      setActions(actions.filter(a => a.id !== id));\r\n    } catch (err) {\r\n      setError('Erreur de suppression');\r\n      console.error(err);\r\n      \r\n      // Effacer l'erreur après 3 secondes\r\n      setTimeout(() => setError(''), 3000);\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      titre: '',\r\n      description: '',\r\n      date_debut: '',\r\n      date_fin: '',\r\n      statut: 'planifié',\r\n      createur_id: 1,\r\n      populations: [],\r\n      ressources: [],\r\n      kpis: []\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">   \r\n\r\n      <header className=\"header\">\r\n  <div className=\"header-content\">\r\n    <div className=\"logo-container\">\r\n      <img \r\n        src=\"/frontend/ECE.png\" \r\n        alt=\"ECE Paris\" \r\n        className=\"logo\"\r\n      />\r\n    </div>\r\n    <h1 className=\"header-title\">Plateforme RSE - ECE Paris</h1>\r\n    <div className=\"user-avatar-container\">\r\n      <div className=\"user-avatar\">\r\n        <span>U</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</header>\r\n\r\n      {/*<header className=\"header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"logo-container\">\r\n            <img \r\n              src=\"ECE.png\" \r\n              alt=\"ECE Paris\" \r\n              className=\"logo\"\r\n            />\r\n            <h1>Plateforme RSE - ECE Paris</h1>\r\n          </div>\r\n          \r\n          <div className=\"header-right\">\r\n            <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n            <div className=\"user-avatar\">\r\n              <span>U</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header> */} \r\n\r\n\r\n      <main className=\"main-container\">\r\n        <ActionForm \r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          onCancel={resetForm}\r\n          isEditing={!!editingId}\r\n          populations={populations}\r\n        />\r\n        \r\n        <section className=\"actions-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Actions RSE ({filteredActions.length})</h2>\r\n            <div className=\"section-actions\">\r\n              <button \r\n                className=\"refresh-btn\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                🔄 Actualiser\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n           <div className=\"action-search-container\">\r\n    <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n  </div>\r\n  \r\n\r\n          \r\n          {error && <div className=\"error-banner\">{error}</div>}\r\n          \r\n          {isLoading ? (\r\n            <div className=\"loading\">Chargement en cours...</div>\r\n          ) : filteredActions.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              Aucune action trouvée. Essayez une autre recherche.\r\n            </div>\r\n          ) : (\r\n            <div className=\"actions-grid\">\r\n              {filteredActions.map(action => (\r\n                <ActionCard\r\n                  key={action.id}\r\n                  action={action}\r\n                  onEdit={handleEdit}\r\n                  onDelete={handleDelete}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} ECE Paris - Projet RSE</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport { fetchActions, createAction } from './services/api';\r\nimport ActionCard from './components/ActionCard';\r\nimport ActionForm from './components/ActionForm';\r\nimport SearchBar from './components/SearchBar';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [actions, setActions] = useState([]);\r\n  const [filteredActions, setFilteredActions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    titre: '',\r\n    description: '',\r\n    date_debut: '',\r\n    date_fin: '',\r\n    statut: 'planifié',\r\n    createur_id: 1, // ID par défaut\r\n    populations: [],\r\n    ressources: [],\r\n    kpis: []\r\n  });\r\n  const [populations, setPopulations] = useState([]);\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Charger les actions et les populations au démarrage\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        // Charger les actions\r\n        const actionsData = await fetchActions();\r\n        setActions(actionsData);\r\n        setFilteredActions(actionsData);\r\n        \r\n        // Charger les populations (normalement depuis une API)\r\n        // Pour l'exemple, on utilise des données statiques\r\n        setPopulations([\r\n          { id: 1, type: 'étudiants' },\r\n          { id: 2, type: 'enseignants' },\r\n          { id: 3, type: 'admin' },\r\n          { id: 4, type: 'partenaires' },\r\n          { id: 5, type: 'tout' }\r\n        ]);\r\n        \r\n      } catch (err) {\r\n        setError('Erreur de chargement des données');\r\n        console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, []);\r\n\r\n  // Filtrer les actions\r\n  useEffect(() => {\r\n    const filtered = actions.filter(action => \r\n      action.titre.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      action.description.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredActions(filtered);\r\n  }, [searchTerm, actions]);\r\n\r\n  // Gestion des changements de formulaire\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Soumission du formulaire\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      if (editingId) {\r\n          await updateAction(editingId, formData);\r\n          // Mettre à jour l'état local\r\n          setActions(actions.map(a => a.id === editingId ? { ...a, ...formData } : a));\r\n        } else {\r\n          const newAction = await createAction(formData);\r\n          setActions([...actions, newAction]);\r\n        }\r\n      /*if (editingId) {\r\n        // Mise à jour (à implémenter)\r\n        // await updateAction(editingId, formData);\r\n      } else {\r\n        const newAction = await createAction(formData);\r\n        setActions([...actions, newAction]);\r\n      }\r\n      \r\n      resetForm();\r\n    } catch (err) {\r\n      setError(editingId ? 'Erreur de mise à jour' : 'Erreur de création');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Édition d'une action\r\n  const handleEdit = (action) => {\r\n    setFormData({\r\n      titre: action.titre,\r\n      description: action.description,\r\n      date_debut: action.date_debut,\r\n      date_fin: action.date_fin,\r\n      statut: action.statut,\r\n      createur_id: action.createur_id,\r\n      populations: action.populations || [],\r\n      ressources: action.ressources || [],\r\n      kpis: action.kpis || []\r\n    });\r\n    setEditingId(action.id);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  // Suppression d'une action\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Supprimer cette action?')) return;\r\n    \r\n    try {\r\n      await deleteAction(id);\r\n      // Implémenter la suppression dans l'API\r\n      // await deleteAction(id);\r\n      setActions(actions.filter(a => a.id !== id));\r\n    } catch (err) {\r\n      setError('Erreur de suppression');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Réinitialiser le formulaire\r\n  const resetForm = () => {\r\n    setFormData({\r\n      titre: '',\r\n      description: '',\r\n      date_debut: '',\r\n      date_fin: '',\r\n      statut: 'planifié',\r\n      createur_id: 1,\r\n      populations: [],\r\n      ressources: [],\r\n      kpis: []\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"header\">\r\n        <header className=\"header\">\r\n  <div className=\"header-content\">\r\n    <div className=\"logo-container\">\r\n      <img \r\n        src=\"/ece-logo.png\" \r\n        alt=\"ECE Paris Logo\" \r\n        className=\"logo\"\r\n      />\r\n      <h1>Plateforme RSE - ECE Paris</h1>\r\n    </div>\r\n    \r\n\r\n    <div className=\"user-avatar\">\r\n      <span>U</span>\r\n    </div>\r\n  </div>\r\n</header>\r\n          {/* \r\n        <div className=\"header-content\">\r\n          <h1>Plateforme RSE - ECE Paris</h1>\r\n          <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n        </div>\r\n      </header> }\r\n\r\n      <main className=\"main-container\">\r\n        <ActionForm \r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          onCancel={resetForm}\r\n          isEditing={!!editingId}\r\n          populations={populations}\r\n        />\r\n\r\n\r\n         <div className=\"header-content\">\r\n          <h1>Plateforme RSE - ECE Paris</h1>\r\n          <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n        </div>\r\n\r\n        <section className=\"actions-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Actions RSE ({filteredActions.length})</h2>\r\n            <div className=\"section-actions\">\r\n              <button \r\n                className=\"refresh-btn\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                🔄 Actualiser\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          {error && <div className=\"error-banner\">{error}</div>}\r\n          \r\n          {isLoading ? (\r\n            <div className=\"loading\">Chargement en cours...</div>\r\n          ) : filteredActions.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              Aucune action trouvée. Essayez une autre recherche.\r\n            </div>\r\n          ) : (\r\n            <div className=\"actions-grid\">\r\n              {filteredActions.map(action => (\r\n                <ActionCard\r\n                  key={action.id}\r\n                  action={action}\r\n                  onEdit={handleEdit}\r\n                  onDelete={handleDelete}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} ECE Paris - Projet RSE</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport { \r\n  fetchActions, \r\n  createAction, \r\n  updateAction, \r\n  deleteAction \r\n} from './services/api';\r\nimport ActionCard from './components/ActionCard';\r\nimport ActionForm from './components/ActionForm';\r\nimport SearchBar from './components/SearchBar';\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  const [actions, setActions] = useState([]);\r\n  const [filteredActions, setFilteredActions] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    details: '',\r\n    population: '',\r\n    ressources: '',\r\n    kpi: ''\r\n  });\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  // Charger les actions au démarrage\r\n  useEffect(() => {\r\n    const loadActions = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const data = await fetchActions();\r\n        setActions(data);\r\n        setFilteredActions(data);\r\n      } catch (err) {\r\n        setError('Erreur de chargement des actions');\r\n        console.error(err);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadActions();\r\n  }, []);\r\n\r\n  // Filtrer les actions\r\n  useEffect(() => {\r\n    const filtered = actions.filter(action => \r\n      action.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      action.details.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n    setFilteredActions(filtered);\r\n  }, [searchTerm, actions]);\r\n\r\n  // Gestion des changements de formulaire\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Soumission du formulaire\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      if (editingId) {\r\n        await updateAction(editingId, formData);\r\n        setActions(actions.map(a => \r\n          a.id === editingId ? { ...a, ...formData } : a\r\n        ));\r\n      } else {\r\n        const newAction = await createAction(formData);\r\n        setActions([...actions, newAction]);\r\n      }\r\n      \r\n      resetForm();\r\n    } catch (err) {\r\n      setError(editingId \r\n        ? 'Erreur de mise à jour' \r\n        : 'Erreur de création');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Édition d'une action\r\n  const handleEdit = (action) => {\r\n    setFormData(action);\r\n    setEditingId(action.id);\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  // Suppression d'une action\r\n  const handleDelete = async (id) => {\r\n    if (!window.confirm('Supprimer cette action?')) return;\r\n    \r\n    try {\r\n      await deleteAction(id);\r\n      setActions(actions.filter(a => a.id !== id));\r\n    } catch (err) {\r\n      setError('Erreur de suppression');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  // Annulation de l'édition\r\n  const handleCancel = () => {\r\n    resetForm();\r\n  };\r\n\r\n  // Réinitialiser le formulaire\r\n  const resetForm = () => {\r\n    setFormData({\r\n      title: '',\r\n      details: '',\r\n      population: '',\r\n      ressources: '',\r\n      kpi: ''\r\n    });\r\n    setEditingId(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"header\">\r\n        <div className=\"header-content\">\r\n          <h1>Plateforme RSE - ECE Paris</h1>\r\n          <SearchBar value={searchTerm} onChange={setSearchTerm} />\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"main-container\">\r\n        <ActionForm \r\n          formData={formData}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n          onCancel={handleCancel}\r\n          isEditing={!!editingId}\r\n        />\r\n        \r\n        <section className=\"actions-section\">\r\n          <div className=\"section-header\">\r\n            <h2>Actions RSE ({filteredActions.length})</h2>\r\n            <div className=\"section-actions\">\r\n              <button \r\n                className=\"refresh-btn\"\r\n                onClick={() => window.location.reload()}\r\n              >\r\n                🔄 Actualiser\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          {error && <div className=\"error-banner\">{error}</div>}\r\n          \r\n          {isLoading ? (\r\n            <div className=\"loading\">Chargement en cours...</div>\r\n          ) : filteredActions.length === 0 ? (\r\n            <div className=\"empty-state\">\r\n              Aucune action trouvée. Essayez une autre recherche.\r\n            </div>\r\n          ) : (\r\n            <div className=\"actions-grid\">\r\n              {filteredActions.map(action => (\r\n                <ActionCard\r\n                  key={action.id}\r\n                  action={action}\r\n                  onEdit={handleEdit}\r\n                  onDelete={handleDelete}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </section>\r\n      </main>\r\n      \r\n      <footer className=\"footer\">\r\n        <p>© {new Date().getFullYear()} ECE Paris - Projet RSE</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n} \r\n\r\nexport default App;*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}