{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\RSE\\\\frontend\\\\src\\\\components\\\\Auth\\\\Login.js\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport fondsImage from \"../../fonds.jpg\"; // Ajustez le chemin selon votre structure\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  // ... le reste de votre code\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    style: {\n      backgroundImage: `url(${fondsImage})`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport \"./Auth.css\";\r\n\r\nconst Login = () => {\r\n  const { login, normalizeRole } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    setError(\"\"); // Clear error when user starts typing\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const { role } = await login(formData.email, formData.password);\r\n      const normalizedRole = normalizeRole(role);\r\n      \r\n      // Redirection basée sur le rôle\r\n      if (normalizedRole === \"admin\") {\r\n        navigate(\"/RSEPlatform\", { replace: true });\r\n      } else {\r\n        navigate(\"/dashboard\", { replace: true });\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      const errorMessage = err.response?.data?.message || \r\n                           err.response?.data?.error || \r\n                           \"Identifiants incorrects. Réessayez.\";\r\n      setError(errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion à GreenCampus</h2>\r\n\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n              disabled={isLoading}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n              disabled={isLoading}\r\n            />\r\n          </div>\r\n\r\n          <button \r\n            type=\"submit\" \r\n            className=\"auth-btn\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? \"Connexion...\" : \"Se connecter\"}\r\n          </button>\r\n        </form>\r\n\r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit ?{\" \"}\r\n          <span \r\n            className=\"auth-link\"\r\n            onClick={() => !isLoading && navigate(\"/register\")}\r\n          >\r\n            Créer un compte\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n*/\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","fondsImage","jsxDEV","_jsxDEV","Login","className","style","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/wamp64/www/RSE/frontend/src/components/Auth/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport fondsImage from \"../../fonds.jpg\"; // Ajustez le chemin selon votre structure\r\nimport \"./Auth.css\";\r\n\r\nconst Login = () => {\r\n  // ... le reste de votre code\r\n\r\n  return (\r\n    <div \r\n      className=\"auth-container\"\r\n      style={{ backgroundImage: `url(${fondsImage})` }}\r\n    >\r\n      {/* ... le reste de votre JSX */}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport \"./Auth.css\";\r\n\r\nconst Login = () => {\r\n  const { login, normalizeRole } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const [formData, setFormData] = useState({ email: \"\", password: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    setError(\"\"); // Clear error when user starts typing\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      const { role } = await login(formData.email, formData.password);\r\n      const normalizedRole = normalizeRole(role);\r\n      \r\n      // Redirection basée sur le rôle\r\n      if (normalizedRole === \"admin\") {\r\n        navigate(\"/RSEPlatform\", { replace: true });\r\n      } else {\r\n        navigate(\"/dashboard\", { replace: true });\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Login error:\", err);\r\n      const errorMessage = err.response?.data?.message || \r\n                           err.response?.data?.error || \r\n                           \"Identifiants incorrects. Réessayez.\";\r\n      setError(errorMessage);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Connexion à GreenCampus</h2>\r\n\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n              required\r\n              disabled={isLoading}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Mot de passe</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleChange}\r\n              required\r\n              disabled={isLoading}\r\n            />\r\n          </div>\r\n\r\n          <button \r\n            type=\"submit\" \r\n            className=\"auth-btn\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? \"Connexion...\" : \"Se connecter\"}\r\n          </button>\r\n        </form>\r\n\r\n        <p className=\"auth-footer\">\r\n          Pas encore inscrit ?{\" \"}\r\n          <span \r\n            className=\"auth-link\"\r\n            onClick={() => !isLoading && navigate(\"/register\")}\r\n          >\r\n            Créer un compte\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n*/\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,2BAA2B;AACnD,OAAOC,UAAU,MAAM,iBAAiB,CAAC,CAAC;AAC1C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB;;EAEA,oBACED,OAAA;IACEE,SAAS,EAAC,gBAAgB;IAC1BC,KAAK,EAAE;MAAEC,eAAe,EAAE,OAAON,UAAU;IAAI;EAAE;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAG9C,CAAC;AAEV,CAAC;;AAYD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnGAC,EAAA,GAvBMR,KAAK;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}