{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\RSE\\\\frontend\\\\src\\\\components\\\\ActionDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport \"./ActionDetail.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [action, setAction] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchAction = async () => {\n      try {\n        const token = localStorage.getItem(\"token\"); // üîë r√©cup√®re le JWT stock√©\n\n        if (!token) {\n          setError(\"‚ö†Ô∏è Vous devez √™tre connect√©\");\n          setLoading(false);\n          return;\n        }\n        const response = await fetch(`http://localhost:5000/api/action/${id}`, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}` // üîë Envoi du token\n          }\n        });\n        if (!response.ok) throw new Error(\"Erreur lors du chargement\");\n        const data = await response.json();\n\n        // Mapping backend -> frontend\n        setAction({\n          id: data.id,\n          title: data.titre,\n          description: data.description,\n          startDate: data.date_debut,\n          endDate: data.date_fin,\n          status: data.statut,\n          target: data.populations || \"Non d√©fini\",\n          actors: data.createur || \"Non d√©fini\",\n          resources: data.ressources || \"Non d√©fini\",\n          kpis: data.kpis || [],\n          materials: data.materials || [],\n          etablissement: data.etablissement_nom ? `${data.etablissement_nom} (${data.etablissement_type}, ${data.etablissement_localisation})` : \"Non d√©fini\"\n        });\n      } catch (err) {\n        console.error(\"‚ùå Erreur fetch action:\", err);\n        setError(\"Impossible de charger l'action\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAction();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Chargement...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 21\n  }, this);\n  if (!action) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: \"Action non trouv\\xE9e\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"action-detail\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/dashboard\",\n      className: \"back-link\",\n      children: \"\\u2190 Retour\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: action.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `status-badge ${action.status}`,\n        children: action.status === \"planifi√©\" ? \"Planifi√©e\" : action.status === \"en_cours\" ? \"En cours\" : action.status === \"termin√©\" ? \"Termin√©e\" : \"Inconnu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: action.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Dates:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 34\n      }, this), \" \", action.startDate, \" \\u2192 \", action.endDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Population:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 34\n      }, this), \" \", action.target]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Cr\\xE9ateur:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 34\n      }, this), \" \", action.actors]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\xC9tablissement:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 34\n      }, this), \" \", action.etablissement]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Ressources:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 34\n      }, this), \" \", action.resources]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"KPI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), action.kpis.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: action.kpis.map((k, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: k\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aucun KPI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionDetail, \"FMXNURonjOyZNomVq3H1XEOFu3w=\", false, function () {\n  return [useParams];\n});\n_c = ActionDetail;\nexport default ActionDetail;\n\n/*import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport \"./ActionDetail.css\";\r\n\r\nconst ActionDetail = () => {\r\n  const { id } = useParams();\r\n  const [action, setAction] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchAction = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\"); // r√©cup√®re le token JWT\r\n        if (!token) {\r\n          throw new Error(\"Utilisateur non connect√©\");\r\n        }\r\n\r\n        const response = await fetch(`http://localhost:5000/api/action/${id}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`, // üîë ajoute le token JWT\r\n          },\r\n        });\r\n\r\n        if (!response.ok) throw new Error(\"Erreur lors du chargement\");\r\n        const data = await response.json();\r\n\r\n        setAction({\r\n          id: data.id,\r\n          title: data.titre || \"Titre non disponible\",\r\n          description: data.description || \"Description non disponible\",\r\n          startDate: data.date_debut || \"Date non d√©finie\",\r\n          endDate: data.date_fin || \"Date non d√©finie\",\r\n          status: data.statut || \"inconnu\",\r\n          target: data.populations ? data.populations.join(\", \") : \"Non d√©fini\",\r\n          actors: data.createur\r\n            ? `${data.createur.prenom} ${data.createur.nom}`\r\n            : \"Non d√©fini\",\r\n          resources: data.ressources\r\n            ? data.ressources.map(\r\n                (r) => `${r.description} (${r.type}, ${r.quantite_utilisee})`\r\n              ).join(\", \")\r\n            : \"Non d√©fini\",\r\n          kpis: data.kpis\r\n            ? data.kpis.map(\r\n                (k) => `${k.nom} : ${k.valeur_cible} ${k.unite_mesure}`\r\n              )\r\n            : [],\r\n          materials: data.ressources\r\n            ? data.ressources.map((r) => r.description)\r\n            : [],\r\n          etablissement: data.etablissement_nom\r\n            ? `${data.etablissement_nom} (${data.etablissement_type}, ${data.etablissement_localisation})`\r\n            : \"Non d√©fini\",\r\n        });\r\n      } catch (error) {\r\n        console.error(\"‚ùå Erreur fetch action:\", error);\r\n        setError(\"Impossible de charger les d√©tails de l'action\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAction();\r\n  }, [id]);\r\n\r\n  if (loading) return <div className=\"loading\">Chargement...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n  if (!action) return <div className=\"error\">Action non trouv√©e</div>;\r\n\r\n  return (\r\n    <div className=\"action-detail\">\r\n      <Link to=\"/dashboard\" className=\"back-link\">‚Üê Retour au tableau de bord</Link>\r\n\r\n      <div className=\"action-header\">\r\n        <h1>{action.title}</h1>\r\n        <span className={`status-badge ${action.status}`}>\r\n          {action.status === \"planifi√©\" ? \"Planifi√©e\" :\r\n           action.status === \"en_cours\" ? \"En cours\" :\r\n           action.status === \"termin√©\" ? \"Termin√©e\" : \"Inconnu\"}\r\n        </span>\r\n      </div>\r\n\r\n      <p className=\"action-description\">{action.description}</p>\r\n\r\n      <div className=\"action-info-grid\">\r\n        <div className=\"info-card\">\r\n          <h3>Dates</h3>\r\n          <p>Du {action.startDate} au {action.endDate}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Population cible</h3>\r\n          <p>{action.target}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Cr√©ateur</h3>\r\n          <p>{action.actors}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>√âtablissement</h3>\r\n          <p>{action.etablissement}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Ressources n√©cessaires</h3>\r\n          <p>{action.resources}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"kpi-section\">\r\n        <h2>Indicateurs de performance (KPI)</h2>\r\n        {action.kpis.length > 0 ? (\r\n          <ul>\r\n            {action.kpis.map((kpi, index) => (\r\n              <li key={index}>{kpi}</li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>Aucun KPI d√©fini</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionDetail;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport \"./ActionDetail.css\";\r\n\r\nconst ActionDetail = () => {\r\n  const { id } = useParams();\r\n  const [action, setAction] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchAction = async () => {\r\n      try {\r\n       const fetchAction = async () => {\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/api/action/${id}`, {\r\n      credentials: \"include\",\r\n    });\r\n\r\n    if (!response.ok) throw new Error(\"Erreur lors du chargement\");\r\n\r\n    // üü¢ ici tu d√©finis \"data\"\r\n    const data = await response.json();\r\n\r\n    setAction({\r\n      id: data.id,\r\n      title: data.titre,\r\n      description: data.description,\r\n      startDate: data.date_debut,\r\n      endDate: data.date_fin,\r\n      status: data.statut,\r\n      target: data.target || \"Non d√©fini\",\r\n      actors: data.actors || \"Non d√©fini\",\r\n      resources: data.resources || \"Non d√©fini\",\r\n      kpis: data.kpis || [],\r\n      materials: data.materials || []\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error(\"‚ùå Erreur fetch action:\", error);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n        /**Correction de l'endpoint (suppression du 's' √† 'actions')\r\n        const response = await fetch(`http://localhost:5000/api/action/${id}`, {\r\n          credentials: \"include\",\r\n        });\r\n\r\n        if (!response.ok) throw new Error(\"Erreur lors du chargement\");\r\n        const data = await response.json();\r\n        \r\n        console.log(\"Donn√©es re√ßues:\", data); // Pour le d√©bogage*\r\n\r\n        // Mapping backend -> frontend avec des valeurs par d√©faut\r\n        setAction({\r\n          id: data.id || id,\r\n          title: data.titre || \"Titre non disponible\",\r\n          description: data.description || \"Description non disponible\",\r\n          startDate: data.date_debut || \"Date non d√©finie\",\r\n          endDate: data.date_fin || \"Date non d√©finie\",\r\n          status: data.statut || \"inconnu\",\r\n          target: data.populations ? data.populations.join(\", \") : \"Non d√©fini\",\r\n          actors: data.createur ? `${data.createur.prenom} ${data.createur.nom}` : \"Non d√©fini\",\r\n          resources: data.ressources ? \r\n            data.ressources.map(r => `${r.description} (${r.type}, ${r.quantite_utilisee})`).join(\", \") \r\n            : \"Non d√©fini\",\r\n          kpis: data.kpis ? \r\n            data.kpis.map(k => `${k.nom} : ${k.valeur_cible} ${k.unite_mesure}`) \r\n            : [],\r\n          materials: data.ressources ? \r\n            data.ressources.map(r => r.description) \r\n            : [],\r\n          etablissement: data.etablissement_nom ?\r\n            `${data.etablissement_nom} (${data.etablissement_type}, ${data.etablissement_localisation})`\r\n            : \"Non d√©fini\"\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error(\"‚ùå Erreur fetch action:\", error);\r\n        setError(\"Impossible de charger les d√©tails de l'action\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAction();\r\n  }, [id]);\r\n\r\n  if (loading) return <div className=\"loading\">Chargement...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n  if (!action) return <div className=\"error\">Action non trouv√©e</div>;\r\n\r\n  return (\r\n    <div className=\"action-detail\">\r\n      <Link to=\"/dashboard\" className=\"back-link\">‚Üê Retour au tableau de bord</Link>\r\n\r\n      <div className=\"action-header\">\r\n        <h1>{action.title}</h1>\r\n        <span className={`status-badge ${action.status}`}>\r\n          {action.status === \"planifi√©\" ? \"Planifi√©e\" :\r\n           action.status === \"en_cours\" ? \"En cours\" : \r\n           action.status === \"termin√©\" ? \"Termin√©e\" : \"Inconnu\"}\r\n        </span>\r\n      </div>\r\n\r\n      <p className=\"action-description\">{action.description}</p>\r\n\r\n      <div className=\"action-info-grid\">\r\n        <div className=\"info-card\">\r\n          <h3>Dates</h3>\r\n          <p>Du {action.startDate} au {action.endDate}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Population cible</h3>\r\n          <p>{action.target}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Cr√©ateur</h3>\r\n          <p>{action.actors}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>√âtablissement</h3>\r\n          <p>{action.etablissement}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Ressources n√©cessaires</h3>\r\n          <p>{action.resources}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"kpi-section\">\r\n        <h2>Indicateurs de performance (KPI)</h2>\r\n        {action.kpis.length > 0 ? (\r\n          <ul>\r\n            {action.kpis.map((kpi, index) => (\r\n              <li key={index}>{kpi}</li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>Aucun KPI d√©fini</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"materials-section\">\r\n        <h2>Mat√©riel de sensibilisation</h2>\r\n        {action.materials.length > 0 ? (\r\n          <div className=\"materials-list\">\r\n            {action.materials.map((material, index) => (\r\n              <div key={index} className=\"material-item\">\r\n                <span>{material}</span>\r\n                <button className=\"download-btn\">T√©l√©charger</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>Aucun mat√©riel disponible</p>\r\n        )}\r\n      </div>\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionDetail;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\n\r\nconst ActionDetail = () => {\r\n  const { id } = useParams();\r\n  const [action, setAction] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchAction = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/actions/${id}`, {\r\n          credentials: \"include\",\r\n        });\r\n\r\n        if (!response.ok) throw new Error(\"Erreur lors du chargement\");\r\n        const data = await response.json();\r\n\r\n        // Mapping backend -> frontend\r\n        setAction({\r\n          id: data.id,\r\n          title: data.titre,\r\n          description: data.description,\r\n          startDate: data.date_debut,\r\n          endDate: data.date_fin,\r\n          status: data.statut,\r\n          target: data.populations?.join(\", \") || \"Non d√©fini\",\r\n          actors: data.createur ? `${data.createur.prenom} ${data.createur.nom}` : \"Non d√©fini\",\r\n          resources: data.ressources?.map(\r\n            (r) => `${r.description} (${r.type}, ${r.quantite_utilisee})`\r\n          ).join(\", \") || \"Non d√©fini\",\r\n          kpis: data.kpis?.map(\r\n            (k) => `${k.nom} : ${k.valeur_cible} ${k.unite_mesure}`\r\n          ) || [],\r\n          materials: data.ressources?.map((r) => r.description) || [],\r\n          etablissement: data.etablissement_nom\r\n            ? `${data.etablissement_nom} (${data.etablissement_type}, ${data.etablissement_localisation})`\r\n            : \"Non d√©fini\"\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error(\"‚ùå Erreur fetch action:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAction();\r\n  }, [id]);\r\n\r\n  if (loading) return <div>Chargement...</div>;\r\n  if (!action) return <div>Action non trouv√©e</div>;\r\n\r\n  return (\r\n    <div className=\"action-detail\">\r\n      <Link to=\"/dashboard\" className=\"back-link\">‚Üê Retour au tableau de bord</Link>\r\n\r\n      <div className=\"action-header\">\r\n        <h1>{action.title}</h1>\r\n        <span className={`status-badge ${action.status}`}>\r\n          {action.status === \"planifi√©\" ? \"Planifi√©e\" :\r\n           action.status === \"en_cours\" ? \"En cours\" : \"Termin√©e\"}\r\n        </span>\r\n      </div>\r\n\r\n      <p className=\"action-description\">{action.description}</p>\r\n\r\n      <div className=\"action-info-grid\">\r\n        <div className=\"info-card\">\r\n          <h3>Dates</h3>\r\n          <p>Du {action.startDate} au {action.endDate}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Population cible</h3>\r\n          <p>{action.target}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Cr√©ateur</h3>\r\n          <p>{action.actors}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>√âtablissement</h3>\r\n          <p>{action.etablissement}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Ressources n√©cessaires</h3>\r\n          <p>{action.resources}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"kpi-section\">\r\n        <h2>Indicateurs de performance (KPI)</h2>\r\n        {action.kpis.length > 0 ? (\r\n          <ul>\r\n            {action.kpis.map((kpi, index) => (\r\n              <li key={index}>{kpi}</li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>Aucun KPI d√©fini</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"materials-section\">\r\n        <h2>Mat√©riel de sensibilisation</h2>\r\n        {action.materials.length > 0 ? (\r\n          <div className=\"materials-list\">\r\n            {action.materials.map((material, index) => (\r\n              <div key={index} className=\"material-item\">\r\n                <span>{material}</span>\r\n                <button className=\"download-btn\">T√©l√©charger</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>Aucun mat√©riel disponible</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"action-actions\">\r\n        <Link to={`/edit-action/${action.id}`} className=\"btn btn-primary\">Modifier</Link>\r\n        <button className=\"btn btn-secondary\">Exporter</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionDetail;\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"ActionDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","jsxDEV","_jsxDEV","ActionDetail","_s","id","action","setAction","loading","setLoading","error","setError","fetchAction","token","localStorage","getItem","response","fetch","headers","Authorization","ok","Error","data","json","title","titre","description","startDate","date_debut","endDate","date_fin","status","statut","target","populations","actors","createur","resources","ressources","kpis","materials","etablissement","etablissement_nom","etablissement_type","etablissement_localisation","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","length","map","k","i","_c","$RefreshReg$"],"sources":["C:/wamp64/www/RSE/frontend/src/components/ActionDetail.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport \"./ActionDetail.css\";\r\n\r\nconst ActionDetail = () => {\r\n  const { id } = useParams();\r\n  const [action, setAction] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchAction = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\"); // üîë r√©cup√®re le JWT stock√©\r\n\r\n        if (!token) {\r\n          setError(\"‚ö†Ô∏è Vous devez √™tre connect√©\");\r\n          setLoading(false);\r\n          return;\r\n        }\r\n\r\n        const response = await fetch(`http://localhost:5000/api/action/${id}`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`, // üîë Envoi du token\r\n          },\r\n        });\r\n\r\n        if (!response.ok) throw new Error(\"Erreur lors du chargement\");\r\n\r\n        const data = await response.json();\r\n\r\n        // Mapping backend -> frontend\r\n        setAction({\r\n          id: data.id,\r\n          title: data.titre,\r\n          description: data.description,\r\n          startDate: data.date_debut,\r\n          endDate: data.date_fin,\r\n          status: data.statut,\r\n          target: data.populations || \"Non d√©fini\",\r\n          actors: data.createur || \"Non d√©fini\",\r\n          resources: data.ressources || \"Non d√©fini\",\r\n          kpis: data.kpis || [],\r\n          materials: data.materials || [],\r\n          etablissement: data.etablissement_nom\r\n            ? `${data.etablissement_nom} (${data.etablissement_type}, ${data.etablissement_localisation})`\r\n            : \"Non d√©fini\",\r\n        });\r\n      } catch (err) {\r\n        console.error(\"‚ùå Erreur fetch action:\", err);\r\n        setError(\"Impossible de charger l'action\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAction();\r\n  }, [id]);\r\n\r\n  if (loading) return <div className=\"loading\">Chargement...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n  if (!action) return <div className=\"error\">Action non trouv√©e</div>;\r\n\r\n  return (\r\n    <div className=\"action-detail\">\r\n      <Link to=\"/dashboard\" className=\"back-link\">‚Üê Retour</Link>\r\n\r\n      <div className=\"action-header\">\r\n        <h1>{action.title}</h1>\r\n        <span className={`status-badge ${action.status}`}>\r\n          {action.status === \"planifi√©\" ? \"Planifi√©e\" :\r\n           action.status === \"en_cours\" ? \"En cours\" :\r\n           action.status === \"termin√©\" ? \"Termin√©e\" : \"Inconnu\"}\r\n        </span>\r\n      </div>\r\n\r\n      <p>{action.description}</p>\r\n\r\n      <div className=\"info-card\"><b>Dates:</b> {action.startDate} ‚Üí {action.endDate}</div>\r\n      <div className=\"info-card\"><b>Population:</b> {action.target}</div>\r\n      <div className=\"info-card\"><b>Cr√©ateur:</b> {action.actors}</div>\r\n      <div className=\"info-card\"><b>√âtablissement:</b> {action.etablissement}</div>\r\n      <div className=\"info-card\"><b>Ressources:</b> {action.resources}</div>\r\n\r\n      <h3>KPI</h3>\r\n      {action.kpis.length > 0 ? (\r\n        <ul>{action.kpis.map((k, i) => <li key={i}>{k}</li>)}</ul>\r\n      ) : <p>Aucun KPI</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionDetail;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport \"./ActionDetail.css\";\r\n\r\nconst ActionDetail = () => {\r\n  const { id } = useParams();\r\n  const [action, setAction] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchAction = async () => {\r\n      try {\r\n        const token = localStorage.getItem(\"token\"); // r√©cup√®re le token JWT\r\n        if (!token) {\r\n          throw new Error(\"Utilisateur non connect√©\");\r\n        }\r\n\r\n        const response = await fetch(`http://localhost:5000/api/action/${id}`, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`, // üîë ajoute le token JWT\r\n          },\r\n        });\r\n\r\n        if (!response.ok) throw new Error(\"Erreur lors du chargement\");\r\n        const data = await response.json();\r\n\r\n        setAction({\r\n          id: data.id,\r\n          title: data.titre || \"Titre non disponible\",\r\n          description: data.description || \"Description non disponible\",\r\n          startDate: data.date_debut || \"Date non d√©finie\",\r\n          endDate: data.date_fin || \"Date non d√©finie\",\r\n          status: data.statut || \"inconnu\",\r\n          target: data.populations ? data.populations.join(\", \") : \"Non d√©fini\",\r\n          actors: data.createur\r\n            ? `${data.createur.prenom} ${data.createur.nom}`\r\n            : \"Non d√©fini\",\r\n          resources: data.ressources\r\n            ? data.ressources.map(\r\n                (r) => `${r.description} (${r.type}, ${r.quantite_utilisee})`\r\n              ).join(\", \")\r\n            : \"Non d√©fini\",\r\n          kpis: data.kpis\r\n            ? data.kpis.map(\r\n                (k) => `${k.nom} : ${k.valeur_cible} ${k.unite_mesure}`\r\n              )\r\n            : [],\r\n          materials: data.ressources\r\n            ? data.ressources.map((r) => r.description)\r\n            : [],\r\n          etablissement: data.etablissement_nom\r\n            ? `${data.etablissement_nom} (${data.etablissement_type}, ${data.etablissement_localisation})`\r\n            : \"Non d√©fini\",\r\n        });\r\n      } catch (error) {\r\n        console.error(\"‚ùå Erreur fetch action:\", error);\r\n        setError(\"Impossible de charger les d√©tails de l'action\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAction();\r\n  }, [id]);\r\n\r\n  if (loading) return <div className=\"loading\">Chargement...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n  if (!action) return <div className=\"error\">Action non trouv√©e</div>;\r\n\r\n  return (\r\n    <div className=\"action-detail\">\r\n      <Link to=\"/dashboard\" className=\"back-link\">‚Üê Retour au tableau de bord</Link>\r\n\r\n      <div className=\"action-header\">\r\n        <h1>{action.title}</h1>\r\n        <span className={`status-badge ${action.status}`}>\r\n          {action.status === \"planifi√©\" ? \"Planifi√©e\" :\r\n           action.status === \"en_cours\" ? \"En cours\" :\r\n           action.status === \"termin√©\" ? \"Termin√©e\" : \"Inconnu\"}\r\n        </span>\r\n      </div>\r\n\r\n      <p className=\"action-description\">{action.description}</p>\r\n\r\n      <div className=\"action-info-grid\">\r\n        <div className=\"info-card\">\r\n          <h3>Dates</h3>\r\n          <p>Du {action.startDate} au {action.endDate}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Population cible</h3>\r\n          <p>{action.target}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Cr√©ateur</h3>\r\n          <p>{action.actors}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>√âtablissement</h3>\r\n          <p>{action.etablissement}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Ressources n√©cessaires</h3>\r\n          <p>{action.resources}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"kpi-section\">\r\n        <h2>Indicateurs de performance (KPI)</h2>\r\n        {action.kpis.length > 0 ? (\r\n          <ul>\r\n            {action.kpis.map((kpi, index) => (\r\n              <li key={index}>{kpi}</li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>Aucun KPI d√©fini</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionDetail;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport \"./ActionDetail.css\";\r\n\r\nconst ActionDetail = () => {\r\n  const { id } = useParams();\r\n  const [action, setAction] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchAction = async () => {\r\n      try {\r\n       const fetchAction = async () => {\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/api/action/${id}`, {\r\n      credentials: \"include\",\r\n    });\r\n\r\n    if (!response.ok) throw new Error(\"Erreur lors du chargement\");\r\n\r\n    // üü¢ ici tu d√©finis \"data\"\r\n    const data = await response.json();\r\n\r\n    setAction({\r\n      id: data.id,\r\n      title: data.titre,\r\n      description: data.description,\r\n      startDate: data.date_debut,\r\n      endDate: data.date_fin,\r\n      status: data.statut,\r\n      target: data.target || \"Non d√©fini\",\r\n      actors: data.actors || \"Non d√©fini\",\r\n      resources: data.resources || \"Non d√©fini\",\r\n      kpis: data.kpis || [],\r\n      materials: data.materials || []\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error(\"‚ùå Erreur fetch action:\", error);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n        /**Correction de l'endpoint (suppression du 's' √† 'actions')\r\n        const response = await fetch(`http://localhost:5000/api/action/${id}`, {\r\n          credentials: \"include\",\r\n        });\r\n\r\n        if (!response.ok) throw new Error(\"Erreur lors du chargement\");\r\n        const data = await response.json();\r\n        \r\n        console.log(\"Donn√©es re√ßues:\", data); // Pour le d√©bogage*\r\n\r\n        // Mapping backend -> frontend avec des valeurs par d√©faut\r\n        setAction({\r\n          id: data.id || id,\r\n          title: data.titre || \"Titre non disponible\",\r\n          description: data.description || \"Description non disponible\",\r\n          startDate: data.date_debut || \"Date non d√©finie\",\r\n          endDate: data.date_fin || \"Date non d√©finie\",\r\n          status: data.statut || \"inconnu\",\r\n          target: data.populations ? data.populations.join(\", \") : \"Non d√©fini\",\r\n          actors: data.createur ? `${data.createur.prenom} ${data.createur.nom}` : \"Non d√©fini\",\r\n          resources: data.ressources ? \r\n            data.ressources.map(r => `${r.description} (${r.type}, ${r.quantite_utilisee})`).join(\", \") \r\n            : \"Non d√©fini\",\r\n          kpis: data.kpis ? \r\n            data.kpis.map(k => `${k.nom} : ${k.valeur_cible} ${k.unite_mesure}`) \r\n            : [],\r\n          materials: data.ressources ? \r\n            data.ressources.map(r => r.description) \r\n            : [],\r\n          etablissement: data.etablissement_nom ?\r\n            `${data.etablissement_nom} (${data.etablissement_type}, ${data.etablissement_localisation})`\r\n            : \"Non d√©fini\"\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error(\"‚ùå Erreur fetch action:\", error);\r\n        setError(\"Impossible de charger les d√©tails de l'action\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAction();\r\n  }, [id]);\r\n\r\n  if (loading) return <div className=\"loading\">Chargement...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n  if (!action) return <div className=\"error\">Action non trouv√©e</div>;\r\n\r\n  return (\r\n    <div className=\"action-detail\">\r\n      <Link to=\"/dashboard\" className=\"back-link\">‚Üê Retour au tableau de bord</Link>\r\n\r\n      <div className=\"action-header\">\r\n        <h1>{action.title}</h1>\r\n        <span className={`status-badge ${action.status}`}>\r\n          {action.status === \"planifi√©\" ? \"Planifi√©e\" :\r\n           action.status === \"en_cours\" ? \"En cours\" : \r\n           action.status === \"termin√©\" ? \"Termin√©e\" : \"Inconnu\"}\r\n        </span>\r\n      </div>\r\n\r\n      <p className=\"action-description\">{action.description}</p>\r\n\r\n      <div className=\"action-info-grid\">\r\n        <div className=\"info-card\">\r\n          <h3>Dates</h3>\r\n          <p>Du {action.startDate} au {action.endDate}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Population cible</h3>\r\n          <p>{action.target}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Cr√©ateur</h3>\r\n          <p>{action.actors}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>√âtablissement</h3>\r\n          <p>{action.etablissement}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Ressources n√©cessaires</h3>\r\n          <p>{action.resources}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"kpi-section\">\r\n        <h2>Indicateurs de performance (KPI)</h2>\r\n        {action.kpis.length > 0 ? (\r\n          <ul>\r\n            {action.kpis.map((kpi, index) => (\r\n              <li key={index}>{kpi}</li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>Aucun KPI d√©fini</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"materials-section\">\r\n        <h2>Mat√©riel de sensibilisation</h2>\r\n        {action.materials.length > 0 ? (\r\n          <div className=\"materials-list\">\r\n            {action.materials.map((material, index) => (\r\n              <div key={index} className=\"material-item\">\r\n                <span>{material}</span>\r\n                <button className=\"download-btn\">T√©l√©charger</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>Aucun mat√©riel disponible</p>\r\n        )}\r\n      </div>\r\n\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionDetail;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\n\r\nconst ActionDetail = () => {\r\n  const { id } = useParams();\r\n  const [action, setAction] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchAction = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/actions/${id}`, {\r\n          credentials: \"include\",\r\n        });\r\n\r\n        if (!response.ok) throw new Error(\"Erreur lors du chargement\");\r\n        const data = await response.json();\r\n\r\n        // Mapping backend -> frontend\r\n        setAction({\r\n          id: data.id,\r\n          title: data.titre,\r\n          description: data.description,\r\n          startDate: data.date_debut,\r\n          endDate: data.date_fin,\r\n          status: data.statut,\r\n          target: data.populations?.join(\", \") || \"Non d√©fini\",\r\n          actors: data.createur ? `${data.createur.prenom} ${data.createur.nom}` : \"Non d√©fini\",\r\n          resources: data.ressources?.map(\r\n            (r) => `${r.description} (${r.type}, ${r.quantite_utilisee})`\r\n          ).join(\", \") || \"Non d√©fini\",\r\n          kpis: data.kpis?.map(\r\n            (k) => `${k.nom} : ${k.valeur_cible} ${k.unite_mesure}`\r\n          ) || [],\r\n          materials: data.ressources?.map((r) => r.description) || [],\r\n          etablissement: data.etablissement_nom\r\n            ? `${data.etablissement_nom} (${data.etablissement_type}, ${data.etablissement_localisation})`\r\n            : \"Non d√©fini\"\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error(\"‚ùå Erreur fetch action:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchAction();\r\n  }, [id]);\r\n\r\n  if (loading) return <div>Chargement...</div>;\r\n  if (!action) return <div>Action non trouv√©e</div>;\r\n\r\n  return (\r\n    <div className=\"action-detail\">\r\n      <Link to=\"/dashboard\" className=\"back-link\">‚Üê Retour au tableau de bord</Link>\r\n\r\n      <div className=\"action-header\">\r\n        <h1>{action.title}</h1>\r\n        <span className={`status-badge ${action.status}`}>\r\n          {action.status === \"planifi√©\" ? \"Planifi√©e\" :\r\n           action.status === \"en_cours\" ? \"En cours\" : \"Termin√©e\"}\r\n        </span>\r\n      </div>\r\n\r\n      <p className=\"action-description\">{action.description}</p>\r\n\r\n      <div className=\"action-info-grid\">\r\n        <div className=\"info-card\">\r\n          <h3>Dates</h3>\r\n          <p>Du {action.startDate} au {action.endDate}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Population cible</h3>\r\n          <p>{action.target}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Cr√©ateur</h3>\r\n          <p>{action.actors}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>√âtablissement</h3>\r\n          <p>{action.etablissement}</p>\r\n        </div>\r\n\r\n        <div className=\"info-card\">\r\n          <h3>Ressources n√©cessaires</h3>\r\n          <p>{action.resources}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"kpi-section\">\r\n        <h2>Indicateurs de performance (KPI)</h2>\r\n        {action.kpis.length > 0 ? (\r\n          <ul>\r\n            {action.kpis.map((kpi, index) => (\r\n              <li key={index}>{kpi}</li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>Aucun KPI d√©fini</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"materials-section\">\r\n        <h2>Mat√©riel de sensibilisation</h2>\r\n        {action.materials.length > 0 ? (\r\n          <div className=\"materials-list\">\r\n            {action.materials.map((material, index) => (\r\n              <div key={index} className=\"material-item\">\r\n                <span>{material}</span>\r\n                <button className=\"download-btn\">T√©l√©charger</button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>Aucun mat√©riel disponible</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"action-actions\">\r\n        <Link to={`/edit-action/${action.id}`} className=\"btn btn-primary\">Modifier</Link>\r\n        <button className=\"btn btn-secondary\">Exporter</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionDetail;\r\n\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}