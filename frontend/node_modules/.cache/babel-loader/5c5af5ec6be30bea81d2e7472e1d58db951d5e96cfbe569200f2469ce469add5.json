{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\RSE\\\\frontend\\\\src\\\\components\\\\ActionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ActionForm = ({\n  formData,\n  onChange,\n  onSubmit,\n  onCancel,\n  isEditing,\n  populations\n}) => {\n  _s();\n  const [newRessource, setNewRessource] = useState({\n    description: '',\n    type: 'matérielle',\n    quantite: 1\n  });\n  const [newKpi, setNewKpi] = useState({\n    nom: '',\n    valeur_cible: '',\n    unite_mesure: '',\n    periode_mesure: 'mensuel'\n  });\n  const handleRessourceChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewRessource(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleKpiChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewKpi(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const addRessource = () => {\n    if (newRessource.description) {\n      onChange({\n        target: {\n          name: 'ressources',\n          value: [...formData.ressources, newRessource]\n        }\n      });\n      setNewRessource({\n        description: '',\n        type: 'matérielle',\n        quantite: 1\n      });\n    }\n  };\n  const addKpi = () => {\n    if (newKpi.nom) {\n      onChange({\n        target: {\n          name: 'kpis',\n          value: [...formData.kpis, newKpi]\n        }\n      });\n      setNewKpi({\n        nom: '',\n        valeur_cible: '',\n        unite_mesure: '',\n        periode_mesure: 'mensuel'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: isEditing ? \"Modifier l'action RSE\" : \"Ajouter une nouvelle action RSE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      className: \"action-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"titre\",\n          children: \"Titre*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"titre\",\n          name: \"titre\",\n          value: formData.titre,\n          onChange: onChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          value: formData.description,\n          onChange: onChange,\n          required: true,\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date_debut\",\n            children: \"Date de d\\xE9but\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date_debut\",\n            name: \"date_debut\",\n            value: formData.date_debut,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date_fin\",\n            children: \"Date de fin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date_fin\",\n            name: \"date_fin\",\n            value: formData.date_fin,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"statut\",\n          children: \"Statut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"statut\",\n          name: \"statut\",\n          value: formData.statut,\n          onChange: onChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"planifi\\xE9\",\n            children: \"Planifi\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"en_cours\",\n            children: \"En cours\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"termin\\xE9\",\n            children: \"Termin\\xE9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Populations cibles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-group\",\n          children: populations.map(pop => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"populations\",\n              value: pop.type,\n              checked: formData.populations.includes(pop.type),\n              onChange: e => {\n                const newValues = e.target.checked ? [...formData.populations, pop.type] : formData.populations.filter(v => v !== pop.type);\n                onChange({\n                  target: {\n                    name: 'populations',\n                    value: newValues\n                  }\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 9\n            }, this), pop.type]\n          }, pop.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 7\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ActionForm, \"trPpx3gkRwiFhN7dJY+3YNGc2fI=\");\n_c = ActionForm;\nexport default ActionForm;\n\n/*import React from 'react';\r\n\r\nconst ActionForm = ({ \r\n  formData, \r\n  onChange, \r\n  onSubmit, \r\n  onCancel, \r\n  isEditing \r\n}) => {\r\n  return (\r\n    <div className=\"form-section\">\r\n      <h2 className=\"form-title\">\r\n        {isEditing ? \"Modifier l'action\" : \"Ajouter une nouvelle action\"}\r\n      </h2>\r\n      \r\n      <form onSubmit={onSubmit} className=\"action-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">Titre*</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            value={formData.title}\r\n            onChange={onChange}\r\n            required\r\n            placeholder=\"Titre de l'action RSE\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"details\">Détails*</label>\r\n          <textarea\r\n            id=\"details\"\r\n            name=\"details\"\r\n            value={formData.details}\r\n            onChange={onChange}\r\n            required\r\n            placeholder=\"Description détaillée de l'action\"\r\n            rows=\"4\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"population\">Population cible</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"population\"\r\n              name=\"population\"\r\n              value={formData.population}\r\n              onChange={onChange}\r\n              placeholder=\"Qui est concerné?\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"ressources\">Ressources nécessaires</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"ressources\"\r\n              name=\"ressources\"\r\n              value={formData.ressources}\r\n              onChange={onChange}\r\n              placeholder=\"Matériel, budget, personnel...\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"kpi\">Indicateur KPI</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"kpi\"\r\n            name=\"kpi\"\r\n            value={formData.kpi}\r\n            onChange={onChange}\r\n            placeholder=\"Comment mesurer le succès?\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-buttons\">\r\n          <button \r\n            type=\"submit\" \r\n            className=\"submit-btn primary-btn\"\r\n          >\r\n            {isEditing ? \"Mettre à jour\" : \"Ajouter l'action\"}\r\n          </button>\r\n          \r\n          {isEditing && (\r\n            <button \r\n              type=\"button\" \r\n              className=\"cancel-btn secondary-btn\"\r\n              onClick={onCancel}\r\n            >\r\n              Annuler\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export par défaut obligatoire\r\nexport default ActionForm;*/\nvar _c;\n$RefreshReg$(_c, \"ActionForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ActionForm","formData","onChange","onSubmit","onCancel","isEditing","populations","_s","newRessource","setNewRessource","description","type","quantite","newKpi","setNewKpi","nom","valeur_cible","unite_mesure","periode_mesure","handleRessourceChange","e","name","value","target","prev","handleKpiChange","addRessource","ressources","addKpi","kpis","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","titre","required","rows","date_debut","date_fin","statut","map","pop","checked","includes","newValues","filter","v","_c","$RefreshReg$"],"sources":["C:/wamp64/www/RSE/frontend/src/components/ActionForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst ActionForm = ({ \r\n  formData, \r\n  onChange, \r\n  onSubmit, \r\n  onCancel, \r\n  isEditing,\r\n  populations\r\n}) => {\r\n  const [newRessource, setNewRessource] = useState({ description: '', type: 'matérielle', quantite: 1 });\r\n  const [newKpi, setNewKpi] = useState({ nom: '', valeur_cible: '', unite_mesure: '', periode_mesure: 'mensuel' });\r\n\r\n  const handleRessourceChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewRessource(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleKpiChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewKpi(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const addRessource = () => {\r\n    if (newRessource.description) {\r\n      onChange({\r\n        target: {\r\n          name: 'ressources',\r\n          value: [...formData.ressources, newRessource]\r\n        }\r\n      });\r\n      setNewRessource({ description: '', type: 'matérielle', quantite: 1 });\r\n    }\r\n  };\r\n\r\n  const addKpi = () => {\r\n    if (newKpi.nom) {\r\n      onChange({\r\n        target: {\r\n          name: 'kpis',\r\n          value: [...formData.kpis, newKpi]\r\n        }\r\n      });\r\n      setNewKpi({ nom: '', valeur_cible: '', unite_mesure: '', periode_mesure: 'mensuel' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-section\">\r\n      <h2 className=\"form-title\">\r\n        {isEditing ? \"Modifier l'action RSE\" : \"Ajouter une nouvelle action RSE\"}\r\n      </h2>\r\n      \r\n      <form onSubmit={onSubmit} className=\"action-form\">\r\n        {/* Champs de base */}\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"titre\">Titre*</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"titre\"\r\n            name=\"titre\"\r\n            value={formData.titre}\r\n            onChange={onChange}\r\n            required\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"description\">Description*</label>\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            value={formData.description}\r\n            onChange={onChange}\r\n            required\r\n            rows=\"4\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date_debut\">Date de début</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date_debut\"\r\n              name=\"date_debut\"\r\n              value={formData.date_debut}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date_fin\">Date de fin</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date_fin\"\r\n              name=\"date_fin\"\r\n              value={formData.date_fin}\r\n              onChange={onChange}\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"statut\">Statut</label>\r\n          <select\r\n            id=\"statut\"\r\n            name=\"statut\"\r\n            value={formData.statut}\r\n            onChange={onChange}\r\n          >\r\n            <option value=\"planifié\">Planifié</option>\r\n            <option value=\"en_cours\">En cours</option>\r\n            <option value=\"terminé\">Terminé</option>\r\n          </select>\r\n        </div>\r\n        \r\n        {/* Populations cibles */}\r\n<div className=\"form-group\">\r\n  <label>Populations cibles</label>\r\n  <div className=\"checkbox-group\">\r\n    {populations.map(pop => (\r\n      <label key={pop.id} className=\"checkbox-item\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"populations\"\r\n          value={pop.type}\r\n          checked={formData.populations.includes(pop.type)}\r\n          onChange={(e) => {\r\n            const newValues = e.target.checked\r\n              ? [...formData.populations, pop.type]\r\n              : formData.populations.filter(v => v !== pop.type);\r\n            onChange({\r\n              target: {\r\n                name: 'populations',\r\n                value: newValues\r\n              }\r\n            });\r\n          }}\r\n        />\r\n        {pop.type}\r\n      </label>\r\n    ))}\r\n  </div>\r\n</div>\r\n\r\n\r\n       {/* <div className=\"form-group\">\r\n          <label>Populations cibles</label>\r\n          <div className=\"checkbox-group\">\r\n            {populations.map(pop => (\r\n              <label key={pop.id}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  name=\"populations\"\r\n                  value={pop.type}\r\n                  checked={formData.populations.includes(pop.type)}\r\n                  onChange={(e) => {\r\n                    const newValues = e.target.checked\r\n                      ? [...formData.populations, pop.type]\r\n                      : formData.populations.filter(v => v !== pop.type);\r\n                    onChange({\r\n                      target: {\r\n                        name: 'populations',\r\n                        value: newValues\r\n                      }\r\n                    });\r\n                  }}\r\n                />\r\n                {pop.type}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        </div> }\r\n        \r\n        {/* Ressources *\r\n        <div className=\"form-group\">\r\n          <label>Ressources</label>\r\n          {formData.ressources.map((res, index) => (\r\n            <div key={index} className=\"resource-item\">\r\n              <div>{res.description} ({res.type}, quantité: {res.quantite})</div>\r\n            </div>\r\n          ))}\r\n          <div className=\"form-row\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Description\"\r\n              name=\"description\"\r\n              value={newRessource.description}\r\n              onChange={handleRessourceChange}\r\n            />\r\n            <select\r\n              name=\"type\"\r\n              value={newRessource.type}\r\n              onChange={handleRessourceChange}\r\n            >\r\n              <option value=\"matérielle\">Matérielle</option>\r\n              <option value=\"humaine\">Humaine</option>\r\n              <option value=\"financière\">Financière</option>\r\n            </select>\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Quantité\"\r\n              name=\"quantite\"\r\n              value={newRessource.quantite}\r\n              onChange={handleRessourceChange}\r\n              min=\"1\"\r\n            />\r\n            <button type=\"button\" onClick={addRessource}>Ajouter</button>\r\n          </div>\r\n        </div>\r\n        \r\n        {/* KPIs *\r\n        <div className=\"form-group\">\r\n          <label>Indicateurs KPI</label>\r\n          {formData.kpis.map((kpi, index) => (\r\n            <div key={index} className=\"kpi-item\">\r\n              <div>{kpi.nom} ({kpi.valeur_cible} {kpi.unite_mesure})</div>\r\n            </div>\r\n          ))}\r\n          <div className=\"form-row\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Nom\"\r\n              name=\"nom\"\r\n              value={newKpi.nom}\r\n              onChange={handleKpiChange}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              placeholder=\"Valeur cible\"\r\n              name=\"valeur_cible\"\r\n              value={newKpi.valeur_cible}\r\n              onChange={handleKpiChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Unité\"\r\n              name=\"unite_mesure\"\r\n              value={newKpi.unite_mesure}\r\n              onChange={handleKpiChange}\r\n            />\r\n            <select\r\n              name=\"periode_mesure\"\r\n              value={newKpi.periode_mesure}\r\n              onChange={handleKpiChange}\r\n            >\r\n              <option value=\"journalier\">Journalier</option>\r\n              <option value=\"hebdomadaire\">Hebdomadaire</option>\r\n              <option value=\"mensuel\">Mensuel</option>\r\n            </select>\r\n            <button type=\"button\" onClick={addKpi}>Ajouter</button>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"form-buttons\">\r\n          <button type=\"submit\" className=\"submit-btn primary-btn\">\r\n            {isEditing ? \"Mettre à jour\" : \"Ajouter l'action\"}\r\n          </button>\r\n          \r\n          {isEditing && (\r\n            <button type=\"button\" className=\"cancel-btn secondary-btn\" onClick={onCancel}>\r\n              Annuler\r\n            </button>\r\n          )}\r\n        </div>*/}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActionForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*import React from 'react';\r\n\r\nconst ActionForm = ({ \r\n  formData, \r\n  onChange, \r\n  onSubmit, \r\n  onCancel, \r\n  isEditing \r\n}) => {\r\n  return (\r\n    <div className=\"form-section\">\r\n      <h2 className=\"form-title\">\r\n        {isEditing ? \"Modifier l'action\" : \"Ajouter une nouvelle action\"}\r\n      </h2>\r\n      \r\n      <form onSubmit={onSubmit} className=\"action-form\">\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">Titre*</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            value={formData.title}\r\n            onChange={onChange}\r\n            required\r\n            placeholder=\"Titre de l'action RSE\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"details\">Détails*</label>\r\n          <textarea\r\n            id=\"details\"\r\n            name=\"details\"\r\n            value={formData.details}\r\n            onChange={onChange}\r\n            required\r\n            placeholder=\"Description détaillée de l'action\"\r\n            rows=\"4\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-row\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"population\">Population cible</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"population\"\r\n              name=\"population\"\r\n              value={formData.population}\r\n              onChange={onChange}\r\n              placeholder=\"Qui est concerné?\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"ressources\">Ressources nécessaires</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"ressources\"\r\n              name=\"ressources\"\r\n              value={formData.ressources}\r\n              onChange={onChange}\r\n              placeholder=\"Matériel, budget, personnel...\"\r\n            />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"kpi\">Indicateur KPI</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"kpi\"\r\n            name=\"kpi\"\r\n            value={formData.kpi}\r\n            onChange={onChange}\r\n            placeholder=\"Comment mesurer le succès?\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-buttons\">\r\n          <button \r\n            type=\"submit\" \r\n            className=\"submit-btn primary-btn\"\r\n          >\r\n            {isEditing ? \"Mettre à jour\" : \"Ajouter l'action\"}\r\n          </button>\r\n          \r\n          {isEditing && (\r\n            <button \r\n              type=\"button\" \r\n              className=\"cancel-btn secondary-btn\"\r\n              onClick={onCancel}\r\n            >\r\n              Annuler\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export par défaut obligatoire\r\nexport default ActionForm;*/"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}